/**
 */
package org.wbsilva.bx.sourcecode2controlflow.Rules;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EOperation;
import org.eclipse.emf.ecore.EPackage;

import org.moflon.tgg.runtime.RuntimePackage;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each operation of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.RulesFactory
 * @model kind="package"
 * @generated
 */
public interface RulesPackage extends EPackage {
	/**
	 * The package name.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	String eNAME = "Rules";

	/**
	 * The package namespace URI.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	String eNS_URI = "platform:/plugin/org.wbsilva.bx.sourcecode2controlflow/model/Sourcecode2controlflow.ecore#//Rules";

	/**
	 * The package namespace name.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	String eNS_PREFIX = "Rules";

	/**
	 * The singleton instance of the package.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	RulesPackage eINSTANCE = org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl.init();

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.next2nextImpl <em>next2next</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.next2nextImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getnext2next()
	 * @generated
	 */
	int NEXT2NEXT = 0;

	/**
	 * The number of structural features of the '<em>next2next</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___IS_APPROPRIATE_FWD__MATCH_STATEMENT_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_STATEMENT_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_STATEMENT_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_STATEMENT_S2N_S2N_COMMAND_NODE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___IS_APPROPRIATE_BWD__MATCH_COMMAND_NODE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_COMMAND_NODE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_COMMAND_NODE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_STATEMENT_S2N_S2N_COMMAND_NODE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 62</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___IS_APPROPRIATE_BWD_EMOFLON_EDGE_62__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 68</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___IS_APPROPRIATE_FWD_EMOFLON_EDGE_68__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___IS_APPLICABLE_SOLVE_CSP_CC__STATEMENT_COMMAND_NODE_ASSIGNMENT_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___CHECK_DEC_FWD__STATEMENT_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___CHECK_DEC_BWD__COMMAND_NODE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___GENERATE_MODEL__RULEENTRYCONTAINER_S2N_S2N = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_STATEMENT_S2N_S2N_COMMAND_NODE_ASSIGNMENT_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>next2next</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NEXT2NEXT_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.assignment2commandImpl <em>assignment2command</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.assignment2commandImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getassignment2command()
	 * @generated
	 */
	int ASSIGNMENT2COMMAND = 1;

	/**
	 * The number of structural features of the '<em>assignment2command</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___IS_APPROPRIATE_FWD__MATCH_ASSIGNMENT_STATEMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_ASSIGNMENT_STATEMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_ASSIGNMENT_STATEMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_ASSIGNMENT_NODE_STATEMENT_S2N = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___IS_APPROPRIATE_BWD__MATCH_NODE_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_NODE_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_NODE_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_NODE_STATEMENT_S2N_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 63</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___IS_APPROPRIATE_BWD_EMOFLON_EDGE_63__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 69</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___IS_APPROPRIATE_FWD_EMOFLON_EDGE_69__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___IS_APPLICABLE_SOLVE_CSP_CC__ASSIGNMENT_NODE_STATEMENT_COMMAND_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___CHECK_DEC_FWD__ASSIGNMENT_STATEMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___CHECK_DEC_BWD__NODE_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___GENERATE_MODEL__RULEENTRYCONTAINER_S2N = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_NODE_STATEMENT_S2N_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>assignment2command</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT2COMMAND_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whilelul2branchbubImpl <em>whilelul2branchbub</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whilelul2branchbubImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getwhilelul2branchbub()
	 * @generated
	 */
	int WHILELUL2BRANCHBUB = 2;

	/**
	 * The number of structural features of the '<em>whilelul2branchbub</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___IS_APPROPRIATE_FWD__MATCH_WHILE_WHILE_WHILE_ASSIGNMENT_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_WHILE_WHILE_WHILE_ASSIGNMENT_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_WHILE_WHILE_WHILE_ASSIGNMENT_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_WHILE_BRANCH_WHILE_WHILE_ASSIGNMENT_S2B_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___IS_APPROPRIATE_BWD__MATCH_BRANCH_BRANCH_BRANCH_COMMAND_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_BRANCH_BRANCH_BRANCH_COMMAND_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_BRANCH_BRANCH_BRANCH_COMMAND_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_BRANCH_BRANCH_COMMAND_WHILE_COMMAND_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 64</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___IS_APPROPRIATE_BWD_EMOFLON_EDGE_64__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 70</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___IS_APPROPRIATE_FWD_EMOFLON_EDGE_70__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___IS_APPLICABLE_SOLVE_CSP_CC__WHILE_BRANCH_BRANCH_BRANCH_COMMAND_WHILE_WHILE_ASSIGNMENT_COMMAND_ASSIGNMENT_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___CHECK_DEC_FWD__WHILE_WHILE_WHILE_ASSIGNMENT_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___CHECK_DEC_BWD__BRANCH_BRANCH_BRANCH_COMMAND_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_WHILE_S2B_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>whilelul2branchbub</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELUL2BRANCHBUB_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decdul2branchbubImpl <em>decdul2branchbub</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decdul2branchbubImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getdecdul2branchbub()
	 * @generated
	 */
	int DECDUL2BRANCHBUB = 3;

	/**
	 * The number of structural features of the '<em>decdul2branchbub</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___IS_APPROPRIATE_FWD__MATCH_ASSIGNMENT_DECISION_WHILE_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_ASSIGNMENT_DECISION_WHILE_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_ASSIGNMENT_DECISION_WHILE_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_ASSIGNMENT_S2B_DECISION_WHILE_DECISION_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___IS_APPROPRIATE_BWD__MATCH_BRANCH_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_BRANCH_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_BRANCH_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_S2B_DECISION_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 65</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___IS_APPROPRIATE_BWD_EMOFLON_EDGE_65__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 71</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___IS_APPROPRIATE_FWD_EMOFLON_EDGE_71__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___IS_APPLICABLE_SOLVE_CSP_CC__ASSIGNMENT_BRANCH_DECISION_WHILE_DECISION_BRANCH_COMMAND_BRANCH_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___CHECK_DEC_FWD__ASSIGNMENT_DECISION_WHILE_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___CHECK_DEC_BWD__BRANCH_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2B_DECISION_BRANCH_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>decdul2branchbub</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDUL2BRANCHBUB_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decld2branchbbImpl <em>decld2branchbb</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decld2branchbbImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getdecld2branchbb()
	 * @generated
	 */
	int DECLD2BRANCHBB = 4;

	/**
	 * The number of structural features of the '<em>decld2branchbb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___IS_APPROPRIATE_FWD__MATCH_WHILE_DECISION_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_WHILE_DECISION_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_WHILE_DECISION_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_S2B_WHILE_DECISION_DECISION_BRANCH_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___IS_APPROPRIATE_BWD__MATCH_BRANCH_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_BRANCH_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_BRANCH_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2B_DECISION_BRANCH_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 66</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___IS_APPROPRIATE_BWD_EMOFLON_EDGE_66__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 72</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___IS_APPROPRIATE_FWD_EMOFLON_EDGE_72__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___IS_APPLICABLE_SOLVE_CSP_CC__WHILE_DECISION_DECISION_BRANCH_BRANCH_ASSIGNMENT_COMMAND_BRANCH_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___CHECK_DEC_FWD__WHILE_DECISION_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___CHECK_DEC_BWD__BRANCH_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2B_DECISION_BRANCH_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>decld2branchbb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLD2BRANCHBB_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.deculul2branchububImpl <em>deculul2branchubub</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.deculul2branchububImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getdeculul2branchubub()
	 * @generated
	 */
	int DECULUL2BRANCHUBUB = 5;

	/**
	 * The number of structural features of the '<em>deculul2branchubub</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___IS_APPROPRIATE_FWD__MATCH_ASSIGNMENT_DECISION_WHILE_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_ASSIGNMENT_DECISION_WHILE_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_ASSIGNMENT_DECISION_WHILE_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_S2B_ASSIGNMENT_DECISION_WHILE_ASSIGNMENT_BRANCH_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___IS_APPROPRIATE_BWD__MATCH_COMMAND_BRANCH_BRANCH_BRANCH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_COMMAND_BRANCH_BRANCH_BRANCH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_COMMAND_BRANCH_BRANCH_BRANCH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2B_COMMAND_BRANCH_BRANCH_DECISION_BRANCH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 67</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___IS_APPROPRIATE_BWD_EMOFLON_EDGE_67__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 73</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___IS_APPROPRIATE_FWD_EMOFLON_EDGE_73__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___IS_APPLICABLE_SOLVE_CSP_CC__COMMAND_BRANCH_BRANCH_ASSIGNMENT_DECISION_WHILE_ASSIGNMENT_BRANCH_COMMAND_WHILE_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___CHECK_DEC_FWD__ASSIGNMENT_DECISION_WHILE_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___CHECK_DEC_BWD__COMMAND_BRANCH_BRANCH_BRANCH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2B_DECISION_BRANCH_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>deculul2branchubub</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULUL2BRANCHUBUB_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whileaa2branchccImpl <em>whileaa2branchcc</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whileaa2branchccImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getwhileaa2branchcc()
	 * @generated
	 */
	int WHILEAA2BRANCHCC = 6;

	/**
	 * The number of structural features of the '<em>whileaa2branchcc</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___IS_APPROPRIATE_FWD__MATCH_ASSIGNMENT_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_ASSIGNMENT_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_ASSIGNMENT_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_S2B_BRANCH_ASSIGNMENT_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___IS_APPROPRIATE_BWD__MATCH_BRANCH_COMMAND_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_BRANCH_COMMAND_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_BRANCH_COMMAND_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2B_BRANCH_COMMAND_COMMAND_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 68</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___IS_APPROPRIATE_BWD_EMOFLON_EDGE_68__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 74</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___IS_APPROPRIATE_FWD_EMOFLON_EDGE_74__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___IS_APPLICABLE_SOLVE_CSP_CC__BRANCH_ASSIGNMENT_COMMAND_COMMAND_WHILE_ASSIGNMENT_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___CHECK_DEC_FWD__ASSIGNMENT_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___CHECK_DEC_BWD__BRANCH_COMMAND_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2B_BRANCH_WHILE_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>whileaa2branchcc</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAA2BRANCHCC_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decula2branchubcImpl <em>decula2branchubc</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decula2branchubcImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getdecula2branchubc()
	 * @generated
	 */
	int DECULA2BRANCHUBC = 7;

	/**
	 * The number of structural features of the '<em>decula2branchubc</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___IS_APPROPRIATE_FWD__MATCH_ASSIGNMENT_WHILE_ASSIGNMENT_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_ASSIGNMENT_WHILE_ASSIGNMENT_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_ASSIGNMENT_WHILE_ASSIGNMENT_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_ASSIGNMENT_S2B_WHILE_ASSIGNMENT_DECISION_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___IS_APPROPRIATE_BWD__MATCH_BRANCH_COMMAND_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_BRANCH_COMMAND_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_BRANCH_COMMAND_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2B_BRANCH_COMMAND_COMMAND_DECISION_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 69</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___IS_APPROPRIATE_BWD_EMOFLON_EDGE_69__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 75</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___IS_APPROPRIATE_FWD_EMOFLON_EDGE_75__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___IS_APPLICABLE_SOLVE_CSP_CC__ASSIGNMENT_WHILE_BRANCH_COMMAND_ASSIGNMENT_COMMAND_DECISION_BRANCH_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___CHECK_DEC_FWD__ASSIGNMENT_WHILE_ASSIGNMENT_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___CHECK_DEC_BWD__BRANCH_COMMAND_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2B_DECISION_BRANCH_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>decula2branchubc</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULA2BRANCHUBC_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decdecdec2branchbranchbranchImpl <em>decdecdec2branchbranchbranch</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decdecdec2branchbranchbranchImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getdecdecdec2branchbranchbranch()
	 * @generated
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH = 8;

	/**
	 * The number of structural features of the '<em>decdecdec2branchbranchbranch</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___IS_APPROPRIATE_FWD__MATCH_DECISION_DECISION_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_DECISION_DECISION_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_DECISION_DECISION_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_DECISION_S2B_BRANCH_DECISION_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___IS_APPROPRIATE_BWD__MATCH_BRANCH_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_BRANCH_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_BRANCH_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2B_BRANCH_BRANCH_DECISION_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 70</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___IS_APPROPRIATE_BWD_EMOFLON_EDGE_70__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 76</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___IS_APPROPRIATE_FWD_EMOFLON_EDGE_76__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___IS_APPLICABLE_SOLVE_CSP_CC__DECISION_BRANCH_BRANCH_DECISION_BRANCH_DECISION_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___CHECK_DEC_FWD__DECISION_DECISION_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___CHECK_DEC_BWD__BRANCH_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2B_BRANCH_DECISION_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 31;

	/**
	 * The number of operations of the '<em>decdecdec2branchbranchbranch</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECDEC2BRANCHBRANCHBRANCH_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decll2branchbbImpl <em>decll2branchbb</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decll2branchbbImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getdecll2branchbb()
	 * @generated
	 */
	int DECLL2BRANCHBB = 9;

	/**
	 * The number of structural features of the '<em>decll2branchbb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___IS_APPROPRIATE_FWD__MATCH_WHILE_WHILE_ASSIGNMENT_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_WHILE_WHILE_ASSIGNMENT_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_WHILE_WHILE_ASSIGNMENT_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_S2B_WHILE_WHILE_ASSIGNMENT_DECISION_ASSIGNMENT_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___IS_APPROPRIATE_BWD__MATCH_BRANCH_COMMAND_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_BRANCH_COMMAND_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_BRANCH_COMMAND_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2B_BRANCH_COMMAND_BRANCH_DECISION_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 71</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___IS_APPROPRIATE_BWD_EMOFLON_EDGE_71__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 77</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___IS_APPROPRIATE_FWD_EMOFLON_EDGE_77__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___IS_APPLICABLE_SOLVE_CSP_CC__WHILE_BRANCH_COMMAND_BRANCH_WHILE_ASSIGNMENT_DECISION_COMMAND_ASSIGNMENT_BRANCH_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___CHECK_DEC_FWD__WHILE_WHILE_ASSIGNMENT_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___CHECK_DEC_BWD__BRANCH_COMMAND_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2B_DECISION_BRANCH_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>decll2branchbb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLL2BRANCHBB_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decaul2branchcubImpl <em>decaul2branchcub</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decaul2branchcubImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getdecaul2branchcub()
	 * @generated
	 */
	int DECAUL2BRANCHCUB = 10;

	/**
	 * The number of structural features of the '<em>decaul2branchcub</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___IS_APPROPRIATE_FWD__MATCH_ASSIGNMENT_WHILE_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_ASSIGNMENT_WHILE_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_ASSIGNMENT_WHILE_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_BRANCH_S2B_ASSIGNMENT_WHILE_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___IS_APPROPRIATE_BWD__MATCH_BRANCH_COMMAND_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_BRANCH_COMMAND_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_BRANCH_COMMAND_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_S2B_COMMAND_COMMAND_BRANCH_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 72</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___IS_APPROPRIATE_BWD_EMOFLON_EDGE_72__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 78</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___IS_APPROPRIATE_FWD_EMOFLON_EDGE_78__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___IS_APPLICABLE_SOLVE_CSP_CC__BRANCH_COMMAND_COMMAND_ASSIGNMENT_WHILE_BRANCH_DECISION_ASSIGNMENT_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___CHECK_DEC_FWD__ASSIGNMENT_WHILE_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___CHECK_DEC_BWD__BRANCH_COMMAND_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_S2B_DECISION_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>decaul2branchcub</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAUL2BRANCHCUB_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decull2branchubbImpl <em>decull2branchubb</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decull2branchubbImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getdecull2branchubb()
	 * @generated
	 */
	int DECULL2BRANCHUBB = 11;

	/**
	 * The number of structural features of the '<em>decull2branchubb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___IS_APPROPRIATE_FWD__MATCH_WHILE_ASSIGNMENT_WHILE_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_WHILE_ASSIGNMENT_WHILE_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_WHILE_ASSIGNMENT_WHILE_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_WHILE_ASSIGNMENT_WHILE_S2B_DECISION_BRANCH_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___IS_APPROPRIATE_BWD__MATCH_BRANCH_BRANCH_BRANCH_COMMAND_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_BRANCH_BRANCH_BRANCH_COMMAND_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_BRANCH_BRANCH_BRANCH_COMMAND_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_BRANCH_S2B_DECISION_BRANCH_COMMAND_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 73</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___IS_APPROPRIATE_BWD_EMOFLON_EDGE_73__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 79</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___IS_APPROPRIATE_FWD_EMOFLON_EDGE_79__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___IS_APPLICABLE_SOLVE_CSP_CC__WHILE_ASSIGNMENT_BRANCH_BRANCH_WHILE_DECISION_BRANCH_COMMAND_COMMAND_ASSIGNMENT_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___CHECK_DEC_FWD__WHILE_ASSIGNMENT_WHILE_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___CHECK_DEC_BWD__BRANCH_BRANCH_BRANCH_COMMAND_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2B_DECISION_BRANCH_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>decull2branchubb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULL2BRANCHUBB_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whilead2branchcbImpl <em>whilead2branchcb</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whilead2branchcbImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getwhilead2branchcb()
	 * @generated
	 */
	int WHILEAD2BRANCHCB = 12;

	/**
	 * The number of structural features of the '<em>whilead2branchcb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___IS_APPROPRIATE_FWD__MATCH_ASSIGNMENT_WHILE_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_ASSIGNMENT_WHILE_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_ASSIGNMENT_WHILE_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_ASSIGNMENT_BRANCH_WHILE_DECISION_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___IS_APPROPRIATE_BWD__MATCH_BRANCH_BRANCH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_BRANCH_BRANCH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_BRANCH_BRANCH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_BRANCH_WHILE_COMMAND_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 74</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___IS_APPROPRIATE_BWD_EMOFLON_EDGE_74__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 80</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___IS_APPROPRIATE_FWD_EMOFLON_EDGE_80__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___IS_APPLICABLE_SOLVE_CSP_CC__ASSIGNMENT_BRANCH_BRANCH_WHILE_DECISION_COMMAND_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___CHECK_DEC_FWD__ASSIGNMENT_WHILE_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___CHECK_DEC_BWD__BRANCH_BRANCH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_WHILE_S2B_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>whilead2branchcb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAD2BRANCHCB_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whileuld2branchubbImpl <em>whileuld2branchubb</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whileuld2branchubbImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getwhileuld2branchubb()
	 * @generated
	 */
	int WHILEULD2BRANCHUBB = 13;

	/**
	 * The number of structural features of the '<em>whileuld2branchubb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___IS_APPROPRIATE_FWD__MATCH_WHILE_DECISION_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_WHILE_DECISION_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_WHILE_DECISION_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_WHILE_DECISION_ASSIGNMENT_S2B_BRANCH_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___IS_APPROPRIATE_BWD__MATCH_BRANCH_COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_BRANCH_COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_BRANCH_COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_S2B_COMMAND_BRANCH_WHILE_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 75</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___IS_APPROPRIATE_BWD_EMOFLON_EDGE_75__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 81</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___IS_APPROPRIATE_FWD_EMOFLON_EDGE_81__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___IS_APPLICABLE_SOLVE_CSP_CC__BRANCH_WHILE_DECISION_ASSIGNMENT_COMMAND_BRANCH_WHILE_BRANCH_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___CHECK_DEC_FWD__WHILE_DECISION_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___CHECK_DEC_BWD__BRANCH_COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2B_BRANCH_WHILE_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>whileuld2branchubb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULD2BRANCHUBB_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whileula2branchubcImpl <em>whileula2branchubc</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whileula2branchubcImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getwhileula2branchubc()
	 * @generated
	 */
	int WHILEULA2BRANCHUBC = 14;

	/**
	 * The number of structural features of the '<em>whileula2branchubc</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___IS_APPROPRIATE_FWD__MATCH_ASSIGNMENT_WHILE_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_ASSIGNMENT_WHILE_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_ASSIGNMENT_WHILE_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_ASSIGNMENT_WHILE_S2B_WHILE_ASSIGNMENT_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___IS_APPROPRIATE_BWD__MATCH_COMMAND_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_COMMAND_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_COMMAND_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_COMMAND_BRANCH_COMMAND_WHILE_S2B_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 76</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___IS_APPROPRIATE_BWD_EMOFLON_EDGE_76__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 82</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___IS_APPROPRIATE_FWD_EMOFLON_EDGE_82__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___IS_APPLICABLE_SOLVE_CSP_CC__COMMAND_BRANCH_COMMAND_ASSIGNMENT_WHILE_WHILE_ASSIGNMENT_BRANCH_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___CHECK_DEC_FWD__ASSIGNMENT_WHILE_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___CHECK_DEC_BWD__COMMAND_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_WHILE_S2B_BRANCH_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>whileula2branchubc</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULA2BRANCHUBC_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.firstuwhile2rootubranchImpl <em>firstuwhile2rootubranch</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.firstuwhile2rootubranchImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getfirstuwhile2rootubranch()
	 * @generated
	 */
	int FIRSTUWHILE2ROOTUBRANCH = 15;

	/**
	 * The number of structural features of the '<em>firstuwhile2rootubranch</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___IS_APPROPRIATE_FWD__MATCH_PROGRAM_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_PROGRAM_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_PROGRAM_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_PROGRAM_P2G_WHILE_ASSIGNMENT_GRAPH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___IS_APPROPRIATE_BWD__MATCH_BRANCH_GRAPH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_BRANCH_GRAPH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_BRANCH_GRAPH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_PROGRAM_P2G_BRANCH_GRAPH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 77</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___IS_APPROPRIATE_BWD_EMOFLON_EDGE_77__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 83</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___IS_APPROPRIATE_FWD_EMOFLON_EDGE_83__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___IS_APPLICABLE_SOLVE_CSP_CC__PROGRAM_BRANCH_WHILE_ASSIGNMENT_GRAPH_COMMAND_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___CHECK_DEC_FWD__PROGRAM_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___CHECK_DEC_BWD__BRANCH_GRAPH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___GENERATE_MODEL__RULEENTRYCONTAINER_P2G = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_PROGRAM_P2G_GRAPH_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>firstuwhile2rootubranch</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTUWHILE2ROOTUBRANCH_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decassdec2branchcmdbranchImpl <em>decassdec2branchcmdbranch</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decassdec2branchcmdbranchImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getdecassdec2branchcmdbranch()
	 * @generated
	 */
	int DECASSDEC2BRANCHCMDBRANCH = 16;

	/**
	 * The number of structural features of the '<em>decassdec2branchcmdbranch</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___IS_APPROPRIATE_FWD__MATCH_DECISION_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_DECISION_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_DECISION_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_DECISION_S2B_DECISION_ASSIGNMENT_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___IS_APPROPRIATE_BWD__MATCH_COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2B_DECISION_COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 78</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___IS_APPROPRIATE_BWD_EMOFLON_EDGE_78__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 84</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___IS_APPROPRIATE_FWD_EMOFLON_EDGE_84__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___IS_APPLICABLE_SOLVE_CSP_CC__DECISION_DECISION_COMMAND_BRANCH_ASSIGNMENT_BRANCH_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___CHECK_DEC_FWD__DECISION_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___CHECK_DEC_BWD__COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2B_DECISION_BRANCH_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 31;

	/**
	 * The number of operations of the '<em>decassdec2branchcmdbranch</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSDEC2BRANCHCMDBRANCH_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whilela2branchbcImpl <em>whilela2branchbc</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whilela2branchbcImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getwhilela2branchbc()
	 * @generated
	 */
	int WHILELA2BRANCHBC = 17;

	/**
	 * The number of structural features of the '<em>whilela2branchbc</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___IS_APPROPRIATE_FWD__MATCH_WHILE_ASSIGNMENT_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_WHILE_ASSIGNMENT_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_WHILE_ASSIGNMENT_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_S2B_WHILE_ASSIGNMENT_ASSIGNMENT_WHILE_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___IS_APPROPRIATE_BWD__MATCH_COMMAND_COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_COMMAND_COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_COMMAND_COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2B_COMMAND_COMMAND_WHILE_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 79</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___IS_APPROPRIATE_BWD_EMOFLON_EDGE_79__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 85</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___IS_APPROPRIATE_FWD_EMOFLON_EDGE_85__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___IS_APPLICABLE_SOLVE_CSP_CC__WHILE_ASSIGNMENT_ASSIGNMENT_COMMAND_COMMAND_WHILE_BRANCH_BRANCH_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___CHECK_DEC_FWD__WHILE_ASSIGNMENT_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___CHECK_DEC_BWD__COMMAND_COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2B_WHILE_BRANCH_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>whilela2branchbc</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELA2BRANCHBC_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whiledul2branchbubImpl <em>whiledul2branchbub</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whiledul2branchbubImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getwhiledul2branchbub()
	 * @generated
	 */
	int WHILEDUL2BRANCHBUB = 18;

	/**
	 * The number of structural features of the '<em>whiledul2branchbub</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___IS_APPROPRIATE_FWD__MATCH_WHILE_WHILE_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_WHILE_WHILE_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_WHILE_WHILE_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_BRANCH_WHILE_S2B_WHILE_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___IS_APPROPRIATE_BWD__MATCH_BRANCH_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_BRANCH_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_BRANCH_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_WHILE_BRANCH_COMMAND_BRANCH_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 80</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___IS_APPROPRIATE_BWD_EMOFLON_EDGE_80__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 86</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___IS_APPROPRIATE_FWD_EMOFLON_EDGE_86__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___IS_APPLICABLE_SOLVE_CSP_CC__BRANCH_WHILE_BRANCH_COMMAND_BRANCH_WHILE_DECISION_ASSIGNMENT_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___CHECK_DEC_FWD__WHILE_WHILE_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___CHECK_DEC_BWD__BRANCH_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_WHILE_S2B_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>whiledul2branchbub</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDUL2BRANCHBUB_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.firstwhile2rootbranchImpl <em>firstwhile2rootbranch</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.firstwhile2rootbranchImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getfirstwhile2rootbranch()
	 * @generated
	 */
	int FIRSTWHILE2ROOTBRANCH = 19;

	/**
	 * The number of structural features of the '<em>firstwhile2rootbranch</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___IS_APPROPRIATE_FWD__MATCH_ASSIGNMENT_PROGRAM_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_ASSIGNMENT_PROGRAM_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_ASSIGNMENT_PROGRAM_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_ASSIGNMENT_PROGRAM_P2G_WHILE_GRAPH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___IS_APPROPRIATE_BWD__MATCH_BRANCH_GRAPH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_BRANCH_GRAPH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_BRANCH_GRAPH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_PROGRAM_P2G_GRAPH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 81</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___IS_APPROPRIATE_BWD_EMOFLON_EDGE_81__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 87</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___IS_APPROPRIATE_FWD_EMOFLON_EDGE_87__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___IS_APPLICABLE_SOLVE_CSP_CC__ASSIGNMENT_BRANCH_PROGRAM_WHILE_GRAPH_COMMAND_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___CHECK_DEC_FWD__ASSIGNMENT_PROGRAM_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___CHECK_DEC_BWD__BRANCH_GRAPH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___GENERATE_MODEL__RULEENTRYCONTAINER_P2G = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_PROGRAM_P2G_GRAPH_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>firstwhile2rootbranch</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTWHILE2ROOTBRANCH_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decdl2branchbbImpl <em>decdl2branchbb</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decdl2branchbbImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getdecdl2branchbb()
	 * @generated
	 */
	int DECDL2BRANCHBB = 20;

	/**
	 * The number of structural features of the '<em>decdl2branchbb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___IS_APPROPRIATE_FWD__MATCH_WHILE_DECISION_ASSIGNMENT_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_WHILE_DECISION_ASSIGNMENT_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_WHILE_DECISION_ASSIGNMENT_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_WHILE_DECISION_ASSIGNMENT_BRANCH_DECISION_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___IS_APPROPRIATE_BWD__MATCH_BRANCH_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_BRANCH_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_BRANCH_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_DECISION_BRANCH_COMMAND_BRANCH_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 82</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___IS_APPROPRIATE_BWD_EMOFLON_EDGE_82__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 88</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___IS_APPROPRIATE_FWD_EMOFLON_EDGE_88__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___IS_APPLICABLE_SOLVE_CSP_CC__WHILE_DECISION_ASSIGNMENT_BRANCH_DECISION_BRANCH_COMMAND_BRANCH_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___CHECK_DEC_FWD__WHILE_DECISION_ASSIGNMENT_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___CHECK_DEC_BWD__BRANCH_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_DECISION_S2B_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>decdl2branchbb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDL2BRANCHBB_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whilel2branchbImpl <em>whilel2branchb</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whilel2branchbImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getwhilel2branchb()
	 * @generated
	 */
	int WHILEL2BRANCHB = 21;

	/**
	 * The number of structural features of the '<em>whilel2branchb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___IS_APPROPRIATE_FWD__MATCH_WHILE_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_WHILE_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_WHILE_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_BRANCH_WHILE_WHILE_ASSIGNMENT_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___IS_APPROPRIATE_BWD__MATCH_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_COMMAND_BRANCH_WHILE_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 83</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___IS_APPROPRIATE_BWD_EMOFLON_EDGE_83__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 89</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___IS_APPROPRIATE_FWD_EMOFLON_EDGE_89__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___IS_APPLICABLE_SOLVE_CSP_CC__BRANCH_COMMAND_WHILE_BRANCH_WHILE_ASSIGNMENT_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___CHECK_DEC_FWD__WHILE_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___CHECK_DEC_BWD__BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_WHILE_S2B_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>whilel2branchb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEL2BRANCHB_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.deculd2branchubbImpl <em>deculd2branchubb</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.deculd2branchubbImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getdeculd2branchubb()
	 * @generated
	 */
	int DECULD2BRANCHUBB = 22;

	/**
	 * The number of structural features of the '<em>deculd2branchubb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___IS_APPROPRIATE_FWD__MATCH_ASSIGNMENT_DECISION_WHILE_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_ASSIGNMENT_DECISION_WHILE_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_ASSIGNMENT_DECISION_WHILE_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_ASSIGNMENT_S2B_DECISION_BRANCH_WHILE_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___IS_APPROPRIATE_BWD__MATCH_COMMAND_BRANCH_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_COMMAND_BRANCH_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_COMMAND_BRANCH_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2B_COMMAND_BRANCH_BRANCH_BRANCH_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 84</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___IS_APPROPRIATE_BWD_EMOFLON_EDGE_84__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 90</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___IS_APPROPRIATE_FWD_EMOFLON_EDGE_90__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___IS_APPLICABLE_SOLVE_CSP_CC__ASSIGNMENT_DECISION_COMMAND_BRANCH_WHILE_BRANCH_BRANCH_DECISION_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___CHECK_DEC_FWD__ASSIGNMENT_DECISION_WHILE_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___CHECK_DEC_BWD__COMMAND_BRANCH_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2B_BRANCH_DECISION_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>deculd2branchubb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECULD2BRANCHUBB_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.program2graphImpl <em>program2graph</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.program2graphImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getprogram2graph()
	 * @generated
	 */
	int PROGRAM2GRAPH = 23;

	/**
	 * The number of structural features of the '<em>program2graph</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___IS_APPROPRIATE_FWD__MATCH_PROGRAM = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_PROGRAM = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_PROGRAM = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_PROGRAM = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___IS_APPROPRIATE_BWD__MATCH_GRAPH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_GRAPH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_GRAPH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_GRAPH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD Graph 1</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___IS_APPROPRIATE_BWD_GRAPH_1__GRAPH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD Program 1</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___IS_APPROPRIATE_FWD_PROGRAM_1__PROGRAM = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___IS_APPLICABLE_SOLVE_CSP_CC__GRAPH_PROGRAM_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___CHECK_DEC_FWD__PROGRAM = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___CHECK_DEC_BWD__GRAPH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___GENERATE_MODEL__RULEENTRYCONTAINER = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>program2graph</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROGRAM2GRAPH_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whilea2branchcImpl <em>whilea2branchc</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whilea2branchcImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getwhilea2branchc()
	 * @generated
	 */
	int WHILEA2BRANCHC = 24;

	/**
	 * The number of structural features of the '<em>whilea2branchc</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___IS_APPROPRIATE_FWD__MATCH_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_S2B_WHILE_BRANCH_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___IS_APPROPRIATE_BWD__MATCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2B_COMMAND_WHILE_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 85</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___IS_APPROPRIATE_BWD_EMOFLON_EDGE_85__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 91</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___IS_APPROPRIATE_FWD_EMOFLON_EDGE_91__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___IS_APPLICABLE_SOLVE_CSP_CC__COMMAND_WHILE_BRANCH_ASSIGNMENT_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___CHECK_DEC_FWD__WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___CHECK_DEC_BWD__COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2B_WHILE_BRANCH_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>whilea2branchc</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEA2BRANCHC_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decassass2branchcmdcmdImpl <em>decassass2branchcmdcmd</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decassass2branchcmdcmdImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getdecassass2branchcmdcmd()
	 * @generated
	 */
	int DECASSASS2BRANCHCMDCMD = 25;

	/**
	 * The number of structural features of the '<em>decassass2branchcmdcmd</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___IS_APPROPRIATE_FWD__MATCH_DECISION_ASSIGNMENT_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_DECISION_ASSIGNMENT_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_DECISION_ASSIGNMENT_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_DECISION_ASSIGNMENT_ASSIGNMENT_BRANCH_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___IS_APPROPRIATE_BWD__MATCH_COMMAND_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_COMMAND_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_COMMAND_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_DECISION_COMMAND_COMMAND_BRANCH_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 86</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___IS_APPROPRIATE_BWD_EMOFLON_EDGE_86__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 92</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___IS_APPROPRIATE_FWD_EMOFLON_EDGE_92__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___IS_APPLICABLE_SOLVE_CSP_CC__DECISION_ASSIGNMENT_COMMAND_ASSIGNMENT_COMMAND_BRANCH_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___CHECK_DEC_FWD__DECISION_ASSIGNMENT_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___CHECK_DEC_BWD__COMMAND_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_DECISION_BRANCH_S2B_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>decassass2branchcmdcmd</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECASSASS2BRANCHCMDCMD_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.while2branchImpl <em>while2branch</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.while2branchImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getwhile2branch()
	 * @generated
	 */
	int WHILE2BRANCH = 26;

	/**
	 * The number of structural features of the '<em>while2branch</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___IS_APPROPRIATE_FWD__MATCH_STATEMENT_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_STATEMENT_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_STATEMENT_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_S2N_STATEMENT_ASSIGNMENT_WHILE_NODE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___IS_APPROPRIATE_BWD__MATCH_BRANCH_NODE_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_BRANCH_NODE_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_BRANCH_NODE_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2N_BRANCH_STATEMENT_NODE_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 87</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___IS_APPROPRIATE_BWD_EMOFLON_EDGE_87__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 93</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___IS_APPROPRIATE_FWD_EMOFLON_EDGE_93__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___IS_APPLICABLE_SOLVE_CSP_CC__BRANCH_STATEMENT_ASSIGNMENT_WHILE_NODE_COMMAND_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___CHECK_DEC_FWD__STATEMENT_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___CHECK_DEC_BWD__BRANCH_NODE_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___GENERATE_MODEL__RULEENTRYCONTAINER_S2N = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2N_STATEMENT_NODE_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>while2branch</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE2BRANCH_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whileal2branchcbImpl <em>whileal2branchcb</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whileal2branchcbImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getwhileal2branchcb()
	 * @generated
	 */
	int WHILEAL2BRANCHCB = 27;

	/**
	 * The number of structural features of the '<em>whileal2branchcb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___IS_APPROPRIATE_FWD__MATCH_ASSIGNMENT_WHILE_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_ASSIGNMENT_WHILE_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_ASSIGNMENT_WHILE_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_ASSIGNMENT_WHILE_S2B_BRANCH_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___IS_APPROPRIATE_BWD__MATCH_COMMAND_COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_COMMAND_COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_COMMAND_COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_COMMAND_COMMAND_S2B_BRANCH_WHILE_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 88</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___IS_APPROPRIATE_BWD_EMOFLON_EDGE_88__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 94</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___IS_APPROPRIATE_FWD_EMOFLON_EDGE_94__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___IS_APPLICABLE_SOLVE_CSP_CC__COMMAND_ASSIGNMENT_WHILE_COMMAND_BRANCH_ASSIGNMENT_WHILE_BRANCH_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___CHECK_DEC_FWD__ASSIGNMENT_WHILE_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___CHECK_DEC_BWD__COMMAND_COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2B_BRANCH_WHILE_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>whileal2branchcb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAL2BRANCHCB_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whileld2branchbbImpl <em>whileld2branchbb</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whileld2branchbbImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getwhileld2branchbb()
	 * @generated
	 */
	int WHILELD2BRANCHBB = 28;

	/**
	 * The number of structural features of the '<em>whileld2branchbb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___IS_APPROPRIATE_FWD__MATCH_DECISION_ASSIGNMENT_WHILE_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_DECISION_ASSIGNMENT_WHILE_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_DECISION_ASSIGNMENT_WHILE_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_BRANCH_DECISION_ASSIGNMENT_WHILE_WHILE_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___IS_APPROPRIATE_BWD__MATCH_BRANCH_COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_BRANCH_COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_BRANCH_COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_WHILE_COMMAND_S2B_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 89</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___IS_APPROPRIATE_BWD_EMOFLON_EDGE_89__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 95</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___IS_APPROPRIATE_FWD_EMOFLON_EDGE_95__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___IS_APPLICABLE_SOLVE_CSP_CC__BRANCH_DECISION_ASSIGNMENT_WHILE_WHILE_COMMAND_BRANCH_BRANCH_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___CHECK_DEC_FWD__DECISION_ASSIGNMENT_WHILE_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___CHECK_DEC_BWD__BRANCH_COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_WHILE_S2B_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>whileld2branchbb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELD2BRANCHBB_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decla2branchbcImpl <em>decla2branchbc</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decla2branchbcImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getdecla2branchbc()
	 * @generated
	 */
	int DECLA2BRANCHBC = 29;

	/**
	 * The number of structural features of the '<em>decla2branchbc</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___IS_APPROPRIATE_FWD__MATCH_ASSIGNMENT_DECISION_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_ASSIGNMENT_DECISION_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_ASSIGNMENT_DECISION_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_ASSIGNMENT_DECISION_S2B_ASSIGNMENT_WHILE_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___IS_APPROPRIATE_BWD__MATCH_BRANCH_COMMAND_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_BRANCH_COMMAND_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_BRANCH_COMMAND_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_COMMAND_COMMAND_DECISION_S2B_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 90</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___IS_APPROPRIATE_BWD_EMOFLON_EDGE_90__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 96</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___IS_APPROPRIATE_FWD_EMOFLON_EDGE_96__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___IS_APPLICABLE_SOLVE_CSP_CC__BRANCH_ASSIGNMENT_COMMAND_COMMAND_DECISION_ASSIGNMENT_WHILE_BRANCH_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___CHECK_DEC_FWD__ASSIGNMENT_DECISION_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___CHECK_DEC_BWD__BRANCH_COMMAND_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_DECISION_S2B_BRANCH_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>decla2branchbc</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLA2BRANCHBC_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decision2branchImpl <em>decision2branch</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decision2branchImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getdecision2branch()
	 * @generated
	 */
	int DECISION2BRANCH = 30;

	/**
	 * The number of structural features of the '<em>decision2branch</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___IS_APPROPRIATE_FWD__MATCH_DECISION_STATEMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_DECISION_STATEMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_DECISION_STATEMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_DECISION_NODE_S2N_STATEMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___IS_APPROPRIATE_BWD__MATCH_NODE_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_NODE_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_NODE_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_NODE_S2N_BRANCH_STATEMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 91</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___IS_APPROPRIATE_BWD_EMOFLON_EDGE_91__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 97</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___IS_APPROPRIATE_FWD_EMOFLON_EDGE_97__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___IS_APPLICABLE_SOLVE_CSP_CC__DECISION_NODE_BRANCH_STATEMENT_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___CHECK_DEC_FWD__DECISION_STATEMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___CHECK_DEC_BWD__NODE_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___GENERATE_MODEL__RULEENTRYCONTAINER_S2N = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_NODE_S2N_STATEMENT_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>decision2branch</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECISION2BRANCH_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whilell2branchbbImpl <em>whilell2branchbb</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whilell2branchbbImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getwhilell2branchbb()
	 * @generated
	 */
	int WHILELL2BRANCHBB = 31;

	/**
	 * The number of structural features of the '<em>whilell2branchbb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___IS_APPROPRIATE_FWD__MATCH_WHILE_WHILE_ASSIGNMENT_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_WHILE_WHILE_ASSIGNMENT_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_WHILE_WHILE_ASSIGNMENT_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_BRANCH_WHILE_WHILE_ASSIGNMENT_ASSIGNMENT_WHILE_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___IS_APPROPRIATE_BWD__MATCH_BRANCH_BRANCH_COMMAND_BRANCH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_BRANCH_BRANCH_COMMAND_BRANCH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_BRANCH_BRANCH_COMMAND_BRANCH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_BRANCH_COMMAND_BRANCH_WHILE_COMMAND_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 92</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___IS_APPROPRIATE_BWD_EMOFLON_EDGE_92__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 98</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___IS_APPROPRIATE_FWD_EMOFLON_EDGE_98__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___IS_APPLICABLE_SOLVE_CSP_CC__BRANCH_BRANCH_WHILE_WHILE_COMMAND_ASSIGNMENT_BRANCH_ASSIGNMENT_WHILE_COMMAND_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___CHECK_DEC_FWD__WHILE_WHILE_ASSIGNMENT_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___CHECK_DEC_BWD__BRANCH_BRANCH_COMMAND_BRANCH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_WHILE_S2B_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>whilell2branchbb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILELL2BRANCHBB_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.declul2branchbubImpl <em>declul2branchbub</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.declul2branchbubImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getdeclul2branchbub()
	 * @generated
	 */
	int DECLUL2BRANCHBUB = 32;

	/**
	 * The number of structural features of the '<em>declul2branchbub</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___IS_APPROPRIATE_FWD__MATCH_ASSIGNMENT_WHILE_WHILE_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_ASSIGNMENT_WHILE_WHILE_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_ASSIGNMENT_WHILE_WHILE_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_BRANCH_ASSIGNMENT_S2B_WHILE_WHILE_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___IS_APPROPRIATE_BWD__MATCH_BRANCH_COMMAND_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_BRANCH_COMMAND_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_BRANCH_COMMAND_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_S2B_COMMAND_BRANCH_COMMAND_DECISION_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 93</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___IS_APPROPRIATE_BWD_EMOFLON_EDGE_93__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 99</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___IS_APPROPRIATE_FWD_EMOFLON_EDGE_99__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___IS_APPLICABLE_SOLVE_CSP_CC__BRANCH_ASSIGNMENT_WHILE_COMMAND_BRANCH_WHILE_COMMAND_DECISION_ASSIGNMENT_BRANCH_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___CHECK_DEC_FWD__ASSIGNMENT_WHILE_WHILE_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___CHECK_DEC_BWD__BRANCH_COMMAND_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_S2B_DECISION_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>declul2branchbub</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECLUL2BRANCHBUB_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whileaul2branchcubImpl <em>whileaul2branchcub</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whileaul2branchcubImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getwhileaul2branchcub()
	 * @generated
	 */
	int WHILEAUL2BRANCHCUB = 33;

	/**
	 * The number of structural features of the '<em>whileaul2branchcub</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___IS_APPROPRIATE_FWD__MATCH_ASSIGNMENT_WHILE_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_ASSIGNMENT_WHILE_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_ASSIGNMENT_WHILE_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_ASSIGNMENT_S2B_WHILE_WHILE_ASSIGNMENT_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___IS_APPROPRIATE_BWD__MATCH_COMMAND_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_COMMAND_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_COMMAND_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_COMMAND_S2B_BRANCH_COMMAND_WHILE_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 94</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___IS_APPROPRIATE_BWD_EMOFLON_EDGE_94__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 100</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___IS_APPROPRIATE_FWD_EMOFLON_EDGE_100__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___IS_APPLICABLE_SOLVE_CSP_CC__ASSIGNMENT_COMMAND_BRANCH_WHILE_COMMAND_WHILE_ASSIGNMENT_BRANCH_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___CHECK_DEC_FWD__ASSIGNMENT_WHILE_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___CHECK_DEC_BWD__COMMAND_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2B_WHILE_BRANCH_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>whileaul2branchcub</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEAUL2BRANCHCUB_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whiledd2branchbbImpl <em>whiledd2branchbb</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whiledd2branchbbImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getwhiledd2branchbb()
	 * @generated
	 */
	int WHILEDD2BRANCHBB = 34;

	/**
	 * The number of structural features of the '<em>whiledd2branchbb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___IS_APPROPRIATE_FWD__MATCH_DECISION_DECISION_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_DECISION_DECISION_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_DECISION_DECISION_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_BRANCH_S2B_DECISION_DECISION_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___IS_APPROPRIATE_BWD__MATCH_BRANCH_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_BRANCH_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_BRANCH_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_BRANCH_BRANCH_S2B_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 95</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___IS_APPROPRIATE_BWD_EMOFLON_EDGE_95__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 101</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___IS_APPROPRIATE_FWD_EMOFLON_EDGE_101__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___IS_APPLICABLE_SOLVE_CSP_CC__BRANCH_BRANCH_BRANCH_DECISION_DECISION_WHILE_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___CHECK_DEC_FWD__DECISION_DECISION_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___CHECK_DEC_BWD__BRANCH_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_S2B_WHILE_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>whiledd2branchbb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDD2BRANCHBB_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whileulul2branchububImpl <em>whileulul2branchubub</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whileulul2branchububImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getwhileulul2branchubub()
	 * @generated
	 */
	int WHILEULUL2BRANCHUBUB = 35;

	/**
	 * The number of structural features of the '<em>whileulul2branchubub</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___IS_APPROPRIATE_FWD__MATCH_WHILE_ASSIGNMENT_WHILE_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_WHILE_ASSIGNMENT_WHILE_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_WHILE_ASSIGNMENT_WHILE_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_WHILE_BRANCH_ASSIGNMENT_S2B_WHILE_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___IS_APPROPRIATE_BWD__MATCH_BRANCH_COMMAND_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_BRANCH_COMMAND_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_BRANCH_COMMAND_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_COMMAND_BRANCH_COMMAND_S2B_WHILE_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 96</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___IS_APPROPRIATE_BWD_EMOFLON_EDGE_96__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 102</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___IS_APPROPRIATE_FWD_EMOFLON_EDGE_102__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___IS_APPLICABLE_SOLVE_CSP_CC__WHILE_BRANCH_COMMAND_BRANCH_COMMAND_ASSIGNMENT_WHILE_BRANCH_ASSIGNMENT_WHILE_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___CHECK_DEC_FWD__WHILE_ASSIGNMENT_WHILE_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___CHECK_DEC_BWD__BRANCH_COMMAND_BRANCH_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_S2B_WHILE_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>whileulul2branchubub</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULUL2BRANCHUBUB_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whiled2branchbImpl <em>whiled2branchb</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whiled2branchbImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getwhiled2branchb()
	 * @generated
	 */
	int WHILED2BRANCHB = 36;

	/**
	 * The number of structural features of the '<em>whiled2branchb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___IS_APPROPRIATE_FWD__MATCH_WHILE_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_WHILE_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_WHILE_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_S2B_WHILE_DECISION_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___IS_APPROPRIATE_BWD__MATCH_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2B_BRANCH_WHILE_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 97</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___IS_APPROPRIATE_BWD_EMOFLON_EDGE_97__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 103</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___IS_APPROPRIATE_FWD_EMOFLON_EDGE_103__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___IS_APPLICABLE_SOLVE_CSP_CC__BRANCH_WHILE_DECISION_BRANCH_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___CHECK_DEC_FWD__WHILE_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___CHECK_DEC_BWD__BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_S2B_WHILE_BRANCH_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>whiled2branchb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILED2BRANCHB_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decdecass2branchbranchcmdImpl <em>decdecass2branchbranchcmd</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decdecass2branchbranchcmdImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getdecdecass2branchbranchcmd()
	 * @generated
	 */
	int DECDECASS2BRANCHBRANCHCMD = 37;

	/**
	 * The number of structural features of the '<em>decdecass2branchbranchcmd</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___IS_APPROPRIATE_FWD__MATCH_DECISION_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_DECISION_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_DECISION_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_DECISION_DECISION_S2B_BRANCH_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___IS_APPROPRIATE_BWD__MATCH_COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_COMMAND_DECISION_S2B_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 98</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___IS_APPROPRIATE_BWD_EMOFLON_EDGE_98__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 104</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___IS_APPROPRIATE_FWD_EMOFLON_EDGE_104__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___IS_APPLICABLE_SOLVE_CSP_CC__COMMAND_DECISION_DECISION_BRANCH_BRANCH_ASSIGNMENT_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___CHECK_DEC_FWD__DECISION_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___CHECK_DEC_BWD__COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_DECISION_S2B_BRANCH_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 31;

	/**
	 * The number of operations of the '<em>decdecass2branchbranchcmd</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECDECASS2BRANCHBRANCHCMD_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.uwhile2ubranchImpl <em>uwhile2ubranch</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.uwhile2ubranchImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getuwhile2ubranch()
	 * @generated
	 */
	int UWHILE2UBRANCH = 38;

	/**
	 * The number of structural features of the '<em>uwhile2ubranch</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___IS_APPROPRIATE_FWD__MATCH_ASSIGNMENT_STATEMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_ASSIGNMENT_STATEMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_ASSIGNMENT_STATEMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_ASSIGNMENT_NODE_STATEMENT_S2N_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___IS_APPROPRIATE_BWD__MATCH_COMMAND_BRANCH_NODE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_COMMAND_BRANCH_NODE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_COMMAND_BRANCH_NODE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_COMMAND_BRANCH_NODE_STATEMENT_S2N = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 99</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___IS_APPROPRIATE_BWD_EMOFLON_EDGE_99__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 105</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___IS_APPROPRIATE_FWD_EMOFLON_EDGE_105__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___IS_APPLICABLE_SOLVE_CSP_CC__COMMAND_BRANCH_ASSIGNMENT_NODE_STATEMENT_WHILE_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___CHECK_DEC_FWD__ASSIGNMENT_STATEMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___CHECK_DEC_BWD__COMMAND_BRANCH_NODE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___GENERATE_MODEL__RULEENTRYCONTAINER_S2N = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_NODE_STATEMENT_S2N_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>uwhile2ubranch</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UWHILE2UBRANCH_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whileda2branchbcImpl <em>whileda2branchbc</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whileda2branchbcImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getwhileda2branchbc()
	 * @generated
	 */
	int WHILEDA2BRANCHBC = 39;

	/**
	 * The number of structural features of the '<em>whileda2branchbc</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___IS_APPROPRIATE_FWD__MATCH_DECISION_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_DECISION_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_DECISION_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_BRANCH_DECISION_S2B_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___IS_APPROPRIATE_BWD__MATCH_COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_COMMAND_BRANCH_BRANCH_S2B_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 100</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___IS_APPROPRIATE_BWD_EMOFLON_EDGE_100__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 106</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___IS_APPROPRIATE_FWD_EMOFLON_EDGE_106__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___IS_APPLICABLE_SOLVE_CSP_CC__COMMAND_BRANCH_DECISION_BRANCH_WHILE_ASSIGNMENT_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___CHECK_DEC_FWD__DECISION_WHILE_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___CHECK_DEC_BWD__COMMAND_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_S2B_WHILE_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>whileda2branchbc</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDA2BRANCHBC_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whileull2branchubbImpl <em>whileull2branchubb</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whileull2branchubbImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getwhileull2branchubb()
	 * @generated
	 */
	int WHILEULL2BRANCHUBB = 40;

	/**
	 * The number of structural features of the '<em>whileull2branchubb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___IS_APPROPRIATE_FWD__MATCH_ASSIGNMENT_WHILE_WHILE_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_ASSIGNMENT_WHILE_WHILE_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_ASSIGNMENT_WHILE_WHILE_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_ASSIGNMENT_WHILE_WHILE_ASSIGNMENT_BRANCH_WHILE_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___IS_APPROPRIATE_BWD__MATCH_BRANCH_COMMAND_BRANCH_BRANCH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_BRANCH_COMMAND_BRANCH_BRANCH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_BRANCH_COMMAND_BRANCH_BRANCH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_COMMAND_BRANCH_WHILE_BRANCH_COMMAND_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 101</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___IS_APPROPRIATE_BWD_EMOFLON_EDGE_101__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 107</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___IS_APPROPRIATE_FWD_EMOFLON_EDGE_107__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___IS_APPLICABLE_SOLVE_CSP_CC__BRANCH_ASSIGNMENT_COMMAND_BRANCH_WHILE_WHILE_ASSIGNMENT_BRANCH_COMMAND_WHILE_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___CHECK_DEC_FWD__ASSIGNMENT_WHILE_WHILE_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___CHECK_DEC_BWD__BRANCH_COMMAND_BRANCH_BRANCH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_WHILE_BRANCH_S2B_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>whileull2branchubb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEULL2BRANCHUBB_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decal2branchcbImpl <em>decal2branchcb</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.decal2branchcbImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getdecal2branchcb()
	 * @generated
	 */
	int DECAL2BRANCHCB = 41;

	/**
	 * The number of structural features of the '<em>decal2branchcb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___IS_APPROPRIATE_FWD__MATCH_WHILE_ASSIGNMENT_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_WHILE_ASSIGNMENT_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_WHILE_ASSIGNMENT_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_WHILE_ASSIGNMENT_BRANCH_S2B_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___IS_APPROPRIATE_BWD__MATCH_BRANCH_COMMAND_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_BRANCH_COMMAND_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_BRANCH_COMMAND_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_COMMAND_S2B_DECISION_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 102</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___IS_APPROPRIATE_BWD_EMOFLON_EDGE_102__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 108</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___IS_APPROPRIATE_FWD_EMOFLON_EDGE_108__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___IS_APPLICABLE_SOLVE_CSP_CC__WHILE_ASSIGNMENT_BRANCH_COMMAND_DECISION_COMMAND_ASSIGNMENT_BRANCH_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___CHECK_DEC_FWD__WHILE_ASSIGNMENT_DECISION_ASSIGNMENT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___CHECK_DEC_BWD__BRANCH_COMMAND_COMMAND_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_BRANCH_S2B_DECISION_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>decal2branchcb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DECAL2BRANCHCB_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.firstass2rootcmdImpl <em>firstass2rootcmd</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.firstass2rootcmdImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getfirstass2rootcmd()
	 * @generated
	 */
	int FIRSTASS2ROOTCMD = 42;

	/**
	 * The number of structural features of the '<em>firstass2rootcmd</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___IS_APPROPRIATE_FWD__MATCH_ASSIGNMENT_PROGRAM = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_ASSIGNMENT_PROGRAM = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_ASSIGNMENT_PROGRAM = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_P2G_GRAPH_ASSIGNMENT_PROGRAM = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___IS_APPROPRIATE_BWD__MATCH_COMMAND_GRAPH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_COMMAND_GRAPH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_COMMAND_GRAPH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_P2G_COMMAND_GRAPH_PROGRAM = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 103</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___IS_APPROPRIATE_BWD_EMOFLON_EDGE_103__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 109</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___IS_APPROPRIATE_FWD_EMOFLON_EDGE_109__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___IS_APPLICABLE_SOLVE_CSP_CC__COMMAND_GRAPH_ASSIGNMENT_PROGRAM_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___CHECK_DEC_FWD__ASSIGNMENT_PROGRAM = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___CHECK_DEC_BWD__COMMAND_GRAPH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___GENERATE_MODEL__RULEENTRYCONTAINER_P2G = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_P2G_GRAPH_PROGRAM_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>firstass2rootcmd</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTASS2ROOTCMD_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whileul2branchubImpl <em>whileul2branchub</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whileul2branchubImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getwhileul2branchub()
	 * @generated
	 */
	int WHILEUL2BRANCHUB = 43;

	/**
	 * The number of structural features of the '<em>whileul2branchub</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___IS_APPROPRIATE_FWD__MATCH_WHILE_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_WHILE_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_WHILE_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_WHILE_BRANCH_ASSIGNMENT_WHILE_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___IS_APPROPRIATE_BWD__MATCH_BRANCH_BRANCH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_BRANCH_BRANCH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_BRANCH_BRANCH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_WHILE_BRANCH_S2B_BRANCH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 104</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___IS_APPROPRIATE_BWD_EMOFLON_EDGE_104__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 110</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___IS_APPROPRIATE_FWD_EMOFLON_EDGE_110__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___IS_APPLICABLE_SOLVE_CSP_CC__WHILE_BRANCH_ASSIGNMENT_WHILE_BRANCH_COMMAND_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___CHECK_DEC_FWD__WHILE_ASSIGNMENT_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___CHECK_DEC_BWD__BRANCH_BRANCH_COMMAND = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_WHILE_BRANCH_S2B_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>whileul2branchub</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEUL2BRANCHUB_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whiledl2branchbbImpl <em>whiledl2branchbb</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.whiledl2branchbbImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getwhiledl2branchbb()
	 * @generated
	 */
	int WHILEDL2BRANCHBB = 44;

	/**
	 * The number of structural features of the '<em>whiledl2branchbb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___IS_APPROPRIATE_FWD__MATCH_WHILE_ASSIGNMENT_DECISION_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_WHILE_ASSIGNMENT_DECISION_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_WHILE_ASSIGNMENT_DECISION_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_WHILE_ASSIGNMENT_S2B_BRANCH_DECISION_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___IS_APPROPRIATE_BWD__MATCH_COMMAND_BRANCH_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_COMMAND_BRANCH_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_COMMAND_BRANCH_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_COMMAND_WHILE_BRANCH_BRANCH_S2B_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 105</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___IS_APPROPRIATE_BWD_EMOFLON_EDGE_105__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 111</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___IS_APPROPRIATE_FWD_EMOFLON_EDGE_111__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___IS_APPLICABLE_SOLVE_CSP_CC__COMMAND_WHILE_ASSIGNMENT_BRANCH_BRANCH_BRANCH_DECISION_WHILE_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___CHECK_DEC_FWD__WHILE_ASSIGNMENT_DECISION_WHILE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___CHECK_DEC_BWD__COMMAND_BRANCH_BRANCH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___GENERATE_MODEL__RULEENTRYCONTAINER_S2B = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_WHILE_S2B_BRANCH_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 31;

	/**
	 * The number of operations of the '<em>whiledl2branchbb</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILEDL2BRANCHBB_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * The meta object id for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.impl.firstdecision2firstbranchImpl <em>firstdecision2firstbranch</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.firstdecision2firstbranchImpl
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.impl.RulesPackageImpl#getfirstdecision2firstbranch()
	 * @generated
	 */
	int FIRSTDECISION2FIRSTBRANCH = 45;

	/**
	 * The number of structural features of the '<em>firstdecision2firstbranch</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH_FEATURE_COUNT = RuntimePackage.ABSTRACT_RULE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Appropriate FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___IS_APPROPRIATE_FWD__MATCH_PROGRAM_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 0;

	/**
	 * The operation id for the '<em>Perform FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___PERFORM_FWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Applicable FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___IS_APPLICABLE_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Register Objects To Match FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___REGISTER_OBJECTS_TO_MATCH_FWD__MATCH_PROGRAM_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 3;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___IS_APPROPRIATE_SOLVE_CSP_FWD__MATCH_PROGRAM_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 4;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___IS_APPROPRIATE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 5;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___IS_APPLICABLE_SOLVE_CSP_FWD__ISAPPLICABLEMATCH_GRAPH_P2G_PROGRAM_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 6;

	/**
	 * The operation id for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___IS_APPLICABLE_CHECK_CSP_FWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Register Objects FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___REGISTER_OBJECTS_FWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 8;

	/**
	 * The operation id for the '<em>Check Types FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___CHECK_TYPES_FWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Appropriate BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___IS_APPROPRIATE_BWD__MATCH_GRAPH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 10;

	/**
	 * The operation id for the '<em>Perform BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___PERFORM_BWD__ISAPPLICABLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Applicable BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___IS_APPLICABLE_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Register Objects To Match BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___REGISTER_OBJECTS_TO_MATCH_BWD__MATCH_GRAPH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 13;

	/**
	 * The operation id for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___IS_APPROPRIATE_SOLVE_CSP_BWD__MATCH_GRAPH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 14;

	/**
	 * The operation id for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___IS_APPROPRIATE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 15;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___IS_APPLICABLE_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_GRAPH_P2G_PROGRAM_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 16;

	/**
	 * The operation id for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___IS_APPLICABLE_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 17;

	/**
	 * The operation id for the '<em>Register Objects BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___REGISTER_OBJECTS_BWD__PERFORMRULERESULT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT_EOBJECT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 18;

	/**
	 * The operation id for the '<em>Check Types BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___CHECK_TYPES_BWD__MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Appropriate BWD EMoflon Edge 106</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___IS_APPROPRIATE_BWD_EMOFLON_EDGE_106__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 20;

	/**
	 * The operation id for the '<em>Is Appropriate FWD EMoflon Edge 112</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___IS_APPROPRIATE_FWD_EMOFLON_EDGE_112__EMOFLONEDGE = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 21;

	/**
	 * The operation id for the '<em>Check Attributes FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___CHECK_ATTRIBUTES_FWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 22;

	/**
	 * The operation id for the '<em>Check Attributes BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___CHECK_ATTRIBUTES_BWD__TRIPLEMATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 23;

	/**
	 * The operation id for the '<em>Is Applicable CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___IS_APPLICABLE_CC__MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___IS_APPLICABLE_SOLVE_CSP_CC__GRAPH_PROGRAM_BRANCH_DECISION_MATCH_MATCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 25;

	/**
	 * The operation id for the '<em>Is Applicable check Csp CC</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___IS_APPLICABLE_CHECK_CSP_CC__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Check DEC FWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___CHECK_DEC_FWD__PROGRAM_DECISION = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 27;

	/**
	 * The operation id for the '<em>Check DEC BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___CHECK_DEC_BWD__GRAPH_BRANCH = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 28;

	/**
	 * The operation id for the '<em>Generate Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___GENERATE_MODEL__RULEENTRYCONTAINER_P2G = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 29;

	/**
	 * The operation id for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___GENERATE_MODEL_SOLVE_CSP_BWD__ISAPPLICABLEMATCH_GRAPH_P2G_PROGRAM_MODELGENERATORRULERESULT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 30;

	/**
	 * The operation id for the '<em>Generate Model check Csp BWD</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH___GENERATE_MODEL_CHECK_CSP_BWD__CSP = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT
			+ 31;

	/**
	 * The number of operations of the '<em>firstdecision2firstbranch</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FIRSTDECISION2FIRSTBRANCH_OPERATION_COUNT = RuntimePackage.ABSTRACT_RULE_OPERATION_COUNT + 32;

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next <em>next2next</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>next2next</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next
	 * @generated
	 */
	EClass getnext2next();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Statement, sourcecode.Assignment) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Statement, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getnext2next__IsAppropriate_FWD__Match_Statement_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getnext2next__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getnext2next__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Statement, sourcecode.Assignment) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Statement, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getnext2next__RegisterObjectsToMatch_FWD__Match_Statement_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Statement, sourcecode.Assignment) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Statement, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getnext2next__IsAppropriate_solveCsp_FWD__Match_Statement_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getnext2next__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Statement, org.wbsilva.bx.sourcecode2controlflow.S2N, org.wbsilva.bx.sourcecode2controlflow.S2N, controlflow.Command, controlflow.Node, sourcecode.Assignment) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Statement, org.wbsilva.bx.sourcecode2controlflow.S2N, org.wbsilva.bx.sourcecode2controlflow.S2N, controlflow.Command, controlflow.Node, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getnext2next__IsApplicable_solveCsp_FWD__IsApplicableMatch_Statement_S2N_S2N_Command_Node_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getnext2next__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getnext2next__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getnext2next__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Node) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Node)
	 * @generated
	 */
	EOperation getnext2next__IsAppropriate_BWD__Match_Command_Node();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getnext2next__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getnext2next__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Node) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Node)
	 * @generated
	 */
	EOperation getnext2next__RegisterObjectsToMatch_BWD__Match_Command_Node();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Node) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Node)
	 * @generated
	 */
	EOperation getnext2next__IsAppropriate_solveCsp_BWD__Match_Command_Node();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getnext2next__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Statement, org.wbsilva.bx.sourcecode2controlflow.S2N, org.wbsilva.bx.sourcecode2controlflow.S2N, controlflow.Command, controlflow.Node, sourcecode.Assignment) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Statement, org.wbsilva.bx.sourcecode2controlflow.S2N, org.wbsilva.bx.sourcecode2controlflow.S2N, controlflow.Command, controlflow.Node, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getnext2next__IsApplicable_solveCsp_BWD__IsApplicableMatch_Statement_S2N_S2N_Command_Node_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getnext2next__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getnext2next__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getnext2next__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isAppropriate_BWD_EMoflonEdge_62(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 62</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 62</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isAppropriate_BWD_EMoflonEdge_62(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getnext2next__IsAppropriate_BWD_EMoflonEdge_62__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isAppropriate_FWD_EMoflonEdge_68(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 68</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 68</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isAppropriate_FWD_EMoflonEdge_68(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getnext2next__IsAppropriate_FWD_EMoflonEdge_68__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getnext2next__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getnext2next__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getnext2next__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isApplicable_solveCsp_CC(sourcecode.Statement, controlflow.Command, controlflow.Node, sourcecode.Assignment, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isApplicable_solveCsp_CC(sourcecode.Statement, controlflow.Command, controlflow.Node, sourcecode.Assignment, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getnext2next__IsApplicable_solveCsp_CC__Statement_Command_Node_Assignment_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getnext2next__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#checkDEC_FWD(sourcecode.Statement, sourcecode.Assignment) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#checkDEC_FWD(sourcecode.Statement, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getnext2next__CheckDEC_FWD__Statement_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#checkDEC_BWD(controlflow.Command, controlflow.Node) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#checkDEC_BWD(controlflow.Command, controlflow.Node)
	 * @generated
	 */
	EOperation getnext2next__CheckDEC_BWD__Command_Node();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2N, org.wbsilva.bx.sourcecode2controlflow.S2N) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2N, org.wbsilva.bx.sourcecode2controlflow.S2N)
	 * @generated
	 */
	EOperation getnext2next__GenerateModel__RuleEntryContainer_S2N_S2N();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Statement, org.wbsilva.bx.sourcecode2controlflow.S2N, org.wbsilva.bx.sourcecode2controlflow.S2N, controlflow.Command, controlflow.Node, sourcecode.Assignment, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Statement, org.wbsilva.bx.sourcecode2controlflow.S2N, org.wbsilva.bx.sourcecode2controlflow.S2N, controlflow.Command, controlflow.Node, sourcecode.Assignment, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getnext2next__GenerateModel_solveCsp_BWD__IsApplicableMatch_Statement_S2N_S2N_Command_Node_Assignment_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.next2next#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getnext2next__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command <em>assignment2command</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>assignment2command</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command
	 * @generated
	 */
	EClass getassignment2command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Statement) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Statement)
	 * @generated
	 */
	EOperation getassignment2command__IsAppropriate_FWD__Match_Assignment_Statement();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getassignment2command__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getassignment2command__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Statement) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Statement)
	 * @generated
	 */
	EOperation getassignment2command__RegisterObjectsToMatch_FWD__Match_Assignment_Statement();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Statement) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Statement)
	 * @generated
	 */
	EOperation getassignment2command__IsAppropriate_solveCsp_FWD__Match_Assignment_Statement();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getassignment2command__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Assignment, controlflow.Node, sourcecode.Statement, org.wbsilva.bx.sourcecode2controlflow.S2N) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Assignment, controlflow.Node, sourcecode.Statement, org.wbsilva.bx.sourcecode2controlflow.S2N)
	 * @generated
	 */
	EOperation getassignment2command__IsApplicable_solveCsp_FWD__IsApplicableMatch_Assignment_Node_Statement_S2N();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getassignment2command__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getassignment2command__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getassignment2command__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Node, controlflow.Command) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Node, controlflow.Command)
	 * @generated
	 */
	EOperation getassignment2command__IsAppropriate_BWD__Match_Node_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getassignment2command__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getassignment2command__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Node, controlflow.Command) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Node, controlflow.Command)
	 * @generated
	 */
	EOperation getassignment2command__RegisterObjectsToMatch_BWD__Match_Node_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Node, controlflow.Command) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Node, controlflow.Command)
	 * @generated
	 */
	EOperation getassignment2command__IsAppropriate_solveCsp_BWD__Match_Node_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getassignment2command__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Node, sourcecode.Statement, org.wbsilva.bx.sourcecode2controlflow.S2N, controlflow.Command) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Node, sourcecode.Statement, org.wbsilva.bx.sourcecode2controlflow.S2N, controlflow.Command)
	 * @generated
	 */
	EOperation getassignment2command__IsApplicable_solveCsp_BWD__IsApplicableMatch_Node_Statement_S2N_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getassignment2command__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getassignment2command__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getassignment2command__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isAppropriate_BWD_EMoflonEdge_63(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 63</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 63</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isAppropriate_BWD_EMoflonEdge_63(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getassignment2command__IsAppropriate_BWD_EMoflonEdge_63__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isAppropriate_FWD_EMoflonEdge_69(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 69</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 69</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isAppropriate_FWD_EMoflonEdge_69(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getassignment2command__IsAppropriate_FWD_EMoflonEdge_69__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getassignment2command__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getassignment2command__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getassignment2command__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isApplicable_solveCsp_CC(sourcecode.Assignment, controlflow.Node, sourcecode.Statement, controlflow.Command, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isApplicable_solveCsp_CC(sourcecode.Assignment, controlflow.Node, sourcecode.Statement, controlflow.Command, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getassignment2command__IsApplicable_solveCsp_CC__Assignment_Node_Statement_Command_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getassignment2command__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#checkDEC_FWD(sourcecode.Assignment, sourcecode.Statement) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#checkDEC_FWD(sourcecode.Assignment, sourcecode.Statement)
	 * @generated
	 */
	EOperation getassignment2command__CheckDEC_FWD__Assignment_Statement();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#checkDEC_BWD(controlflow.Node, controlflow.Command) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#checkDEC_BWD(controlflow.Node, controlflow.Command)
	 * @generated
	 */
	EOperation getassignment2command__CheckDEC_BWD__Node_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2N) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2N)
	 * @generated
	 */
	EOperation getassignment2command__GenerateModel__RuleEntryContainer_S2N();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Node, sourcecode.Statement, org.wbsilva.bx.sourcecode2controlflow.S2N, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Node, sourcecode.Statement, org.wbsilva.bx.sourcecode2controlflow.S2N, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getassignment2command__GenerateModel_solveCsp_BWD__IsApplicableMatch_Node_Statement_S2N_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.assignment2command#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getassignment2command__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub <em>whilelul2branchbub</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>whilelul2branchbub</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub
	 * @generated
	 */
	EClass getwhilelul2branchbub();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Assignment) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__IsAppropriate_FWD__Match_While_While_While_Assignment_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Assignment) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__RegisterObjectsToMatch_FWD__Match_While_While_While_Assignment_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Assignment) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__IsAppropriate_solveCsp_FWD__Match_While_While_While_Assignment_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.While, controlflow.Branch, sourcecode.While, sourcecode.While, sourcecode.Assignment, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Assignment) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.While, controlflow.Branch, sourcecode.While, sourcecode.While, sourcecode.Assignment, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__IsApplicable_solveCsp_FWD__IsApplicableMatch_While_Branch_While_While_Assignment_S2B_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Command) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Command)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__IsAppropriate_BWD__Match_Branch_Branch_Branch_Command_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Command) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Command)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__RegisterObjectsToMatch_BWD__Match_Branch_Branch_Branch_Command_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Command) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Command)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__IsAppropriate_solveCsp_BWD__Match_Branch_Branch_Branch_Command_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command, sourcecode.While, controlflow.Command, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command, sourcecode.While, controlflow.Command, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__IsApplicable_solveCsp_BWD__IsApplicableMatch_Branch_Branch_Branch_Command_While_Command_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isAppropriate_BWD_EMoflonEdge_64(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 64</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 64</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isAppropriate_BWD_EMoflonEdge_64(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__IsAppropriate_BWD_EMoflonEdge_64__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isAppropriate_FWD_EMoflonEdge_70(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 70</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 70</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isAppropriate_FWD_EMoflonEdge_70(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__IsAppropriate_FWD_EMoflonEdge_70__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isApplicable_solveCsp_CC(sourcecode.While, controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command, sourcecode.While, sourcecode.While, sourcecode.Assignment, controlflow.Command, sourcecode.Assignment, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isApplicable_solveCsp_CC(sourcecode.While, controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command, sourcecode.While, sourcecode.While, sourcecode.Assignment, controlflow.Command, sourcecode.Assignment, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__IsApplicable_solveCsp_CC__While_Branch_Branch_Branch_Command_While_While_Assignment_Command_Assignment_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#checkDEC_FWD(sourcecode.While, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Assignment) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#checkDEC_FWD(sourcecode.While, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__CheckDEC_FWD__While_While_While_Assignment_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#checkDEC_BWD(controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Command) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#checkDEC_BWD(controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Command)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__CheckDEC_BWD__Branch_Branch_Branch_Command_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__GenerateModel_solveCsp_BWD__IsApplicableMatch_Branch_While_S2B_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilelul2branchbub#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilelul2branchbub__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub <em>decdul2branchbub</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>decdul2branchbub</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub
	 * @generated
	 */
	EClass getdecdul2branchbub();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Decision) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Decision)
	 * @generated
	 */
	EOperation getdecdul2branchbub__IsAppropriate_FWD__Match_Assignment_Decision_While_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecdul2branchbub__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecdul2branchbub__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Decision) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Decision)
	 * @generated
	 */
	EOperation getdecdul2branchbub__RegisterObjectsToMatch_FWD__Match_Assignment_Decision_While_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Decision) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Decision)
	 * @generated
	 */
	EOperation getdecdul2branchbub__IsAppropriate_solveCsp_FWD__Match_Assignment_Decision_While_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecdul2branchbub__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Assignment, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, sourcecode.While, sourcecode.Decision, controlflow.Branch) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Assignment, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, sourcecode.While, sourcecode.Decision, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecdul2branchbub__IsApplicable_solveCsp_FWD__IsApplicableMatch_Assignment_S2B_Decision_While_Decision_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecdul2branchbub__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecdul2branchbub__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecdul2branchbub__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecdul2branchbub__IsAppropriate_BWD__Match_Branch_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecdul2branchbub__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecdul2branchbub__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecdul2branchbub__RegisterObjectsToMatch_BWD__Match_Branch_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecdul2branchbub__IsAppropriate_solveCsp_BWD__Match_Branch_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecdul2branchbub__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecdul2branchbub__IsApplicable_solveCsp_BWD__IsApplicableMatch_Branch_S2B_Decision_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecdul2branchbub__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecdul2branchbub__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecdul2branchbub__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isAppropriate_BWD_EMoflonEdge_65(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 65</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 65</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isAppropriate_BWD_EMoflonEdge_65(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecdul2branchbub__IsAppropriate_BWD_EMoflonEdge_65__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isAppropriate_FWD_EMoflonEdge_71(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 71</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 71</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isAppropriate_FWD_EMoflonEdge_71(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecdul2branchbub__IsAppropriate_FWD_EMoflonEdge_71__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecdul2branchbub__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecdul2branchbub__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecdul2branchbub__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isApplicable_solveCsp_CC(sourcecode.Assignment, controlflow.Branch, sourcecode.Decision, sourcecode.While, sourcecode.Decision, controlflow.Branch, controlflow.Command, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isApplicable_solveCsp_CC(sourcecode.Assignment, controlflow.Branch, sourcecode.Decision, sourcecode.While, sourcecode.Decision, controlflow.Branch, controlflow.Command, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecdul2branchbub__IsApplicable_solveCsp_CC__Assignment_Branch_Decision_While_Decision_Branch_Command_Branch_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecdul2branchbub__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#checkDEC_FWD(sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Decision) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#checkDEC_FWD(sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Decision)
	 * @generated
	 */
	EOperation getdecdul2branchbub__CheckDEC_FWD__Assignment_Decision_While_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#checkDEC_BWD(controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#checkDEC_BWD(controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecdul2branchbub__CheckDEC_BWD__Branch_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getdecdul2branchbub__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getdecdul2branchbub__GenerateModel_solveCsp_BWD__IsApplicableMatch_S2B_Decision_Branch_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdul2branchbub#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecdul2branchbub__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb <em>decld2branchbb</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>decld2branchbb</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb
	 * @generated
	 */
	EClass getdecld2branchbb();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Decision, sourcecode.Decision, sourcecode.Assignment) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Decision, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecld2branchbb__IsAppropriate_FWD__Match_While_Decision_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecld2branchbb__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecld2branchbb__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Decision, sourcecode.Decision, sourcecode.Assignment) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Decision, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecld2branchbb__RegisterObjectsToMatch_FWD__Match_While_Decision_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Decision, sourcecode.Decision, sourcecode.Assignment) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Decision, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecld2branchbb__IsAppropriate_solveCsp_FWD__Match_While_Decision_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecld2branchbb__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, sourcecode.Decision, sourcecode.Decision, controlflow.Branch, sourcecode.Assignment) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, sourcecode.Decision, sourcecode.Decision, controlflow.Branch, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecld2branchbb__IsApplicable_solveCsp_FWD__IsApplicableMatch_S2B_While_Decision_Decision_Branch_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecld2branchbb__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecld2branchbb__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecld2branchbb__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecld2branchbb__IsAppropriate_BWD__Match_Branch_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecld2branchbb__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecld2branchbb__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecld2branchbb__RegisterObjectsToMatch_BWD__Match_Branch_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecld2branchbb__IsAppropriate_solveCsp_BWD__Match_Branch_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecld2branchbb__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecld2branchbb__IsApplicable_solveCsp_BWD__IsApplicableMatch_S2B_Decision_Branch_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecld2branchbb__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecld2branchbb__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecld2branchbb__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isAppropriate_BWD_EMoflonEdge_66(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 66</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 66</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isAppropriate_BWD_EMoflonEdge_66(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecld2branchbb__IsAppropriate_BWD_EMoflonEdge_66__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isAppropriate_FWD_EMoflonEdge_72(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 72</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 72</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isAppropriate_FWD_EMoflonEdge_72(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecld2branchbb__IsAppropriate_FWD_EMoflonEdge_72__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecld2branchbb__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecld2branchbb__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecld2branchbb__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isApplicable_solveCsp_CC(sourcecode.While, sourcecode.Decision, sourcecode.Decision, controlflow.Branch, controlflow.Branch, sourcecode.Assignment, controlflow.Command, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isApplicable_solveCsp_CC(sourcecode.While, sourcecode.Decision, sourcecode.Decision, controlflow.Branch, controlflow.Branch, sourcecode.Assignment, controlflow.Command, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecld2branchbb__IsApplicable_solveCsp_CC__While_Decision_Decision_Branch_Branch_Assignment_Command_Branch_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecld2branchbb__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#checkDEC_FWD(sourcecode.While, sourcecode.Decision, sourcecode.Decision, sourcecode.Assignment) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#checkDEC_FWD(sourcecode.While, sourcecode.Decision, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecld2branchbb__CheckDEC_FWD__While_Decision_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#checkDEC_BWD(controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#checkDEC_BWD(controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecld2branchbb__CheckDEC_BWD__Branch_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getdecld2branchbb__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getdecld2branchbb__GenerateModel_solveCsp_BWD__IsApplicableMatch_S2B_Decision_Branch_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decld2branchbb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecld2branchbb__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub <em>deculul2branchubub</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>deculul2branchubub</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub
	 * @generated
	 */
	EClass getdeculul2branchubub();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Assignment, sourcecode.While) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getdeculul2branchubub__IsAppropriate_FWD__Match_Assignment_Decision_While_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdeculul2branchubub__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdeculul2branchubub__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Assignment, sourcecode.While) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getdeculul2branchubub__RegisterObjectsToMatch_FWD__Match_Assignment_Decision_While_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Assignment, sourcecode.While) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getdeculul2branchubub__IsAppropriate_solveCsp_FWD__Match_Assignment_Decision_While_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdeculul2branchubub__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Assignment, controlflow.Branch, sourcecode.While) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Assignment, controlflow.Branch, sourcecode.While)
	 * @generated
	 */
	EOperation getdeculul2branchubub__IsApplicable_solveCsp_FWD__IsApplicableMatch_S2B_Assignment_Decision_While_Assignment_Branch_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdeculul2branchubub__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdeculul2branchubub__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdeculul2branchubub__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command)
	 * @generated
	 */
	EOperation getdeculul2branchubub__IsAppropriate_BWD__Match_Command_Branch_Branch_Branch_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdeculul2branchubub__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdeculul2branchubub__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command)
	 * @generated
	 */
	EOperation getdeculul2branchubub__RegisterObjectsToMatch_BWD__Match_Command_Branch_Branch_Branch_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command)
	 * @generated
	 */
	EOperation getdeculul2branchubub__IsAppropriate_solveCsp_BWD__Match_Command_Branch_Branch_Branch_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdeculul2branchubub__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Command, controlflow.Branch, controlflow.Branch, sourcecode.Decision, controlflow.Branch, controlflow.Command) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Command, controlflow.Branch, controlflow.Branch, sourcecode.Decision, controlflow.Branch, controlflow.Command)
	 * @generated
	 */
	EOperation getdeculul2branchubub__IsApplicable_solveCsp_BWD__IsApplicableMatch_S2B_Command_Branch_Branch_Decision_Branch_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdeculul2branchubub__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdeculul2branchubub__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdeculul2branchubub__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isAppropriate_BWD_EMoflonEdge_67(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 67</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 67</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isAppropriate_BWD_EMoflonEdge_67(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdeculul2branchubub__IsAppropriate_BWD_EMoflonEdge_67__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isAppropriate_FWD_EMoflonEdge_73(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 73</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 73</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isAppropriate_FWD_EMoflonEdge_73(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdeculul2branchubub__IsAppropriate_FWD_EMoflonEdge_73__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdeculul2branchubub__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdeculul2branchubub__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdeculul2branchubub__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isApplicable_solveCsp_CC(controlflow.Command, controlflow.Branch, controlflow.Branch, sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Assignment, controlflow.Branch, controlflow.Command, sourcecode.While, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isApplicable_solveCsp_CC(controlflow.Command, controlflow.Branch, controlflow.Branch, sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Assignment, controlflow.Branch, controlflow.Command, sourcecode.While, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdeculul2branchubub__IsApplicable_solveCsp_CC__Command_Branch_Branch_Assignment_Decision_While_Assignment_Branch_Command_While_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdeculul2branchubub__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#checkDEC_FWD(sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Assignment, sourcecode.While) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#checkDEC_FWD(sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getdeculul2branchubub__CheckDEC_FWD__Assignment_Decision_While_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#checkDEC_BWD(controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#checkDEC_BWD(controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command)
	 * @generated
	 */
	EOperation getdeculul2branchubub__CheckDEC_BWD__Command_Branch_Branch_Branch_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getdeculul2branchubub__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getdeculul2branchubub__GenerateModel_solveCsp_BWD__IsApplicableMatch_S2B_Decision_Branch_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculul2branchubub#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdeculul2branchubub__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc <em>whileaa2branchcc</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>whileaa2branchcc</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc
	 * @generated
	 */
	EClass getwhileaa2branchcc();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__IsAppropriate_FWD__Match_Assignment_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__RegisterObjectsToMatch_FWD__Match_Assignment_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__IsAppropriate_solveCsp_FWD__Match_Assignment_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__IsApplicable_solveCsp_FWD__IsApplicableMatch_S2B_Branch_Assignment_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__IsAppropriate_BWD__Match_Branch_Command_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__RegisterObjectsToMatch_BWD__Match_Branch_Command_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__IsAppropriate_solveCsp_BWD__Match_Branch_Command_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, controlflow.Command, controlflow.Command, sourcecode.While) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, controlflow.Command, controlflow.Command, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__IsApplicable_solveCsp_BWD__IsApplicableMatch_S2B_Branch_Command_Command_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isAppropriate_BWD_EMoflonEdge_68(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 68</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 68</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isAppropriate_BWD_EMoflonEdge_68(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__IsAppropriate_BWD_EMoflonEdge_68__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isAppropriate_FWD_EMoflonEdge_74(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 74</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 74</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isAppropriate_FWD_EMoflonEdge_74(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__IsAppropriate_FWD_EMoflonEdge_74__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isApplicable_solveCsp_CC(controlflow.Branch, sourcecode.Assignment, controlflow.Command, controlflow.Command, sourcecode.While, sourcecode.Assignment, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isApplicable_solveCsp_CC(controlflow.Branch, sourcecode.Assignment, controlflow.Command, controlflow.Command, sourcecode.While, sourcecode.Assignment, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__IsApplicable_solveCsp_CC__Branch_Assignment_Command_Command_While_Assignment_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#checkDEC_FWD(sourcecode.Assignment, sourcecode.While, sourcecode.Assignment) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#checkDEC_FWD(sourcecode.Assignment, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__CheckDEC_FWD__Assignment_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#checkDEC_BWD(controlflow.Branch, controlflow.Command, controlflow.Command) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#checkDEC_BWD(controlflow.Branch, controlflow.Command, controlflow.Command)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__CheckDEC_BWD__Branch_Command_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, sourcecode.While, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, sourcecode.While, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__GenerateModel_solveCsp_BWD__IsApplicableMatch_S2B_Branch_While_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaa2branchcc#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileaa2branchcc__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc <em>decula2branchubc</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>decula2branchubc</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc
	 * @generated
	 */
	EClass getdecula2branchubc();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment, sourcecode.Decision) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment, sourcecode.Decision)
	 * @generated
	 */
	EOperation getdecula2branchubc__IsAppropriate_FWD__Match_Assignment_While_Assignment_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecula2branchubc__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecula2branchubc__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment, sourcecode.Decision) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment, sourcecode.Decision)
	 * @generated
	 */
	EOperation getdecula2branchubc__RegisterObjectsToMatch_FWD__Match_Assignment_While_Assignment_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment, sourcecode.Decision) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment, sourcecode.Decision)
	 * @generated
	 */
	EOperation getdecula2branchubc__IsAppropriate_solveCsp_FWD__Match_Assignment_While_Assignment_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecula2branchubc__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Assignment, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, sourcecode.Assignment, sourcecode.Decision, controlflow.Branch) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Assignment, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, sourcecode.Assignment, sourcecode.Decision, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecula2branchubc__IsApplicable_solveCsp_FWD__IsApplicableMatch_Assignment_S2B_While_Assignment_Decision_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecula2branchubc__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecula2branchubc__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecula2branchubc__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecula2branchubc__IsAppropriate_BWD__Match_Branch_Command_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecula2branchubc__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecula2branchubc__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecula2branchubc__RegisterObjectsToMatch_BWD__Match_Branch_Command_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecula2branchubc__IsAppropriate_solveCsp_BWD__Match_Branch_Command_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecula2branchubc__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, controlflow.Command, controlflow.Command, sourcecode.Decision, controlflow.Branch) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, controlflow.Command, controlflow.Command, sourcecode.Decision, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecula2branchubc__IsApplicable_solveCsp_BWD__IsApplicableMatch_S2B_Branch_Command_Command_Decision_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecula2branchubc__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecula2branchubc__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecula2branchubc__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isAppropriate_BWD_EMoflonEdge_69(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 69</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 69</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isAppropriate_BWD_EMoflonEdge_69(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecula2branchubc__IsAppropriate_BWD_EMoflonEdge_69__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isAppropriate_FWD_EMoflonEdge_75(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 75</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 75</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isAppropriate_FWD_EMoflonEdge_75(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecula2branchubc__IsAppropriate_FWD_EMoflonEdge_75__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecula2branchubc__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecula2branchubc__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecula2branchubc__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isApplicable_solveCsp_CC(sourcecode.Assignment, sourcecode.While, controlflow.Branch, controlflow.Command, sourcecode.Assignment, controlflow.Command, sourcecode.Decision, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isApplicable_solveCsp_CC(sourcecode.Assignment, sourcecode.While, controlflow.Branch, controlflow.Command, sourcecode.Assignment, controlflow.Command, sourcecode.Decision, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecula2branchubc__IsApplicable_solveCsp_CC__Assignment_While_Branch_Command_Assignment_Command_Decision_Branch_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecula2branchubc__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#checkDEC_FWD(sourcecode.Assignment, sourcecode.While, sourcecode.Assignment, sourcecode.Decision) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#checkDEC_FWD(sourcecode.Assignment, sourcecode.While, sourcecode.Assignment, sourcecode.Decision)
	 * @generated
	 */
	EOperation getdecula2branchubc__CheckDEC_FWD__Assignment_While_Assignment_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#checkDEC_BWD(controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#checkDEC_BWD(controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecula2branchubc__CheckDEC_BWD__Branch_Command_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getdecula2branchubc__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getdecula2branchubc__GenerateModel_solveCsp_BWD__IsApplicableMatch_S2B_Decision_Branch_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decula2branchubc#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecula2branchubc__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch <em>decdecdec2branchbranchbranch</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>decdecdec2branchbranchbranch</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch
	 * @generated
	 */
	EClass getdecdecdec2branchbranchbranch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Decision, sourcecode.Decision) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Decision, sourcecode.Decision)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__IsAppropriate_FWD__Match_Decision_Decision_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Decision, sourcecode.Decision) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Decision, sourcecode.Decision)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__RegisterObjectsToMatch_FWD__Match_Decision_Decision_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Decision, sourcecode.Decision) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Decision, sourcecode.Decision)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__IsAppropriate_solveCsp_FWD__Match_Decision_Decision_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Decision, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, sourcecode.Decision, sourcecode.Decision) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Decision, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, sourcecode.Decision, sourcecode.Decision)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__IsApplicable_solveCsp_FWD__IsApplicableMatch_Decision_S2B_Branch_Decision_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__IsAppropriate_BWD__Match_Branch_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__RegisterObjectsToMatch_BWD__Match_Branch_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__IsAppropriate_solveCsp_BWD__Match_Branch_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, controlflow.Branch, sourcecode.Decision, controlflow.Branch) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, controlflow.Branch, sourcecode.Decision, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__IsApplicable_solveCsp_BWD__IsApplicableMatch_S2B_Branch_Branch_Decision_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isAppropriate_BWD_EMoflonEdge_70(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 70</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 70</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isAppropriate_BWD_EMoflonEdge_70(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__IsAppropriate_BWD_EMoflonEdge_70__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isAppropriate_FWD_EMoflonEdge_76(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 76</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 76</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isAppropriate_FWD_EMoflonEdge_76(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__IsAppropriate_FWD_EMoflonEdge_76__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isApplicable_solveCsp_CC(sourcecode.Decision, controlflow.Branch, controlflow.Branch, sourcecode.Decision, controlflow.Branch, sourcecode.Decision, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isApplicable_solveCsp_CC(sourcecode.Decision, controlflow.Branch, controlflow.Branch, sourcecode.Decision, controlflow.Branch, sourcecode.Decision, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__IsApplicable_solveCsp_CC__Decision_Branch_Branch_Decision_Branch_Decision_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#checkDEC_FWD(sourcecode.Decision, sourcecode.Decision, sourcecode.Decision) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#checkDEC_FWD(sourcecode.Decision, sourcecode.Decision, sourcecode.Decision)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__CheckDEC_FWD__Decision_Decision_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#checkDEC_BWD(controlflow.Branch, controlflow.Branch, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#checkDEC_BWD(controlflow.Branch, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__CheckDEC_BWD__Branch_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, sourcecode.Decision, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, sourcecode.Decision, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__GenerateModel_solveCsp_BWD__IsApplicableMatch_S2B_Branch_Decision_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecdec2branchbranchbranch#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecdecdec2branchbranchbranch__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb <em>decll2branchbb</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>decll2branchbb</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb
	 * @generated
	 */
	EClass getdecll2branchbb();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Decision, sourcecode.Assignment) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecll2branchbb__IsAppropriate_FWD__Match_While_While_Assignment_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecll2branchbb__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecll2branchbb__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Decision, sourcecode.Assignment) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecll2branchbb__RegisterObjectsToMatch_FWD__Match_While_While_Assignment_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Decision, sourcecode.Assignment) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecll2branchbb__IsAppropriate_solveCsp_FWD__Match_While_While_Assignment_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecll2branchbb__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Decision, sourcecode.Assignment, controlflow.Branch) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Decision, sourcecode.Assignment, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecll2branchbb__IsApplicable_solveCsp_FWD__IsApplicableMatch_S2B_While_While_Assignment_Decision_Assignment_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecll2branchbb__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecll2branchbb__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecll2branchbb__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecll2branchbb__IsAppropriate_BWD__Match_Branch_Command_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecll2branchbb__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecll2branchbb__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecll2branchbb__RegisterObjectsToMatch_BWD__Match_Branch_Command_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecll2branchbb__IsAppropriate_solveCsp_BWD__Match_Branch_Command_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecll2branchbb__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, controlflow.Command, controlflow.Branch, sourcecode.Decision, controlflow.Command, controlflow.Branch) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, controlflow.Command, controlflow.Branch, sourcecode.Decision, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecll2branchbb__IsApplicable_solveCsp_BWD__IsApplicableMatch_S2B_Branch_Command_Branch_Decision_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecll2branchbb__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecll2branchbb__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecll2branchbb__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isAppropriate_BWD_EMoflonEdge_71(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 71</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 71</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isAppropriate_BWD_EMoflonEdge_71(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecll2branchbb__IsAppropriate_BWD_EMoflonEdge_71__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isAppropriate_FWD_EMoflonEdge_77(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 77</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 77</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isAppropriate_FWD_EMoflonEdge_77(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecll2branchbb__IsAppropriate_FWD_EMoflonEdge_77__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecll2branchbb__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecll2branchbb__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecll2branchbb__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isApplicable_solveCsp_CC(sourcecode.While, controlflow.Branch, controlflow.Command, controlflow.Branch, sourcecode.While, sourcecode.Assignment, sourcecode.Decision, controlflow.Command, sourcecode.Assignment, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isApplicable_solveCsp_CC(sourcecode.While, controlflow.Branch, controlflow.Command, controlflow.Branch, sourcecode.While, sourcecode.Assignment, sourcecode.Decision, controlflow.Command, sourcecode.Assignment, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecll2branchbb__IsApplicable_solveCsp_CC__While_Branch_Command_Branch_While_Assignment_Decision_Command_Assignment_Branch_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecll2branchbb__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#checkDEC_FWD(sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Decision, sourcecode.Assignment) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#checkDEC_FWD(sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecll2branchbb__CheckDEC_FWD__While_While_Assignment_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#checkDEC_BWD(controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#checkDEC_BWD(controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecll2branchbb__CheckDEC_BWD__Branch_Command_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getdecll2branchbb__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getdecll2branchbb__GenerateModel_solveCsp_BWD__IsApplicableMatch_S2B_Decision_Branch_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decll2branchbb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecll2branchbb__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub <em>decaul2branchcub</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>decaul2branchcub</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub
	 * @generated
	 */
	EClass getdecaul2branchcub();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Decision, sourcecode.Assignment) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecaul2branchcub__IsAppropriate_FWD__Match_Assignment_While_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecaul2branchcub__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecaul2branchcub__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Decision, sourcecode.Assignment) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecaul2branchcub__RegisterObjectsToMatch_FWD__Match_Assignment_While_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Decision, sourcecode.Assignment) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecaul2branchcub__IsAppropriate_solveCsp_FWD__Match_Assignment_While_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecaul2branchcub__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Assignment, sourcecode.While, sourcecode.Decision, sourcecode.Assignment) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Assignment, sourcecode.While, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecaul2branchcub__IsApplicable_solveCsp_FWD__IsApplicableMatch_Branch_S2B_Assignment_While_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecaul2branchcub__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecaul2branchcub__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecaul2branchcub__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecaul2branchcub__IsAppropriate_BWD__Match_Branch_Command_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecaul2branchcub__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecaul2branchcub__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecaul2branchcub__RegisterObjectsToMatch_BWD__Match_Branch_Command_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecaul2branchcub__IsAppropriate_solveCsp_BWD__Match_Branch_Command_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecaul2branchcub__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Command, controlflow.Command, controlflow.Branch, sourcecode.Decision) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Command, controlflow.Command, controlflow.Branch, sourcecode.Decision)
	 * @generated
	 */
	EOperation getdecaul2branchcub__IsApplicable_solveCsp_BWD__IsApplicableMatch_Branch_S2B_Command_Command_Branch_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecaul2branchcub__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecaul2branchcub__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecaul2branchcub__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isAppropriate_BWD_EMoflonEdge_72(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 72</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 72</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isAppropriate_BWD_EMoflonEdge_72(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecaul2branchcub__IsAppropriate_BWD_EMoflonEdge_72__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isAppropriate_FWD_EMoflonEdge_78(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 78</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 78</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isAppropriate_FWD_EMoflonEdge_78(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecaul2branchcub__IsAppropriate_FWD_EMoflonEdge_78__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecaul2branchcub__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecaul2branchcub__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecaul2branchcub__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isApplicable_solveCsp_CC(controlflow.Branch, controlflow.Command, controlflow.Command, sourcecode.Assignment, sourcecode.While, controlflow.Branch, sourcecode.Decision, sourcecode.Assignment, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isApplicable_solveCsp_CC(controlflow.Branch, controlflow.Command, controlflow.Command, sourcecode.Assignment, sourcecode.While, controlflow.Branch, sourcecode.Decision, sourcecode.Assignment, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecaul2branchcub__IsApplicable_solveCsp_CC__Branch_Command_Command_Assignment_While_Branch_Decision_Assignment_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecaul2branchcub__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#checkDEC_FWD(sourcecode.Assignment, sourcecode.While, sourcecode.Decision, sourcecode.Assignment) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#checkDEC_FWD(sourcecode.Assignment, sourcecode.While, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecaul2branchcub__CheckDEC_FWD__Assignment_While_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#checkDEC_BWD(controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#checkDEC_BWD(controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecaul2branchcub__CheckDEC_BWD__Branch_Command_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getdecaul2branchcub__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getdecaul2branchcub__GenerateModel_solveCsp_BWD__IsApplicableMatch_Branch_S2B_Decision_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decaul2branchcub#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecaul2branchcub__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb <em>decull2branchubb</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>decull2branchubb</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb
	 * @generated
	 */
	EClass getdecull2branchubb();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.While, sourcecode.Decision, sourcecode.Assignment) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.While, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecull2branchubb__IsAppropriate_FWD__Match_While_Assignment_While_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecull2branchubb__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecull2branchubb__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.While, sourcecode.Decision, sourcecode.Assignment) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.While, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecull2branchubb__RegisterObjectsToMatch_FWD__Match_While_Assignment_While_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.While, sourcecode.Decision, sourcecode.Assignment) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.While, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecull2branchubb__IsAppropriate_solveCsp_FWD__Match_While_Assignment_While_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecull2branchubb__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.While, sourcecode.Assignment, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Branch, sourcecode.Assignment) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.While, sourcecode.Assignment, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Branch, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecull2branchubb__IsApplicable_solveCsp_FWD__IsApplicableMatch_While_Assignment_While_S2B_Decision_Branch_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecull2branchubb__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecull2branchubb__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecull2branchubb__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Command) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Command)
	 * @generated
	 */
	EOperation getdecull2branchubb__IsAppropriate_BWD__Match_Branch_Branch_Branch_Command_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecull2branchubb__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecull2branchubb__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Command) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Command)
	 * @generated
	 */
	EOperation getdecull2branchubb__RegisterObjectsToMatch_BWD__Match_Branch_Branch_Branch_Command_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Command) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Command)
	 * @generated
	 */
	EOperation getdecull2branchubb__IsAppropriate_solveCsp_BWD__Match_Branch_Branch_Branch_Command_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecull2branchubb__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Branch, controlflow.Command, controlflow.Command) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Branch, controlflow.Command, controlflow.Command)
	 * @generated
	 */
	EOperation getdecull2branchubb__IsApplicable_solveCsp_BWD__IsApplicableMatch_Branch_Branch_S2B_Decision_Branch_Command_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecull2branchubb__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecull2branchubb__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecull2branchubb__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isAppropriate_BWD_EMoflonEdge_73(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 73</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 73</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isAppropriate_BWD_EMoflonEdge_73(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecull2branchubb__IsAppropriate_BWD_EMoflonEdge_73__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isAppropriate_FWD_EMoflonEdge_79(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 79</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 79</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isAppropriate_FWD_EMoflonEdge_79(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecull2branchubb__IsAppropriate_FWD_EMoflonEdge_79__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecull2branchubb__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecull2branchubb__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecull2branchubb__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isApplicable_solveCsp_CC(sourcecode.While, sourcecode.Assignment, controlflow.Branch, controlflow.Branch, sourcecode.While, sourcecode.Decision, controlflow.Branch, controlflow.Command, controlflow.Command, sourcecode.Assignment, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isApplicable_solveCsp_CC(sourcecode.While, sourcecode.Assignment, controlflow.Branch, controlflow.Branch, sourcecode.While, sourcecode.Decision, controlflow.Branch, controlflow.Command, controlflow.Command, sourcecode.Assignment, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecull2branchubb__IsApplicable_solveCsp_CC__While_Assignment_Branch_Branch_While_Decision_Branch_Command_Command_Assignment_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecull2branchubb__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#checkDEC_FWD(sourcecode.While, sourcecode.Assignment, sourcecode.While, sourcecode.Decision, sourcecode.Assignment) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#checkDEC_FWD(sourcecode.While, sourcecode.Assignment, sourcecode.While, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecull2branchubb__CheckDEC_FWD__While_Assignment_While_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#checkDEC_BWD(controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Command) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#checkDEC_BWD(controlflow.Branch, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Command)
	 * @generated
	 */
	EOperation getdecull2branchubb__CheckDEC_BWD__Branch_Branch_Branch_Command_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getdecull2branchubb__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getdecull2branchubb__GenerateModel_solveCsp_BWD__IsApplicableMatch_S2B_Decision_Branch_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decull2branchubb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecull2branchubb__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb <em>whilead2branchcb</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>whilead2branchcb</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb
	 * @generated
	 */
	EClass getwhilead2branchcb();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Decision) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Decision)
	 * @generated
	 */
	EOperation getwhilead2branchcb__IsAppropriate_FWD__Match_Assignment_While_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhilead2branchcb__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilead2branchcb__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Decision) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Decision)
	 * @generated
	 */
	EOperation getwhilead2branchcb__RegisterObjectsToMatch_FWD__Match_Assignment_While_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Decision) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Decision)
	 * @generated
	 */
	EOperation getwhilead2branchcb__IsAppropriate_solveCsp_FWD__Match_Assignment_While_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilead2branchcb__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Assignment, controlflow.Branch, sourcecode.While, sourcecode.Decision, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Assignment, controlflow.Branch, sourcecode.While, sourcecode.Decision, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhilead2branchcb__IsApplicable_solveCsp_FWD__IsApplicableMatch_Assignment_Branch_While_Decision_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilead2branchcb__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhilead2branchcb__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilead2branchcb__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command)
	 * @generated
	 */
	EOperation getwhilead2branchcb__IsAppropriate_BWD__Match_Branch_Branch_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhilead2branchcb__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilead2branchcb__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command)
	 * @generated
	 */
	EOperation getwhilead2branchcb__RegisterObjectsToMatch_BWD__Match_Branch_Branch_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command)
	 * @generated
	 */
	EOperation getwhilead2branchcb__IsAppropriate_solveCsp_BWD__Match_Branch_Branch_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilead2branchcb__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, controlflow.Branch, sourcecode.While, controlflow.Command, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, controlflow.Branch, sourcecode.While, controlflow.Command, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhilead2branchcb__IsApplicable_solveCsp_BWD__IsApplicableMatch_Branch_Branch_While_Command_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilead2branchcb__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhilead2branchcb__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilead2branchcb__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isAppropriate_BWD_EMoflonEdge_74(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 74</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 74</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isAppropriate_BWD_EMoflonEdge_74(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhilead2branchcb__IsAppropriate_BWD_EMoflonEdge_74__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isAppropriate_FWD_EMoflonEdge_80(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 80</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 80</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isAppropriate_FWD_EMoflonEdge_80(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhilead2branchcb__IsAppropriate_FWD_EMoflonEdge_80__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhilead2branchcb__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhilead2branchcb__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilead2branchcb__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isApplicable_solveCsp_CC(sourcecode.Assignment, controlflow.Branch, controlflow.Branch, sourcecode.While, sourcecode.Decision, controlflow.Command, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isApplicable_solveCsp_CC(sourcecode.Assignment, controlflow.Branch, controlflow.Branch, sourcecode.While, sourcecode.Decision, controlflow.Command, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilead2branchcb__IsApplicable_solveCsp_CC__Assignment_Branch_Branch_While_Decision_Command_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilead2branchcb__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#checkDEC_FWD(sourcecode.Assignment, sourcecode.While, sourcecode.Decision) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#checkDEC_FWD(sourcecode.Assignment, sourcecode.While, sourcecode.Decision)
	 * @generated
	 */
	EOperation getwhilead2branchcb__CheckDEC_FWD__Assignment_While_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#checkDEC_BWD(controlflow.Branch, controlflow.Branch, controlflow.Command) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#checkDEC_BWD(controlflow.Branch, controlflow.Branch, controlflow.Command)
	 * @generated
	 */
	EOperation getwhilead2branchcb__CheckDEC_BWD__Branch_Branch_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhilead2branchcb__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getwhilead2branchcb__GenerateModel_solveCsp_BWD__IsApplicableMatch_Branch_While_S2B_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilead2branchcb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilead2branchcb__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb <em>whileuld2branchubb</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>whileuld2branchubb</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb
	 * @generated
	 */
	EClass getwhileuld2branchubb();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Decision, sourcecode.Assignment, sourcecode.While) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Decision, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__IsAppropriate_FWD__Match_While_Decision_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Decision, sourcecode.Assignment, sourcecode.While) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Decision, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__RegisterObjectsToMatch_FWD__Match_While_Decision_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Decision, sourcecode.Assignment, sourcecode.While) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Decision, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__IsAppropriate_solveCsp_FWD__Match_While_Decision_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.While, sourcecode.Decision, sourcecode.Assignment, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, sourcecode.While) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.While, sourcecode.Decision, sourcecode.Assignment, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__IsApplicable_solveCsp_FWD__IsApplicableMatch_While_Decision_Assignment_S2B_Branch_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__IsAppropriate_BWD__Match_Branch_Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__RegisterObjectsToMatch_BWD__Match_Branch_Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__IsAppropriate_solveCsp_BWD__Match_Branch_Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Command, controlflow.Branch, sourcecode.While, controlflow.Branch) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Command, controlflow.Branch, sourcecode.While, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__IsApplicable_solveCsp_BWD__IsApplicableMatch_Branch_S2B_Command_Branch_While_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isAppropriate_BWD_EMoflonEdge_75(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 75</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 75</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isAppropriate_BWD_EMoflonEdge_75(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__IsAppropriate_BWD_EMoflonEdge_75__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isAppropriate_FWD_EMoflonEdge_81(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 81</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 81</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isAppropriate_FWD_EMoflonEdge_81(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__IsAppropriate_FWD_EMoflonEdge_81__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isApplicable_solveCsp_CC(controlflow.Branch, sourcecode.While, sourcecode.Decision, sourcecode.Assignment, controlflow.Command, controlflow.Branch, sourcecode.While, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isApplicable_solveCsp_CC(controlflow.Branch, sourcecode.While, sourcecode.Decision, sourcecode.Assignment, controlflow.Command, controlflow.Branch, sourcecode.While, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__IsApplicable_solveCsp_CC__Branch_While_Decision_Assignment_Command_Branch_While_Branch_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#checkDEC_FWD(sourcecode.While, sourcecode.Decision, sourcecode.Assignment, sourcecode.While) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#checkDEC_FWD(sourcecode.While, sourcecode.Decision, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__CheckDEC_FWD__While_Decision_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#checkDEC_BWD(controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#checkDEC_BWD(controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__CheckDEC_BWD__Branch_Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, sourcecode.While, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, sourcecode.While, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__GenerateModel_solveCsp_BWD__IsApplicableMatch_S2B_Branch_While_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileuld2branchubb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileuld2branchubb__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc <em>whileula2branchubc</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>whileula2branchubc</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc
	 * @generated
	 */
	EClass getwhileula2branchubc();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhileula2branchubc__IsAppropriate_FWD__Match_Assignment_While_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhileula2branchubc__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileula2branchubc__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhileula2branchubc__RegisterObjectsToMatch_FWD__Match_Assignment_While_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhileula2branchubc__IsAppropriate_solveCsp_FWD__Match_Assignment_While_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileula2branchubc__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Assignment, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, sourcecode.Assignment, controlflow.Branch) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Assignment, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, sourcecode.Assignment, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileula2branchubc__IsApplicable_solveCsp_FWD__IsApplicableMatch_Assignment_While_S2B_While_Assignment_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileula2branchubc__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhileula2branchubc__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileula2branchubc__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileula2branchubc__IsAppropriate_BWD__Match_Command_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhileula2branchubc__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileula2branchubc__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileula2branchubc__RegisterObjectsToMatch_BWD__Match_Command_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileula2branchubc__IsAppropriate_solveCsp_BWD__Match_Command_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileula2branchubc__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Command, controlflow.Branch, controlflow.Command, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Command, controlflow.Branch, controlflow.Command, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileula2branchubc__IsApplicable_solveCsp_BWD__IsApplicableMatch_Command_Branch_Command_While_S2B_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileula2branchubc__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhileula2branchubc__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileula2branchubc__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isAppropriate_BWD_EMoflonEdge_76(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 76</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 76</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isAppropriate_BWD_EMoflonEdge_76(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhileula2branchubc__IsAppropriate_BWD_EMoflonEdge_76__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isAppropriate_FWD_EMoflonEdge_82(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 82</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 82</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isAppropriate_FWD_EMoflonEdge_82(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhileula2branchubc__IsAppropriate_FWD_EMoflonEdge_82__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhileula2branchubc__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhileula2branchubc__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileula2branchubc__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isApplicable_solveCsp_CC(controlflow.Command, controlflow.Branch, controlflow.Command, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isApplicable_solveCsp_CC(controlflow.Command, controlflow.Branch, controlflow.Command, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileula2branchubc__IsApplicable_solveCsp_CC__Command_Branch_Command_Assignment_While_While_Assignment_Branch_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileula2branchubc__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#checkDEC_FWD(sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#checkDEC_FWD(sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhileula2branchubc__CheckDEC_FWD__Assignment_While_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#checkDEC_BWD(controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#checkDEC_BWD(controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileula2branchubc__CheckDEC_BWD__Command_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhileula2branchubc__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getwhileula2branchubc__GenerateModel_solveCsp_BWD__IsApplicableMatch_While_S2B_Branch_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileula2branchubc#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileula2branchubc__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch <em>firstuwhile2rootubranch</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>firstuwhile2rootubranch</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch
	 * @generated
	 */
	EClass getfirstuwhile2rootubranch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Program, sourcecode.While, sourcecode.Assignment) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Program, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__IsAppropriate_FWD__Match_Program_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Program, sourcecode.While, sourcecode.Assignment) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Program, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__RegisterObjectsToMatch_FWD__Match_Program_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Program, sourcecode.While, sourcecode.Assignment) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Program, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__IsAppropriate_solveCsp_FWD__Match_Program_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Program, org.wbsilva.bx.sourcecode2controlflow.P2G, sourcecode.While, sourcecode.Assignment, controlflow.Graph) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Program, org.wbsilva.bx.sourcecode2controlflow.P2G, sourcecode.While, sourcecode.Assignment, controlflow.Graph)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__IsApplicable_solveCsp_FWD__IsApplicableMatch_Program_P2G_While_Assignment_Graph();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Graph, controlflow.Command) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Graph, controlflow.Command)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__IsAppropriate_BWD__Match_Branch_Graph_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Graph, controlflow.Command) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Graph, controlflow.Command)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__RegisterObjectsToMatch_BWD__Match_Branch_Graph_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Graph, controlflow.Command) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Graph, controlflow.Command)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__IsAppropriate_solveCsp_BWD__Match_Branch_Graph_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Program, org.wbsilva.bx.sourcecode2controlflow.P2G, controlflow.Branch, controlflow.Graph, controlflow.Command) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Program, org.wbsilva.bx.sourcecode2controlflow.P2G, controlflow.Branch, controlflow.Graph, controlflow.Command)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__IsApplicable_solveCsp_BWD__IsApplicableMatch_Program_P2G_Branch_Graph_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isAppropriate_BWD_EMoflonEdge_77(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 77</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 77</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isAppropriate_BWD_EMoflonEdge_77(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__IsAppropriate_BWD_EMoflonEdge_77__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isAppropriate_FWD_EMoflonEdge_83(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 83</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 83</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isAppropriate_FWD_EMoflonEdge_83(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__IsAppropriate_FWD_EMoflonEdge_83__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isApplicable_solveCsp_CC(sourcecode.Program, controlflow.Branch, sourcecode.While, sourcecode.Assignment, controlflow.Graph, controlflow.Command, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isApplicable_solveCsp_CC(sourcecode.Program, controlflow.Branch, sourcecode.While, sourcecode.Assignment, controlflow.Graph, controlflow.Command, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__IsApplicable_solveCsp_CC__Program_Branch_While_Assignment_Graph_Command_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#checkDEC_FWD(sourcecode.Program, sourcecode.While, sourcecode.Assignment) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#checkDEC_FWD(sourcecode.Program, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__CheckDEC_FWD__Program_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#checkDEC_BWD(controlflow.Branch, controlflow.Graph, controlflow.Command) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#checkDEC_BWD(controlflow.Branch, controlflow.Graph, controlflow.Command)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__CheckDEC_BWD__Branch_Graph_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.P2G) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.P2G)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__GenerateModel__RuleEntryContainer_P2G();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Program, org.wbsilva.bx.sourcecode2controlflow.P2G, controlflow.Graph, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Program, org.wbsilva.bx.sourcecode2controlflow.P2G, controlflow.Graph, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__GenerateModel_solveCsp_BWD__IsApplicableMatch_Program_P2G_Graph_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstuwhile2rootubranch#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getfirstuwhile2rootubranch__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch <em>decassdec2branchcmdbranch</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>decassdec2branchcmdbranch</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch
	 * @generated
	 */
	EClass getdecassdec2branchcmdbranch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Decision, sourcecode.Assignment) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__IsAppropriate_FWD__Match_Decision_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Decision, sourcecode.Assignment) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__RegisterObjectsToMatch_FWD__Match_Decision_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Decision, sourcecode.Assignment) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__IsAppropriate_solveCsp_FWD__Match_Decision_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Decision, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, sourcecode.Assignment, controlflow.Branch) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Decision, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, sourcecode.Assignment, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__IsApplicable_solveCsp_FWD__IsApplicableMatch_Decision_S2B_Decision_Assignment_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__IsAppropriate_BWD__Match_Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__RegisterObjectsToMatch_BWD__Match_Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__IsAppropriate_solveCsp_BWD__Match_Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__IsApplicable_solveCsp_BWD__IsApplicableMatch_S2B_Decision_Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isAppropriate_BWD_EMoflonEdge_78(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 78</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 78</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isAppropriate_BWD_EMoflonEdge_78(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__IsAppropriate_BWD_EMoflonEdge_78__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isAppropriate_FWD_EMoflonEdge_84(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 84</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 84</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isAppropriate_FWD_EMoflonEdge_84(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__IsAppropriate_FWD_EMoflonEdge_84__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isApplicable_solveCsp_CC(sourcecode.Decision, sourcecode.Decision, controlflow.Command, controlflow.Branch, sourcecode.Assignment, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isApplicable_solveCsp_CC(sourcecode.Decision, sourcecode.Decision, controlflow.Command, controlflow.Branch, sourcecode.Assignment, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__IsApplicable_solveCsp_CC__Decision_Decision_Command_Branch_Assignment_Branch_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#checkDEC_FWD(sourcecode.Decision, sourcecode.Decision, sourcecode.Assignment) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#checkDEC_FWD(sourcecode.Decision, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__CheckDEC_FWD__Decision_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#checkDEC_BWD(controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#checkDEC_BWD(controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__CheckDEC_BWD__Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__GenerateModel_solveCsp_BWD__IsApplicableMatch_S2B_Decision_Branch_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassdec2branchcmdbranch#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecassdec2branchcmdbranch__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc <em>whilela2branchbc</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>whilela2branchbc</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc
	 * @generated
	 */
	EClass getwhilela2branchbc();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.Assignment, sourcecode.While) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhilela2branchbc__IsAppropriate_FWD__Match_While_Assignment_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhilela2branchbc__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilela2branchbc__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.Assignment, sourcecode.While) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhilela2branchbc__RegisterObjectsToMatch_FWD__Match_While_Assignment_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.Assignment, sourcecode.While) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhilela2branchbc__IsAppropriate_solveCsp_FWD__Match_While_Assignment_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilela2branchbc__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, sourcecode.Assignment, sourcecode.Assignment, sourcecode.While, controlflow.Branch) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, sourcecode.Assignment, sourcecode.Assignment, sourcecode.While, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhilela2branchbc__IsApplicable_solveCsp_FWD__IsApplicableMatch_S2B_While_Assignment_Assignment_While_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilela2branchbc__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhilela2branchbc__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilela2branchbc__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhilela2branchbc__IsAppropriate_BWD__Match_Command_Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhilela2branchbc__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilela2branchbc__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhilela2branchbc__RegisterObjectsToMatch_BWD__Match_Command_Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhilela2branchbc__IsAppropriate_solveCsp_BWD__Match_Command_Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilela2branchbc__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Command, controlflow.Command, sourcecode.While, controlflow.Branch, controlflow.Branch) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Command, controlflow.Command, sourcecode.While, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhilela2branchbc__IsApplicable_solveCsp_BWD__IsApplicableMatch_S2B_Command_Command_While_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilela2branchbc__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhilela2branchbc__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilela2branchbc__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isAppropriate_BWD_EMoflonEdge_79(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 79</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 79</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isAppropriate_BWD_EMoflonEdge_79(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhilela2branchbc__IsAppropriate_BWD_EMoflonEdge_79__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isAppropriate_FWD_EMoflonEdge_85(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 85</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 85</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isAppropriate_FWD_EMoflonEdge_85(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhilela2branchbc__IsAppropriate_FWD_EMoflonEdge_85__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhilela2branchbc__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhilela2branchbc__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilela2branchbc__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isApplicable_solveCsp_CC(sourcecode.While, sourcecode.Assignment, sourcecode.Assignment, controlflow.Command, controlflow.Command, sourcecode.While, controlflow.Branch, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isApplicable_solveCsp_CC(sourcecode.While, sourcecode.Assignment, sourcecode.Assignment, controlflow.Command, controlflow.Command, sourcecode.While, controlflow.Branch, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilela2branchbc__IsApplicable_solveCsp_CC__While_Assignment_Assignment_Command_Command_While_Branch_Branch_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilela2branchbc__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#checkDEC_FWD(sourcecode.While, sourcecode.Assignment, sourcecode.Assignment, sourcecode.While) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#checkDEC_FWD(sourcecode.While, sourcecode.Assignment, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhilela2branchbc__CheckDEC_FWD__While_Assignment_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#checkDEC_BWD(controlflow.Command, controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#checkDEC_BWD(controlflow.Command, controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhilela2branchbc__CheckDEC_BWD__Command_Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhilela2branchbc__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getwhilela2branchbc__GenerateModel_solveCsp_BWD__IsApplicableMatch_S2B_While_Branch_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilela2branchbc#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilela2branchbc__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub <em>whiledul2branchbub</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>whiledul2branchbub</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub
	 * @generated
	 */
	EClass getwhiledul2branchbub();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.Decision, sourcecode.Assignment) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__IsAppropriate_FWD__Match_While_While_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.Decision, sourcecode.Assignment) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__RegisterObjectsToMatch_FWD__Match_While_While_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.Decision, sourcecode.Assignment) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__IsAppropriate_solveCsp_FWD__Match_While_While_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, sourcecode.Decision, sourcecode.Assignment) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__IsApplicable_solveCsp_FWD__IsApplicableMatch_Branch_While_S2B_While_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__IsAppropriate_BWD__Match_Branch_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__RegisterObjectsToMatch_BWD__Match_Branch_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__IsAppropriate_solveCsp_BWD__Match_Branch_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.While, controlflow.Branch, controlflow.Command, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.While, controlflow.Branch, controlflow.Command, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__IsApplicable_solveCsp_BWD__IsApplicableMatch_Branch_While_Branch_Command_Branch_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isAppropriate_BWD_EMoflonEdge_80(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 80</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 80</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isAppropriate_BWD_EMoflonEdge_80(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__IsAppropriate_BWD_EMoflonEdge_80__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isAppropriate_FWD_EMoflonEdge_86(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 86</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 86</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isAppropriate_FWD_EMoflonEdge_86(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__IsAppropriate_FWD_EMoflonEdge_86__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isApplicable_solveCsp_CC(controlflow.Branch, sourcecode.While, controlflow.Branch, controlflow.Command, controlflow.Branch, sourcecode.While, sourcecode.Decision, sourcecode.Assignment, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isApplicable_solveCsp_CC(controlflow.Branch, sourcecode.While, controlflow.Branch, controlflow.Command, controlflow.Branch, sourcecode.While, sourcecode.Decision, sourcecode.Assignment, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__IsApplicable_solveCsp_CC__Branch_While_Branch_Command_Branch_While_Decision_Assignment_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#checkDEC_FWD(sourcecode.While, sourcecode.While, sourcecode.Decision, sourcecode.Assignment) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#checkDEC_FWD(sourcecode.While, sourcecode.While, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__CheckDEC_FWD__While_While_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#checkDEC_BWD(controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#checkDEC_BWD(controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__CheckDEC_BWD__Branch_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__GenerateModel_solveCsp_BWD__IsApplicableMatch_Branch_While_S2B_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledul2branchbub#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhiledul2branchbub__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch <em>firstwhile2rootbranch</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>firstwhile2rootbranch</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch
	 * @generated
	 */
	EClass getfirstwhile2rootbranch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Program, sourcecode.While) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Program, sourcecode.While)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__IsAppropriate_FWD__Match_Assignment_Program_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Program, sourcecode.While) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Program, sourcecode.While)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__RegisterObjectsToMatch_FWD__Match_Assignment_Program_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Program, sourcecode.While) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Program, sourcecode.While)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__IsAppropriate_solveCsp_FWD__Match_Assignment_Program_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Assignment, sourcecode.Program, org.wbsilva.bx.sourcecode2controlflow.P2G, sourcecode.While, controlflow.Graph) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Assignment, sourcecode.Program, org.wbsilva.bx.sourcecode2controlflow.P2G, sourcecode.While, controlflow.Graph)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__IsApplicable_solveCsp_FWD__IsApplicableMatch_Assignment_Program_P2G_While_Graph();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Graph, controlflow.Command) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Graph, controlflow.Command)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__IsAppropriate_BWD__Match_Branch_Graph_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Graph, controlflow.Command) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Graph, controlflow.Command)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__RegisterObjectsToMatch_BWD__Match_Branch_Graph_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Graph, controlflow.Command) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Graph, controlflow.Command)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__IsAppropriate_solveCsp_BWD__Match_Branch_Graph_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.Program, org.wbsilva.bx.sourcecode2controlflow.P2G, controlflow.Graph, controlflow.Command) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.Program, org.wbsilva.bx.sourcecode2controlflow.P2G, controlflow.Graph, controlflow.Command)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__IsApplicable_solveCsp_BWD__IsApplicableMatch_Branch_Program_P2G_Graph_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isAppropriate_BWD_EMoflonEdge_81(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 81</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 81</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isAppropriate_BWD_EMoflonEdge_81(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__IsAppropriate_BWD_EMoflonEdge_81__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isAppropriate_FWD_EMoflonEdge_87(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 87</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 87</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isAppropriate_FWD_EMoflonEdge_87(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__IsAppropriate_FWD_EMoflonEdge_87__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isApplicable_solveCsp_CC(sourcecode.Assignment, controlflow.Branch, sourcecode.Program, sourcecode.While, controlflow.Graph, controlflow.Command, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isApplicable_solveCsp_CC(sourcecode.Assignment, controlflow.Branch, sourcecode.Program, sourcecode.While, controlflow.Graph, controlflow.Command, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__IsApplicable_solveCsp_CC__Assignment_Branch_Program_While_Graph_Command_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#checkDEC_FWD(sourcecode.Assignment, sourcecode.Program, sourcecode.While) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#checkDEC_FWD(sourcecode.Assignment, sourcecode.Program, sourcecode.While)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__CheckDEC_FWD__Assignment_Program_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#checkDEC_BWD(controlflow.Branch, controlflow.Graph, controlflow.Command) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#checkDEC_BWD(controlflow.Branch, controlflow.Graph, controlflow.Command)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__CheckDEC_BWD__Branch_Graph_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.P2G) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.P2G)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__GenerateModel__RuleEntryContainer_P2G();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Program, org.wbsilva.bx.sourcecode2controlflow.P2G, controlflow.Graph, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Program, org.wbsilva.bx.sourcecode2controlflow.P2G, controlflow.Graph, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__GenerateModel_solveCsp_BWD__IsApplicableMatch_Program_P2G_Graph_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstwhile2rootbranch#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getfirstwhile2rootbranch__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb <em>decdl2branchbb</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>decdl2branchbb</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb
	 * @generated
	 */
	EClass getdecdl2branchbb();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Decision, sourcecode.Assignment, sourcecode.Decision) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Decision, sourcecode.Assignment, sourcecode.Decision)
	 * @generated
	 */
	EOperation getdecdl2branchbb__IsAppropriate_FWD__Match_While_Decision_Assignment_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecdl2branchbb__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecdl2branchbb__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Decision, sourcecode.Assignment, sourcecode.Decision) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Decision, sourcecode.Assignment, sourcecode.Decision)
	 * @generated
	 */
	EOperation getdecdl2branchbb__RegisterObjectsToMatch_FWD__Match_While_Decision_Assignment_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Decision, sourcecode.Assignment, sourcecode.Decision) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Decision, sourcecode.Assignment, sourcecode.Decision)
	 * @generated
	 */
	EOperation getdecdl2branchbb__IsAppropriate_solveCsp_FWD__Match_While_Decision_Assignment_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecdl2branchbb__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.While, sourcecode.Decision, sourcecode.Assignment, controlflow.Branch, sourcecode.Decision, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.While, sourcecode.Decision, sourcecode.Assignment, controlflow.Branch, sourcecode.Decision, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getdecdl2branchbb__IsApplicable_solveCsp_FWD__IsApplicableMatch_While_Decision_Assignment_Branch_Decision_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecdl2branchbb__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecdl2branchbb__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecdl2branchbb__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecdl2branchbb__IsAppropriate_BWD__Match_Branch_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecdl2branchbb__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecdl2branchbb__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecdl2branchbb__RegisterObjectsToMatch_BWD__Match_Branch_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecdl2branchbb__IsAppropriate_solveCsp_BWD__Match_Branch_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecdl2branchbb__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.Decision, controlflow.Branch, controlflow.Command, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.Decision, controlflow.Branch, controlflow.Command, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getdecdl2branchbb__IsApplicable_solveCsp_BWD__IsApplicableMatch_Branch_Decision_Branch_Command_Branch_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecdl2branchbb__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecdl2branchbb__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecdl2branchbb__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isAppropriate_BWD_EMoflonEdge_82(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 82</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 82</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isAppropriate_BWD_EMoflonEdge_82(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecdl2branchbb__IsAppropriate_BWD_EMoflonEdge_82__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isAppropriate_FWD_EMoflonEdge_88(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 88</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 88</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isAppropriate_FWD_EMoflonEdge_88(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecdl2branchbb__IsAppropriate_FWD_EMoflonEdge_88__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecdl2branchbb__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecdl2branchbb__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecdl2branchbb__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isApplicable_solveCsp_CC(sourcecode.While, sourcecode.Decision, sourcecode.Assignment, controlflow.Branch, sourcecode.Decision, controlflow.Branch, controlflow.Command, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isApplicable_solveCsp_CC(sourcecode.While, sourcecode.Decision, sourcecode.Assignment, controlflow.Branch, sourcecode.Decision, controlflow.Branch, controlflow.Command, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecdl2branchbb__IsApplicable_solveCsp_CC__While_Decision_Assignment_Branch_Decision_Branch_Command_Branch_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecdl2branchbb__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#checkDEC_FWD(sourcecode.While, sourcecode.Decision, sourcecode.Assignment, sourcecode.Decision) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#checkDEC_FWD(sourcecode.While, sourcecode.Decision, sourcecode.Assignment, sourcecode.Decision)
	 * @generated
	 */
	EOperation getdecdl2branchbb__CheckDEC_FWD__While_Decision_Assignment_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#checkDEC_BWD(controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#checkDEC_BWD(controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecdl2branchbb__CheckDEC_BWD__Branch_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getdecdl2branchbb__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.Decision, org.wbsilva.bx.sourcecode2controlflow.S2B, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.Decision, org.wbsilva.bx.sourcecode2controlflow.S2B, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getdecdl2branchbb__GenerateModel_solveCsp_BWD__IsApplicableMatch_Branch_Decision_S2B_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdl2branchbb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecdl2branchbb__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb <em>whilel2branchb</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>whilel2branchb</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb
	 * @generated
	 */
	EClass getwhilel2branchb();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.Assignment) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhilel2branchb__IsAppropriate_FWD__Match_While_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhilel2branchb__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilel2branchb__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.Assignment) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhilel2branchb__RegisterObjectsToMatch_FWD__Match_While_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.Assignment) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhilel2branchb__IsAppropriate_solveCsp_FWD__Match_While_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilel2branchb__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.While, sourcecode.While, sourcecode.Assignment, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.While, sourcecode.While, sourcecode.Assignment, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhilel2branchb__IsApplicable_solveCsp_FWD__IsApplicableMatch_Branch_While_While_Assignment_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilel2branchb__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhilel2branchb__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilel2branchb__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhilel2branchb__IsAppropriate_BWD__Match_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhilel2branchb__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilel2branchb__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhilel2branchb__RegisterObjectsToMatch_BWD__Match_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhilel2branchb__IsAppropriate_solveCsp_BWD__Match_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilel2branchb__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, controlflow.Command, controlflow.Branch, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, controlflow.Command, controlflow.Branch, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhilel2branchb__IsApplicable_solveCsp_BWD__IsApplicableMatch_Branch_Command_Branch_While_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilel2branchb__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhilel2branchb__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilel2branchb__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isAppropriate_BWD_EMoflonEdge_83(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 83</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 83</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isAppropriate_BWD_EMoflonEdge_83(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhilel2branchb__IsAppropriate_BWD_EMoflonEdge_83__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isAppropriate_FWD_EMoflonEdge_89(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 89</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 89</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isAppropriate_FWD_EMoflonEdge_89(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhilel2branchb__IsAppropriate_FWD_EMoflonEdge_89__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhilel2branchb__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhilel2branchb__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilel2branchb__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isApplicable_solveCsp_CC(controlflow.Branch, controlflow.Command, sourcecode.While, controlflow.Branch, sourcecode.While, sourcecode.Assignment, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isApplicable_solveCsp_CC(controlflow.Branch, controlflow.Command, sourcecode.While, controlflow.Branch, sourcecode.While, sourcecode.Assignment, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilel2branchb__IsApplicable_solveCsp_CC__Branch_Command_While_Branch_While_Assignment_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilel2branchb__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#checkDEC_FWD(sourcecode.While, sourcecode.While, sourcecode.Assignment) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#checkDEC_FWD(sourcecode.While, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhilel2branchb__CheckDEC_FWD__While_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#checkDEC_BWD(controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#checkDEC_BWD(controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhilel2branchb__CheckDEC_BWD__Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhilel2branchb__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getwhilel2branchb__GenerateModel_solveCsp_BWD__IsApplicableMatch_Branch_While_S2B_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilel2branchb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilel2branchb__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb <em>deculd2branchubb</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>deculd2branchubb</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb
	 * @generated
	 */
	EClass getdeculd2branchubb();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Decision) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Decision)
	 * @generated
	 */
	EOperation getdeculd2branchubb__IsAppropriate_FWD__Match_Assignment_Decision_While_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdeculd2branchubb__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdeculd2branchubb__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Decision) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Decision)
	 * @generated
	 */
	EOperation getdeculd2branchubb__RegisterObjectsToMatch_FWD__Match_Assignment_Decision_While_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Decision) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Decision)
	 * @generated
	 */
	EOperation getdeculd2branchubb__IsAppropriate_solveCsp_FWD__Match_Assignment_Decision_While_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdeculd2branchubb__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Assignment, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Branch, sourcecode.While, sourcecode.Decision) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Assignment, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Branch, sourcecode.While, sourcecode.Decision)
	 * @generated
	 */
	EOperation getdeculd2branchubb__IsApplicable_solveCsp_FWD__IsApplicableMatch_Assignment_S2B_Decision_Branch_While_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdeculd2branchubb__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdeculd2branchubb__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdeculd2branchubb__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getdeculd2branchubb__IsAppropriate_BWD__Match_Command_Branch_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdeculd2branchubb__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdeculd2branchubb__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getdeculd2branchubb__RegisterObjectsToMatch_BWD__Match_Command_Branch_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getdeculd2branchubb__IsAppropriate_solveCsp_BWD__Match_Command_Branch_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdeculd2branchubb__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Branch, sourcecode.Decision) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Branch, sourcecode.Decision)
	 * @generated
	 */
	EOperation getdeculd2branchubb__IsApplicable_solveCsp_BWD__IsApplicableMatch_S2B_Command_Branch_Branch_Branch_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdeculd2branchubb__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdeculd2branchubb__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdeculd2branchubb__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isAppropriate_BWD_EMoflonEdge_84(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 84</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 84</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isAppropriate_BWD_EMoflonEdge_84(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdeculd2branchubb__IsAppropriate_BWD_EMoflonEdge_84__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isAppropriate_FWD_EMoflonEdge_90(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 90</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 90</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isAppropriate_FWD_EMoflonEdge_90(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdeculd2branchubb__IsAppropriate_FWD_EMoflonEdge_90__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdeculd2branchubb__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdeculd2branchubb__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdeculd2branchubb__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isApplicable_solveCsp_CC(sourcecode.Assignment, sourcecode.Decision, controlflow.Command, controlflow.Branch, sourcecode.While, controlflow.Branch, controlflow.Branch, sourcecode.Decision, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isApplicable_solveCsp_CC(sourcecode.Assignment, sourcecode.Decision, controlflow.Command, controlflow.Branch, sourcecode.While, controlflow.Branch, controlflow.Branch, sourcecode.Decision, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdeculd2branchubb__IsApplicable_solveCsp_CC__Assignment_Decision_Command_Branch_While_Branch_Branch_Decision_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdeculd2branchubb__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#checkDEC_FWD(sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Decision) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#checkDEC_FWD(sourcecode.Assignment, sourcecode.Decision, sourcecode.While, sourcecode.Decision)
	 * @generated
	 */
	EOperation getdeculd2branchubb__CheckDEC_FWD__Assignment_Decision_While_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#checkDEC_BWD(controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#checkDEC_BWD(controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getdeculd2branchubb__CheckDEC_BWD__Command_Branch_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getdeculd2branchubb__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, sourcecode.Decision, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, sourcecode.Decision, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getdeculd2branchubb__GenerateModel_solveCsp_BWD__IsApplicableMatch_S2B_Branch_Decision_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.deculd2branchubb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdeculd2branchubb__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph <em>program2graph</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>program2graph</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph
	 * @generated
	 */
	EClass getprogram2graph();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Program) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Program)
	 * @generated
	 */
	EOperation getprogram2graph__IsAppropriate_FWD__Match_Program();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getprogram2graph__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getprogram2graph__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Program) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Program)
	 * @generated
	 */
	EOperation getprogram2graph__RegisterObjectsToMatch_FWD__Match_Program();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Program) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Program)
	 * @generated
	 */
	EOperation getprogram2graph__IsAppropriate_solveCsp_FWD__Match_Program();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getprogram2graph__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Program) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Program)
	 * @generated
	 */
	EOperation getprogram2graph__IsApplicable_solveCsp_FWD__IsApplicableMatch_Program();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getprogram2graph__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getprogram2graph__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getprogram2graph__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Graph) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Graph)
	 * @generated
	 */
	EOperation getprogram2graph__IsAppropriate_BWD__Match_Graph();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getprogram2graph__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getprogram2graph__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Graph) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Graph)
	 * @generated
	 */
	EOperation getprogram2graph__RegisterObjectsToMatch_BWD__Match_Graph();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Graph) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Graph)
	 * @generated
	 */
	EOperation getprogram2graph__IsAppropriate_solveCsp_BWD__Match_Graph();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getprogram2graph__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Graph) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Graph)
	 * @generated
	 */
	EOperation getprogram2graph__IsApplicable_solveCsp_BWD__IsApplicableMatch_Graph();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getprogram2graph__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getprogram2graph__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getprogram2graph__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isAppropriate_BWD_Graph_1(controlflow.Graph) <em>Is Appropriate BWD Graph 1</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD Graph 1</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isAppropriate_BWD_Graph_1(controlflow.Graph)
	 * @generated
	 */
	EOperation getprogram2graph__IsAppropriate_BWD_Graph_1__Graph();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isAppropriate_FWD_Program_1(sourcecode.Program) <em>Is Appropriate FWD Program 1</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD Program 1</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isAppropriate_FWD_Program_1(sourcecode.Program)
	 * @generated
	 */
	EOperation getprogram2graph__IsAppropriate_FWD_Program_1__Program();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getprogram2graph__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getprogram2graph__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getprogram2graph__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isApplicable_solveCsp_CC(controlflow.Graph, sourcecode.Program, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isApplicable_solveCsp_CC(controlflow.Graph, sourcecode.Program, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getprogram2graph__IsApplicable_solveCsp_CC__Graph_Program_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getprogram2graph__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#checkDEC_FWD(sourcecode.Program) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#checkDEC_FWD(sourcecode.Program)
	 * @generated
	 */
	EOperation getprogram2graph__CheckDEC_FWD__Program();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#checkDEC_BWD(controlflow.Graph) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#checkDEC_BWD(controlflow.Graph)
	 * @generated
	 */
	EOperation getprogram2graph__CheckDEC_BWD__Graph();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer)
	 * @generated
	 */
	EOperation getprogram2graph__GenerateModel__RuleEntryContainer();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getprogram2graph__GenerateModel_solveCsp_BWD__IsApplicableMatch_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.program2graph#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getprogram2graph__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc <em>whilea2branchc</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>whilea2branchc</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc
	 * @generated
	 */
	EClass getwhilea2branchc();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhilea2branchc__IsAppropriate_FWD__Match_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhilea2branchc__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilea2branchc__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhilea2branchc__RegisterObjectsToMatch_FWD__Match_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhilea2branchc__IsAppropriate_solveCsp_FWD__Match_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilea2branchc__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, controlflow.Branch, sourcecode.Assignment) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, controlflow.Branch, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhilea2branchc__IsApplicable_solveCsp_FWD__IsApplicableMatch_S2B_While_Branch_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilea2branchc__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhilea2branchc__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilea2branchc__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhilea2branchc__IsAppropriate_BWD__Match_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhilea2branchc__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilea2branchc__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhilea2branchc__RegisterObjectsToMatch_BWD__Match_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhilea2branchc__IsAppropriate_solveCsp_BWD__Match_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilea2branchc__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Command, sourcecode.While, controlflow.Branch) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Command, sourcecode.While, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhilea2branchc__IsApplicable_solveCsp_BWD__IsApplicableMatch_S2B_Command_While_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilea2branchc__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhilea2branchc__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilea2branchc__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isAppropriate_BWD_EMoflonEdge_85(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 85</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 85</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isAppropriate_BWD_EMoflonEdge_85(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhilea2branchc__IsAppropriate_BWD_EMoflonEdge_85__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isAppropriate_FWD_EMoflonEdge_91(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 91</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 91</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isAppropriate_FWD_EMoflonEdge_91(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhilea2branchc__IsAppropriate_FWD_EMoflonEdge_91__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhilea2branchc__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhilea2branchc__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilea2branchc__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isApplicable_solveCsp_CC(controlflow.Command, sourcecode.While, controlflow.Branch, sourcecode.Assignment, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isApplicable_solveCsp_CC(controlflow.Command, sourcecode.While, controlflow.Branch, sourcecode.Assignment, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilea2branchc__IsApplicable_solveCsp_CC__Command_While_Branch_Assignment_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilea2branchc__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#checkDEC_FWD(sourcecode.While, sourcecode.Assignment) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#checkDEC_FWD(sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhilea2branchc__CheckDEC_FWD__While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#checkDEC_BWD(controlflow.Command, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#checkDEC_BWD(controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhilea2branchc__CheckDEC_BWD__Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhilea2branchc__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getwhilea2branchc__GenerateModel_solveCsp_BWD__IsApplicableMatch_S2B_While_Branch_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilea2branchc#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilea2branchc__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd <em>decassass2branchcmdcmd</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>decassass2branchcmdcmd</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd
	 * @generated
	 */
	EClass getdecassass2branchcmdcmd();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Assignment, sourcecode.Assignment) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Assignment, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__IsAppropriate_FWD__Match_Decision_Assignment_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Assignment, sourcecode.Assignment) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Assignment, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__RegisterObjectsToMatch_FWD__Match_Decision_Assignment_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Assignment, sourcecode.Assignment) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Assignment, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__IsAppropriate_solveCsp_FWD__Match_Decision_Assignment_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Decision, sourcecode.Assignment, sourcecode.Assignment, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Decision, sourcecode.Assignment, sourcecode.Assignment, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__IsApplicable_solveCsp_FWD__IsApplicableMatch_Decision_Assignment_Assignment_Branch_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Command, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__IsAppropriate_BWD__Match_Command_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Command, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__RegisterObjectsToMatch_BWD__Match_Command_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Command, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__IsAppropriate_solveCsp_BWD__Match_Command_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Decision, controlflow.Command, controlflow.Command, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Decision, controlflow.Command, controlflow.Command, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__IsApplicable_solveCsp_BWD__IsApplicableMatch_Decision_Command_Command_Branch_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isAppropriate_BWD_EMoflonEdge_86(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 86</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 86</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isAppropriate_BWD_EMoflonEdge_86(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__IsAppropriate_BWD_EMoflonEdge_86__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isAppropriate_FWD_EMoflonEdge_92(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 92</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 92</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isAppropriate_FWD_EMoflonEdge_92(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__IsAppropriate_FWD_EMoflonEdge_92__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isApplicable_solveCsp_CC(sourcecode.Decision, sourcecode.Assignment, controlflow.Command, sourcecode.Assignment, controlflow.Command, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isApplicable_solveCsp_CC(sourcecode.Decision, sourcecode.Assignment, controlflow.Command, sourcecode.Assignment, controlflow.Command, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__IsApplicable_solveCsp_CC__Decision_Assignment_Command_Assignment_Command_Branch_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#checkDEC_FWD(sourcecode.Decision, sourcecode.Assignment, sourcecode.Assignment) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#checkDEC_FWD(sourcecode.Decision, sourcecode.Assignment, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__CheckDEC_FWD__Decision_Assignment_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#checkDEC_BWD(controlflow.Command, controlflow.Command, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#checkDEC_BWD(controlflow.Command, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__CheckDEC_BWD__Command_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Decision, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Decision, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__GenerateModel_solveCsp_BWD__IsApplicableMatch_Decision_Branch_S2B_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decassass2branchcmdcmd#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecassass2branchcmdcmd__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch <em>while2branch</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>while2branch</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch
	 * @generated
	 */
	EClass getwhile2branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Statement, sourcecode.Assignment, sourcecode.While) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Statement, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhile2branch__IsAppropriate_FWD__Match_Statement_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhile2branch__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhile2branch__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Statement, sourcecode.Assignment, sourcecode.While) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Statement, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhile2branch__RegisterObjectsToMatch_FWD__Match_Statement_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Statement, sourcecode.Assignment, sourcecode.While) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Statement, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhile2branch__IsAppropriate_solveCsp_FWD__Match_Statement_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhile2branch__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2N, sourcecode.Statement, sourcecode.Assignment, sourcecode.While, controlflow.Node) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2N, sourcecode.Statement, sourcecode.Assignment, sourcecode.While, controlflow.Node)
	 * @generated
	 */
	EOperation getwhile2branch__IsApplicable_solveCsp_FWD__IsApplicableMatch_S2N_Statement_Assignment_While_Node();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhile2branch__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhile2branch__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhile2branch__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Node, controlflow.Command) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Node, controlflow.Command)
	 * @generated
	 */
	EOperation getwhile2branch__IsAppropriate_BWD__Match_Branch_Node_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhile2branch__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhile2branch__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Node, controlflow.Command) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Node, controlflow.Command)
	 * @generated
	 */
	EOperation getwhile2branch__RegisterObjectsToMatch_BWD__Match_Branch_Node_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Node, controlflow.Command) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Node, controlflow.Command)
	 * @generated
	 */
	EOperation getwhile2branch__IsAppropriate_solveCsp_BWD__Match_Branch_Node_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhile2branch__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2N, controlflow.Branch, sourcecode.Statement, controlflow.Node, controlflow.Command) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2N, controlflow.Branch, sourcecode.Statement, controlflow.Node, controlflow.Command)
	 * @generated
	 */
	EOperation getwhile2branch__IsApplicable_solveCsp_BWD__IsApplicableMatch_S2N_Branch_Statement_Node_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhile2branch__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhile2branch__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhile2branch__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isAppropriate_BWD_EMoflonEdge_87(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 87</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 87</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isAppropriate_BWD_EMoflonEdge_87(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhile2branch__IsAppropriate_BWD_EMoflonEdge_87__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isAppropriate_FWD_EMoflonEdge_93(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 93</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 93</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isAppropriate_FWD_EMoflonEdge_93(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhile2branch__IsAppropriate_FWD_EMoflonEdge_93__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhile2branch__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhile2branch__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhile2branch__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isApplicable_solveCsp_CC(controlflow.Branch, sourcecode.Statement, sourcecode.Assignment, sourcecode.While, controlflow.Node, controlflow.Command, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isApplicable_solveCsp_CC(controlflow.Branch, sourcecode.Statement, sourcecode.Assignment, sourcecode.While, controlflow.Node, controlflow.Command, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhile2branch__IsApplicable_solveCsp_CC__Branch_Statement_Assignment_While_Node_Command_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhile2branch__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#checkDEC_FWD(sourcecode.Statement, sourcecode.Assignment, sourcecode.While) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#checkDEC_FWD(sourcecode.Statement, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhile2branch__CheckDEC_FWD__Statement_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#checkDEC_BWD(controlflow.Branch, controlflow.Node, controlflow.Command) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#checkDEC_BWD(controlflow.Branch, controlflow.Node, controlflow.Command)
	 * @generated
	 */
	EOperation getwhile2branch__CheckDEC_BWD__Branch_Node_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2N) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2N)
	 * @generated
	 */
	EOperation getwhile2branch__GenerateModel__RuleEntryContainer_S2N();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2N, sourcecode.Statement, controlflow.Node, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2N, sourcecode.Statement, controlflow.Node, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getwhile2branch__GenerateModel_solveCsp_BWD__IsApplicableMatch_S2N_Statement_Node_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.while2branch#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhile2branch__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb <em>whileal2branchcb</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>whileal2branchcb</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb
	 * @generated
	 */
	EClass getwhileal2branchcb();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment, sourcecode.While) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileal2branchcb__IsAppropriate_FWD__Match_Assignment_While_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhileal2branchcb__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileal2branchcb__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment, sourcecode.While) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileal2branchcb__RegisterObjectsToMatch_FWD__Match_Assignment_While_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment, sourcecode.While) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileal2branchcb__IsAppropriate_solveCsp_FWD__Match_Assignment_While_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileal2branchcb__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Assignment, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, sourcecode.Assignment, sourcecode.While) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Assignment, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileal2branchcb__IsApplicable_solveCsp_FWD__IsApplicableMatch_Assignment_While_S2B_Branch_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileal2branchcb__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhileal2branchcb__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileal2branchcb__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileal2branchcb__IsAppropriate_BWD__Match_Command_Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhileal2branchcb__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileal2branchcb__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileal2branchcb__RegisterObjectsToMatch_BWD__Match_Command_Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileal2branchcb__IsAppropriate_solveCsp_BWD__Match_Command_Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileal2branchcb__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Command, controlflow.Command, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, sourcecode.While, controlflow.Branch) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Command, controlflow.Command, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, sourcecode.While, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileal2branchcb__IsApplicable_solveCsp_BWD__IsApplicableMatch_Command_Command_S2B_Branch_While_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileal2branchcb__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhileal2branchcb__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileal2branchcb__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isAppropriate_BWD_EMoflonEdge_88(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 88</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 88</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isAppropriate_BWD_EMoflonEdge_88(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhileal2branchcb__IsAppropriate_BWD_EMoflonEdge_88__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isAppropriate_FWD_EMoflonEdge_94(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 94</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 94</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isAppropriate_FWD_EMoflonEdge_94(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhileal2branchcb__IsAppropriate_FWD_EMoflonEdge_94__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhileal2branchcb__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhileal2branchcb__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileal2branchcb__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isApplicable_solveCsp_CC(controlflow.Command, sourcecode.Assignment, sourcecode.While, controlflow.Command, controlflow.Branch, sourcecode.Assignment, sourcecode.While, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isApplicable_solveCsp_CC(controlflow.Command, sourcecode.Assignment, sourcecode.While, controlflow.Command, controlflow.Branch, sourcecode.Assignment, sourcecode.While, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileal2branchcb__IsApplicable_solveCsp_CC__Command_Assignment_While_Command_Branch_Assignment_While_Branch_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileal2branchcb__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#checkDEC_FWD(sourcecode.Assignment, sourcecode.While, sourcecode.Assignment, sourcecode.While) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#checkDEC_FWD(sourcecode.Assignment, sourcecode.While, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileal2branchcb__CheckDEC_FWD__Assignment_While_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#checkDEC_BWD(controlflow.Command, controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#checkDEC_BWD(controlflow.Command, controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileal2branchcb__CheckDEC_BWD__Command_Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhileal2branchcb__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, sourcecode.While, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, sourcecode.While, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getwhileal2branchcb__GenerateModel_solveCsp_BWD__IsApplicableMatch_S2B_Branch_While_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileal2branchcb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileal2branchcb__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb <em>whileld2branchbb</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>whileld2branchbb</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb
	 * @generated
	 */
	EClass getwhileld2branchbb();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Assignment, sourcecode.While, sourcecode.While) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Assignment, sourcecode.While, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileld2branchbb__IsAppropriate_FWD__Match_Decision_Assignment_While_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhileld2branchbb__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileld2branchbb__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Assignment, sourcecode.While, sourcecode.While) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Assignment, sourcecode.While, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileld2branchbb__RegisterObjectsToMatch_FWD__Match_Decision_Assignment_While_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Assignment, sourcecode.While, sourcecode.While) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Assignment, sourcecode.While, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileld2branchbb__IsAppropriate_solveCsp_FWD__Match_Decision_Assignment_While_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileld2branchbb__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.Decision, sourcecode.Assignment, sourcecode.While, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.Decision, sourcecode.Assignment, sourcecode.While, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhileld2branchbb__IsApplicable_solveCsp_FWD__IsApplicableMatch_Branch_Decision_Assignment_While_While_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileld2branchbb__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhileld2branchbb__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileld2branchbb__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileld2branchbb__IsAppropriate_BWD__Match_Branch_Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhileld2branchbb__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileld2branchbb__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileld2branchbb__RegisterObjectsToMatch_BWD__Match_Branch_Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileld2branchbb__IsAppropriate_solveCsp_BWD__Match_Branch_Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileld2branchbb__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.While, controlflow.Command, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, controlflow.Branch) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.While, controlflow.Command, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileld2branchbb__IsApplicable_solveCsp_BWD__IsApplicableMatch_Branch_While_Command_S2B_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileld2branchbb__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhileld2branchbb__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileld2branchbb__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isAppropriate_BWD_EMoflonEdge_89(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 89</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 89</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isAppropriate_BWD_EMoflonEdge_89(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhileld2branchbb__IsAppropriate_BWD_EMoflonEdge_89__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isAppropriate_FWD_EMoflonEdge_95(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 95</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 95</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isAppropriate_FWD_EMoflonEdge_95(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhileld2branchbb__IsAppropriate_FWD_EMoflonEdge_95__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhileld2branchbb__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhileld2branchbb__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileld2branchbb__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isApplicable_solveCsp_CC(controlflow.Branch, sourcecode.Decision, sourcecode.Assignment, sourcecode.While, sourcecode.While, controlflow.Command, controlflow.Branch, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isApplicable_solveCsp_CC(controlflow.Branch, sourcecode.Decision, sourcecode.Assignment, sourcecode.While, sourcecode.While, controlflow.Command, controlflow.Branch, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileld2branchbb__IsApplicable_solveCsp_CC__Branch_Decision_Assignment_While_While_Command_Branch_Branch_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileld2branchbb__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#checkDEC_FWD(sourcecode.Decision, sourcecode.Assignment, sourcecode.While, sourcecode.While) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#checkDEC_FWD(sourcecode.Decision, sourcecode.Assignment, sourcecode.While, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileld2branchbb__CheckDEC_FWD__Decision_Assignment_While_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#checkDEC_BWD(controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#checkDEC_BWD(controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileld2branchbb__CheckDEC_BWD__Branch_Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhileld2branchbb__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getwhileld2branchbb__GenerateModel_solveCsp_BWD__IsApplicableMatch_Branch_While_S2B_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileld2branchbb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileld2branchbb__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc <em>decla2branchbc</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>decla2branchbc</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc
	 * @generated
	 */
	EClass getdecla2branchbc();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Decision, sourcecode.Assignment, sourcecode.While) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Decision, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getdecla2branchbc__IsAppropriate_FWD__Match_Assignment_Decision_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecla2branchbc__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecla2branchbc__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Decision, sourcecode.Assignment, sourcecode.While) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Decision, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getdecla2branchbc__RegisterObjectsToMatch_FWD__Match_Assignment_Decision_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Decision, sourcecode.Assignment, sourcecode.While) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Decision, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getdecla2branchbc__IsAppropriate_solveCsp_FWD__Match_Assignment_Decision_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecla2branchbc__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Assignment, sourcecode.Decision, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Assignment, sourcecode.While, controlflow.Branch) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Assignment, sourcecode.Decision, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Assignment, sourcecode.While, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecla2branchbc__IsApplicable_solveCsp_FWD__IsApplicableMatch_Assignment_Decision_S2B_Assignment_While_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecla2branchbc__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecla2branchbc__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecla2branchbc__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecla2branchbc__IsAppropriate_BWD__Match_Branch_Command_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecla2branchbc__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecla2branchbc__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecla2branchbc__RegisterObjectsToMatch_BWD__Match_Branch_Command_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecla2branchbc__IsAppropriate_solveCsp_BWD__Match_Branch_Command_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecla2branchbc__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, controlflow.Command, controlflow.Command, sourcecode.Decision, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, controlflow.Command, controlflow.Command, sourcecode.Decision, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecla2branchbc__IsApplicable_solveCsp_BWD__IsApplicableMatch_Branch_Command_Command_Decision_S2B_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecla2branchbc__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecla2branchbc__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecla2branchbc__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isAppropriate_BWD_EMoflonEdge_90(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 90</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 90</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isAppropriate_BWD_EMoflonEdge_90(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecla2branchbc__IsAppropriate_BWD_EMoflonEdge_90__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isAppropriate_FWD_EMoflonEdge_96(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 96</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 96</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isAppropriate_FWD_EMoflonEdge_96(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecla2branchbc__IsAppropriate_FWD_EMoflonEdge_96__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecla2branchbc__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecla2branchbc__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecla2branchbc__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isApplicable_solveCsp_CC(controlflow.Branch, sourcecode.Assignment, controlflow.Command, controlflow.Command, sourcecode.Decision, sourcecode.Assignment, sourcecode.While, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isApplicable_solveCsp_CC(controlflow.Branch, sourcecode.Assignment, controlflow.Command, controlflow.Command, sourcecode.Decision, sourcecode.Assignment, sourcecode.While, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecla2branchbc__IsApplicable_solveCsp_CC__Branch_Assignment_Command_Command_Decision_Assignment_While_Branch_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecla2branchbc__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#checkDEC_FWD(sourcecode.Assignment, sourcecode.Decision, sourcecode.Assignment, sourcecode.While) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#checkDEC_FWD(sourcecode.Assignment, sourcecode.Decision, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getdecla2branchbc__CheckDEC_FWD__Assignment_Decision_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#checkDEC_BWD(controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#checkDEC_BWD(controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecla2branchbc__CheckDEC_BWD__Branch_Command_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getdecla2branchbc__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Decision, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Decision, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getdecla2branchbc__GenerateModel_solveCsp_BWD__IsApplicableMatch_Decision_S2B_Branch_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decla2branchbc#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecla2branchbc__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch <em>decision2branch</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>decision2branch</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch
	 * @generated
	 */
	EClass getdecision2branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Statement) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Statement)
	 * @generated
	 */
	EOperation getdecision2branch__IsAppropriate_FWD__Match_Decision_Statement();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecision2branch__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecision2branch__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Statement) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Statement)
	 * @generated
	 */
	EOperation getdecision2branch__RegisterObjectsToMatch_FWD__Match_Decision_Statement();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Statement) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Statement)
	 * @generated
	 */
	EOperation getdecision2branch__IsAppropriate_solveCsp_FWD__Match_Decision_Statement();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecision2branch__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Decision, controlflow.Node, org.wbsilva.bx.sourcecode2controlflow.S2N, sourcecode.Statement) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Decision, controlflow.Node, org.wbsilva.bx.sourcecode2controlflow.S2N, sourcecode.Statement)
	 * @generated
	 */
	EOperation getdecision2branch__IsApplicable_solveCsp_FWD__IsApplicableMatch_Decision_Node_S2N_Statement();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecision2branch__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecision2branch__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecision2branch__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Node, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Node, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecision2branch__IsAppropriate_BWD__Match_Node_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecision2branch__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecision2branch__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Node, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Node, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecision2branch__RegisterObjectsToMatch_BWD__Match_Node_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Node, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Node, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecision2branch__IsAppropriate_solveCsp_BWD__Match_Node_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecision2branch__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Node, org.wbsilva.bx.sourcecode2controlflow.S2N, controlflow.Branch, sourcecode.Statement) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Node, org.wbsilva.bx.sourcecode2controlflow.S2N, controlflow.Branch, sourcecode.Statement)
	 * @generated
	 */
	EOperation getdecision2branch__IsApplicable_solveCsp_BWD__IsApplicableMatch_Node_S2N_Branch_Statement();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecision2branch__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecision2branch__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecision2branch__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isAppropriate_BWD_EMoflonEdge_91(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 91</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 91</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isAppropriate_BWD_EMoflonEdge_91(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecision2branch__IsAppropriate_BWD_EMoflonEdge_91__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isAppropriate_FWD_EMoflonEdge_97(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 97</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 97</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isAppropriate_FWD_EMoflonEdge_97(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecision2branch__IsAppropriate_FWD_EMoflonEdge_97__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecision2branch__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecision2branch__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecision2branch__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isApplicable_solveCsp_CC(sourcecode.Decision, controlflow.Node, controlflow.Branch, sourcecode.Statement, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isApplicable_solveCsp_CC(sourcecode.Decision, controlflow.Node, controlflow.Branch, sourcecode.Statement, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecision2branch__IsApplicable_solveCsp_CC__Decision_Node_Branch_Statement_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecision2branch__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#checkDEC_FWD(sourcecode.Decision, sourcecode.Statement) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#checkDEC_FWD(sourcecode.Decision, sourcecode.Statement)
	 * @generated
	 */
	EOperation getdecision2branch__CheckDEC_FWD__Decision_Statement();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#checkDEC_BWD(controlflow.Node, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#checkDEC_BWD(controlflow.Node, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecision2branch__CheckDEC_BWD__Node_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2N) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2N)
	 * @generated
	 */
	EOperation getdecision2branch__GenerateModel__RuleEntryContainer_S2N();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Node, org.wbsilva.bx.sourcecode2controlflow.S2N, sourcecode.Statement, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Node, org.wbsilva.bx.sourcecode2controlflow.S2N, sourcecode.Statement, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getdecision2branch__GenerateModel_solveCsp_BWD__IsApplicableMatch_Node_S2N_Statement_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decision2branch#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecision2branch__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb <em>whilell2branchbb</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>whilell2branchbb</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb
	 * @generated
	 */
	EClass getwhilell2branchbb();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Assignment, sourcecode.While) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhilell2branchbb__IsAppropriate_FWD__Match_While_While_Assignment_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhilell2branchbb__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilell2branchbb__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Assignment, sourcecode.While) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhilell2branchbb__RegisterObjectsToMatch_FWD__Match_While_While_Assignment_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Assignment, sourcecode.While) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhilell2branchbb__IsAppropriate_solveCsp_FWD__Match_While_While_Assignment_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilell2branchbb__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Assignment, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Assignment, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhilell2branchbb__IsApplicable_solveCsp_FWD__IsApplicableMatch_Branch_While_While_Assignment_Assignment_While_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilell2branchbb__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhilell2branchbb__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilell2branchbb__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command)
	 * @generated
	 */
	EOperation getwhilell2branchbb__IsAppropriate_BWD__Match_Branch_Branch_Command_Branch_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhilell2branchbb__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilell2branchbb__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command)
	 * @generated
	 */
	EOperation getwhilell2branchbb__RegisterObjectsToMatch_BWD__Match_Branch_Branch_Command_Branch_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command)
	 * @generated
	 */
	EOperation getwhilell2branchbb__IsAppropriate_solveCsp_BWD__Match_Branch_Branch_Command_Branch_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilell2branchbb__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch, sourcecode.While, controlflow.Command, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch, sourcecode.While, controlflow.Command, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhilell2branchbb__IsApplicable_solveCsp_BWD__IsApplicableMatch_Branch_Branch_Command_Branch_While_Command_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilell2branchbb__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhilell2branchbb__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilell2branchbb__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isAppropriate_BWD_EMoflonEdge_92(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 92</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 92</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isAppropriate_BWD_EMoflonEdge_92(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhilell2branchbb__IsAppropriate_BWD_EMoflonEdge_92__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isAppropriate_FWD_EMoflonEdge_98(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 98</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 98</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isAppropriate_FWD_EMoflonEdge_98(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhilell2branchbb__IsAppropriate_FWD_EMoflonEdge_98__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhilell2branchbb__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhilell2branchbb__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilell2branchbb__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isApplicable_solveCsp_CC(controlflow.Branch, controlflow.Branch, sourcecode.While, sourcecode.While, controlflow.Command, sourcecode.Assignment, controlflow.Branch, sourcecode.Assignment, sourcecode.While, controlflow.Command, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isApplicable_solveCsp_CC(controlflow.Branch, controlflow.Branch, sourcecode.While, sourcecode.While, controlflow.Command, sourcecode.Assignment, controlflow.Branch, sourcecode.Assignment, sourcecode.While, controlflow.Command, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhilell2branchbb__IsApplicable_solveCsp_CC__Branch_Branch_While_While_Command_Assignment_Branch_Assignment_While_Command_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilell2branchbb__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#checkDEC_FWD(sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Assignment, sourcecode.While) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#checkDEC_FWD(sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhilell2branchbb__CheckDEC_FWD__While_While_Assignment_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#checkDEC_BWD(controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#checkDEC_BWD(controlflow.Branch, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command)
	 * @generated
	 */
	EOperation getwhilell2branchbb__CheckDEC_BWD__Branch_Branch_Command_Branch_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhilell2branchbb__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getwhilell2branchbb__GenerateModel_solveCsp_BWD__IsApplicableMatch_Branch_While_S2B_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whilell2branchbb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhilell2branchbb__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub <em>declul2branchbub</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>declul2branchbub</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub
	 * @generated
	 */
	EClass getdeclul2branchbub();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Decision, sourcecode.Assignment) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdeclul2branchbub__IsAppropriate_FWD__Match_Assignment_While_While_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdeclul2branchbub__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdeclul2branchbub__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Decision, sourcecode.Assignment) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdeclul2branchbub__RegisterObjectsToMatch_FWD__Match_Assignment_While_While_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Decision, sourcecode.Assignment) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdeclul2branchbub__IsAppropriate_solveCsp_FWD__Match_Assignment_While_While_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdeclul2branchbub__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.Assignment, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, sourcecode.While, sourcecode.Decision, sourcecode.Assignment) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.Assignment, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, sourcecode.While, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdeclul2branchbub__IsApplicable_solveCsp_FWD__IsApplicableMatch_Branch_Assignment_S2B_While_While_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdeclul2branchbub__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdeclul2branchbub__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdeclul2branchbub__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdeclul2branchbub__IsAppropriate_BWD__Match_Branch_Command_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdeclul2branchbub__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdeclul2branchbub__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdeclul2branchbub__RegisterObjectsToMatch_BWD__Match_Branch_Command_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdeclul2branchbub__IsAppropriate_solveCsp_BWD__Match_Branch_Command_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdeclul2branchbub__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Command, controlflow.Branch, controlflow.Command, sourcecode.Decision, controlflow.Branch) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Command, controlflow.Branch, controlflow.Command, sourcecode.Decision, controlflow.Branch)
	 * @generated
	 */
	EOperation getdeclul2branchbub__IsApplicable_solveCsp_BWD__IsApplicableMatch_Branch_S2B_Command_Branch_Command_Decision_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdeclul2branchbub__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdeclul2branchbub__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdeclul2branchbub__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isAppropriate_BWD_EMoflonEdge_93(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 93</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 93</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isAppropriate_BWD_EMoflonEdge_93(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdeclul2branchbub__IsAppropriate_BWD_EMoflonEdge_93__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isAppropriate_FWD_EMoflonEdge_99(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 99</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 99</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isAppropriate_FWD_EMoflonEdge_99(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdeclul2branchbub__IsAppropriate_FWD_EMoflonEdge_99__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdeclul2branchbub__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdeclul2branchbub__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdeclul2branchbub__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isApplicable_solveCsp_CC(controlflow.Branch, sourcecode.Assignment, sourcecode.While, controlflow.Command, controlflow.Branch, sourcecode.While, controlflow.Command, sourcecode.Decision, sourcecode.Assignment, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isApplicable_solveCsp_CC(controlflow.Branch, sourcecode.Assignment, sourcecode.While, controlflow.Command, controlflow.Branch, sourcecode.While, controlflow.Command, sourcecode.Decision, sourcecode.Assignment, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdeclul2branchbub__IsApplicable_solveCsp_CC__Branch_Assignment_While_Command_Branch_While_Command_Decision_Assignment_Branch_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdeclul2branchbub__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#checkDEC_FWD(sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Decision, sourcecode.Assignment) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#checkDEC_FWD(sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdeclul2branchbub__CheckDEC_FWD__Assignment_While_While_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#checkDEC_BWD(controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#checkDEC_BWD(controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdeclul2branchbub__CheckDEC_BWD__Branch_Command_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getdeclul2branchbub__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getdeclul2branchbub__GenerateModel_solveCsp_BWD__IsApplicableMatch_Branch_S2B_Decision_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.declul2branchbub#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdeclul2branchbub__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub <em>whileaul2branchcub</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>whileaul2branchcub</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub
	 * @generated
	 */
	EClass getwhileaul2branchcub();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__IsAppropriate_FWD__Match_Assignment_While_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__RegisterObjectsToMatch_FWD__Match_Assignment_While_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__IsAppropriate_solveCsp_FWD__Match_Assignment_While_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Assignment, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, sourcecode.While, sourcecode.Assignment, controlflow.Branch) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Assignment, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, sourcecode.While, sourcecode.Assignment, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__IsApplicable_solveCsp_FWD__IsApplicableMatch_Assignment_S2B_While_While_Assignment_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__IsAppropriate_BWD__Match_Command_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__RegisterObjectsToMatch_BWD__Match_Command_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__IsAppropriate_solveCsp_BWD__Match_Command_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Command, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, controlflow.Command, sourcecode.While, controlflow.Branch) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Command, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, controlflow.Command, sourcecode.While, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__IsApplicable_solveCsp_BWD__IsApplicableMatch_Command_S2B_Branch_Command_While_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isAppropriate_BWD_EMoflonEdge_94(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 94</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 94</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isAppropriate_BWD_EMoflonEdge_94(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__IsAppropriate_BWD_EMoflonEdge_94__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isAppropriate_FWD_EMoflonEdge_100(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 100</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 100</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isAppropriate_FWD_EMoflonEdge_100(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__IsAppropriate_FWD_EMoflonEdge_100__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isApplicable_solveCsp_CC(sourcecode.Assignment, controlflow.Command, controlflow.Branch, sourcecode.While, controlflow.Command, sourcecode.While, sourcecode.Assignment, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isApplicable_solveCsp_CC(sourcecode.Assignment, controlflow.Command, controlflow.Branch, sourcecode.While, controlflow.Command, sourcecode.While, sourcecode.Assignment, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__IsApplicable_solveCsp_CC__Assignment_Command_Branch_While_Command_While_Assignment_Branch_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#checkDEC_FWD(sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#checkDEC_FWD(sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__CheckDEC_FWD__Assignment_While_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#checkDEC_BWD(controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#checkDEC_BWD(controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__CheckDEC_BWD__Command_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__GenerateModel_solveCsp_BWD__IsApplicableMatch_S2B_While_Branch_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileaul2branchcub#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileaul2branchcub__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb <em>whiledd2branchbb</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>whiledd2branchbb</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb
	 * @generated
	 */
	EClass getwhiledd2branchbb();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Decision, sourcecode.While) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Decision, sourcecode.While)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__IsAppropriate_FWD__Match_Decision_Decision_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Decision, sourcecode.While) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Decision, sourcecode.While)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__RegisterObjectsToMatch_FWD__Match_Decision_Decision_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Decision, sourcecode.While) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Decision, sourcecode.While)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__IsAppropriate_solveCsp_FWD__Match_Decision_Decision_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, sourcecode.Decision, sourcecode.While) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, sourcecode.Decision, sourcecode.While)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__IsApplicable_solveCsp_FWD__IsApplicableMatch_Branch_S2B_Decision_Decision_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__IsAppropriate_BWD__Match_Branch_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__RegisterObjectsToMatch_BWD__Match_Branch_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__IsAppropriate_solveCsp_BWD__Match_Branch_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, controlflow.Branch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, controlflow.Branch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__IsApplicable_solveCsp_BWD__IsApplicableMatch_Branch_Branch_Branch_S2B_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isAppropriate_BWD_EMoflonEdge_95(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 95</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 95</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isAppropriate_BWD_EMoflonEdge_95(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__IsAppropriate_BWD_EMoflonEdge_95__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isAppropriate_FWD_EMoflonEdge_101(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 101</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 101</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isAppropriate_FWD_EMoflonEdge_101(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__IsAppropriate_FWD_EMoflonEdge_101__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isApplicable_solveCsp_CC(controlflow.Branch, controlflow.Branch, controlflow.Branch, sourcecode.Decision, sourcecode.Decision, sourcecode.While, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isApplicable_solveCsp_CC(controlflow.Branch, controlflow.Branch, controlflow.Branch, sourcecode.Decision, sourcecode.Decision, sourcecode.While, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__IsApplicable_solveCsp_CC__Branch_Branch_Branch_Decision_Decision_While_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#checkDEC_FWD(sourcecode.Decision, sourcecode.Decision, sourcecode.While) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#checkDEC_FWD(sourcecode.Decision, sourcecode.Decision, sourcecode.While)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__CheckDEC_FWD__Decision_Decision_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#checkDEC_BWD(controlflow.Branch, controlflow.Branch, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#checkDEC_BWD(controlflow.Branch, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__CheckDEC_BWD__Branch_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__GenerateModel_solveCsp_BWD__IsApplicableMatch_Branch_S2B_While_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledd2branchbb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhiledd2branchbb__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub <em>whileulul2branchubub</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>whileulul2branchubub</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub
	 * @generated
	 */
	EClass getwhileulul2branchubub();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment, sourcecode.While) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__IsAppropriate_FWD__Match_While_Assignment_While_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment, sourcecode.While) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__RegisterObjectsToMatch_FWD__Match_While_Assignment_While_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment, sourcecode.While) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__IsAppropriate_solveCsp_FWD__Match_While_Assignment_While_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.While, controlflow.Branch, sourcecode.Assignment, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, sourcecode.Assignment, sourcecode.While) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.While, controlflow.Branch, sourcecode.Assignment, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__IsApplicable_solveCsp_FWD__IsApplicableMatch_While_Branch_Assignment_S2B_While_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__IsAppropriate_BWD__Match_Branch_Command_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__RegisterObjectsToMatch_BWD__Match_Branch_Command_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__IsAppropriate_solveCsp_BWD__Match_Branch_Command_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, controlflow.Branch) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__IsApplicable_solveCsp_BWD__IsApplicableMatch_Branch_Command_Branch_Command_S2B_While_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isAppropriate_BWD_EMoflonEdge_96(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 96</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 96</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isAppropriate_BWD_EMoflonEdge_96(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__IsAppropriate_BWD_EMoflonEdge_96__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isAppropriate_FWD_EMoflonEdge_102(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 102</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 102</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isAppropriate_FWD_EMoflonEdge_102(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__IsAppropriate_FWD_EMoflonEdge_102__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isApplicable_solveCsp_CC(sourcecode.While, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, sourcecode.Assignment, sourcecode.While, controlflow.Branch, sourcecode.Assignment, sourcecode.While, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isApplicable_solveCsp_CC(sourcecode.While, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, sourcecode.Assignment, sourcecode.While, controlflow.Branch, sourcecode.Assignment, sourcecode.While, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__IsApplicable_solveCsp_CC__While_Branch_Command_Branch_Command_Assignment_While_Branch_Assignment_While_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#checkDEC_FWD(sourcecode.While, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment, sourcecode.While) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#checkDEC_FWD(sourcecode.While, sourcecode.Assignment, sourcecode.While, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__CheckDEC_FWD__While_Assignment_While_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#checkDEC_BWD(controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#checkDEC_BWD(controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__CheckDEC_BWD__Branch_Command_Branch_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__GenerateModel_solveCsp_BWD__IsApplicableMatch_Branch_S2B_While_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileulul2branchubub#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileulul2branchubub__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb <em>whiled2branchb</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>whiled2branchb</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb
	 * @generated
	 */
	EClass getwhiled2branchb();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Decision) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Decision)
	 * @generated
	 */
	EOperation getwhiled2branchb__IsAppropriate_FWD__Match_While_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhiled2branchb__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhiled2branchb__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Decision) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Decision)
	 * @generated
	 */
	EOperation getwhiled2branchb__RegisterObjectsToMatch_FWD__Match_While_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Decision) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Decision)
	 * @generated
	 */
	EOperation getwhiled2branchb__IsAppropriate_solveCsp_FWD__Match_While_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhiled2branchb__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, sourcecode.Decision, controlflow.Branch) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, sourcecode.Decision, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhiled2branchb__IsApplicable_solveCsp_FWD__IsApplicableMatch_S2B_While_Decision_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhiled2branchb__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhiled2branchb__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhiled2branchb__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhiled2branchb__IsAppropriate_BWD__Match_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhiled2branchb__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhiled2branchb__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhiled2branchb__RegisterObjectsToMatch_BWD__Match_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhiled2branchb__IsAppropriate_solveCsp_BWD__Match_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhiled2branchb__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, sourcecode.While, controlflow.Branch) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, sourcecode.While, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhiled2branchb__IsApplicable_solveCsp_BWD__IsApplicableMatch_S2B_Branch_While_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhiled2branchb__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhiled2branchb__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhiled2branchb__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isAppropriate_BWD_EMoflonEdge_97(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 97</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 97</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isAppropriate_BWD_EMoflonEdge_97(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhiled2branchb__IsAppropriate_BWD_EMoflonEdge_97__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isAppropriate_FWD_EMoflonEdge_103(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 103</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 103</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isAppropriate_FWD_EMoflonEdge_103(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhiled2branchb__IsAppropriate_FWD_EMoflonEdge_103__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhiled2branchb__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhiled2branchb__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhiled2branchb__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isApplicable_solveCsp_CC(controlflow.Branch, sourcecode.While, sourcecode.Decision, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isApplicable_solveCsp_CC(controlflow.Branch, sourcecode.While, sourcecode.Decision, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhiled2branchb__IsApplicable_solveCsp_CC__Branch_While_Decision_Branch_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhiled2branchb__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#checkDEC_FWD(sourcecode.While, sourcecode.Decision) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#checkDEC_FWD(sourcecode.While, sourcecode.Decision)
	 * @generated
	 */
	EOperation getwhiled2branchb__CheckDEC_FWD__While_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#checkDEC_BWD(controlflow.Branch, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#checkDEC_BWD(controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhiled2branchb__CheckDEC_BWD__Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhiled2branchb__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getwhiled2branchb__GenerateModel_solveCsp_BWD__IsApplicableMatch_S2B_While_Branch_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiled2branchb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhiled2branchb__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd <em>decdecass2branchbranchcmd</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>decdecass2branchbranchcmd</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd
	 * @generated
	 */
	EClass getdecdecass2branchbranchcmd();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Decision, sourcecode.Assignment) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__IsAppropriate_FWD__Match_Decision_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Decision, sourcecode.Assignment) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__RegisterObjectsToMatch_FWD__Match_Decision_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Decision, sourcecode.Assignment) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__IsAppropriate_solveCsp_FWD__Match_Decision_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Decision, sourcecode.Decision, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, sourcecode.Assignment) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Decision, sourcecode.Decision, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__IsApplicable_solveCsp_FWD__IsApplicableMatch_Decision_Decision_S2B_Branch_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__IsAppropriate_BWD__Match_Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__RegisterObjectsToMatch_BWD__Match_Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__IsAppropriate_solveCsp_BWD__Match_Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Command, sourcecode.Decision, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, controlflow.Branch) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Command, sourcecode.Decision, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__IsApplicable_solveCsp_BWD__IsApplicableMatch_Command_Decision_S2B_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isAppropriate_BWD_EMoflonEdge_98(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 98</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 98</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isAppropriate_BWD_EMoflonEdge_98(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__IsAppropriate_BWD_EMoflonEdge_98__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isAppropriate_FWD_EMoflonEdge_104(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 104</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 104</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isAppropriate_FWD_EMoflonEdge_104(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__IsAppropriate_FWD_EMoflonEdge_104__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isApplicable_solveCsp_CC(controlflow.Command, sourcecode.Decision, sourcecode.Decision, controlflow.Branch, controlflow.Branch, sourcecode.Assignment, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isApplicable_solveCsp_CC(controlflow.Command, sourcecode.Decision, sourcecode.Decision, controlflow.Branch, controlflow.Branch, sourcecode.Assignment, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__IsApplicable_solveCsp_CC__Command_Decision_Decision_Branch_Branch_Assignment_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#checkDEC_FWD(sourcecode.Decision, sourcecode.Decision, sourcecode.Assignment) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#checkDEC_FWD(sourcecode.Decision, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__CheckDEC_FWD__Decision_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#checkDEC_BWD(controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#checkDEC_BWD(controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__CheckDEC_BWD__Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Decision, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Decision, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__GenerateModel_solveCsp_BWD__IsApplicableMatch_Decision_S2B_Branch_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decdecass2branchbranchcmd#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecdecass2branchbranchcmd__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch <em>uwhile2ubranch</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>uwhile2ubranch</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch
	 * @generated
	 */
	EClass getuwhile2ubranch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Statement, sourcecode.While) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Statement, sourcecode.While)
	 * @generated
	 */
	EOperation getuwhile2ubranch__IsAppropriate_FWD__Match_Assignment_Statement_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getuwhile2ubranch__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getuwhile2ubranch__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Statement, sourcecode.While) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Statement, sourcecode.While)
	 * @generated
	 */
	EOperation getuwhile2ubranch__RegisterObjectsToMatch_FWD__Match_Assignment_Statement_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Statement, sourcecode.While) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Statement, sourcecode.While)
	 * @generated
	 */
	EOperation getuwhile2ubranch__IsAppropriate_solveCsp_FWD__Match_Assignment_Statement_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getuwhile2ubranch__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Assignment, controlflow.Node, sourcecode.Statement, org.wbsilva.bx.sourcecode2controlflow.S2N, sourcecode.While) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Assignment, controlflow.Node, sourcecode.Statement, org.wbsilva.bx.sourcecode2controlflow.S2N, sourcecode.While)
	 * @generated
	 */
	EOperation getuwhile2ubranch__IsApplicable_solveCsp_FWD__IsApplicableMatch_Assignment_Node_Statement_S2N_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getuwhile2ubranch__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getuwhile2ubranch__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getuwhile2ubranch__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Node) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Node)
	 * @generated
	 */
	EOperation getuwhile2ubranch__IsAppropriate_BWD__Match_Command_Branch_Node();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getuwhile2ubranch__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getuwhile2ubranch__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Node) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Node)
	 * @generated
	 */
	EOperation getuwhile2ubranch__RegisterObjectsToMatch_BWD__Match_Command_Branch_Node();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Node) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Node)
	 * @generated
	 */
	EOperation getuwhile2ubranch__IsAppropriate_solveCsp_BWD__Match_Command_Branch_Node();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getuwhile2ubranch__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Command, controlflow.Branch, controlflow.Node, sourcecode.Statement, org.wbsilva.bx.sourcecode2controlflow.S2N) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Command, controlflow.Branch, controlflow.Node, sourcecode.Statement, org.wbsilva.bx.sourcecode2controlflow.S2N)
	 * @generated
	 */
	EOperation getuwhile2ubranch__IsApplicable_solveCsp_BWD__IsApplicableMatch_Command_Branch_Node_Statement_S2N();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getuwhile2ubranch__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getuwhile2ubranch__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getuwhile2ubranch__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isAppropriate_BWD_EMoflonEdge_99(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 99</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 99</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isAppropriate_BWD_EMoflonEdge_99(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getuwhile2ubranch__IsAppropriate_BWD_EMoflonEdge_99__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isAppropriate_FWD_EMoflonEdge_105(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 105</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 105</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isAppropriate_FWD_EMoflonEdge_105(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getuwhile2ubranch__IsAppropriate_FWD_EMoflonEdge_105__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getuwhile2ubranch__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getuwhile2ubranch__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getuwhile2ubranch__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isApplicable_solveCsp_CC(controlflow.Command, controlflow.Branch, sourcecode.Assignment, controlflow.Node, sourcecode.Statement, sourcecode.While, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isApplicable_solveCsp_CC(controlflow.Command, controlflow.Branch, sourcecode.Assignment, controlflow.Node, sourcecode.Statement, sourcecode.While, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getuwhile2ubranch__IsApplicable_solveCsp_CC__Command_Branch_Assignment_Node_Statement_While_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getuwhile2ubranch__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#checkDEC_FWD(sourcecode.Assignment, sourcecode.Statement, sourcecode.While) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#checkDEC_FWD(sourcecode.Assignment, sourcecode.Statement, sourcecode.While)
	 * @generated
	 */
	EOperation getuwhile2ubranch__CheckDEC_FWD__Assignment_Statement_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#checkDEC_BWD(controlflow.Command, controlflow.Branch, controlflow.Node) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#checkDEC_BWD(controlflow.Command, controlflow.Branch, controlflow.Node)
	 * @generated
	 */
	EOperation getuwhile2ubranch__CheckDEC_BWD__Command_Branch_Node();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2N) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2N)
	 * @generated
	 */
	EOperation getuwhile2ubranch__GenerateModel__RuleEntryContainer_S2N();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Node, sourcecode.Statement, org.wbsilva.bx.sourcecode2controlflow.S2N, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Node, sourcecode.Statement, org.wbsilva.bx.sourcecode2controlflow.S2N, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getuwhile2ubranch__GenerateModel_solveCsp_BWD__IsApplicableMatch_Node_Statement_S2N_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.uwhile2ubranch#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getuwhile2ubranch__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc <em>whileda2branchbc</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>whileda2branchbc</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc
	 * @generated
	 */
	EClass getwhileda2branchbc();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.While, sourcecode.Assignment) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhileda2branchbc__IsAppropriate_FWD__Match_Decision_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhileda2branchbc__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileda2branchbc__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.While, sourcecode.Assignment) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhileda2branchbc__RegisterObjectsToMatch_FWD__Match_Decision_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.While, sourcecode.Assignment) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Decision, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhileda2branchbc__IsAppropriate_solveCsp_FWD__Match_Decision_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileda2branchbc__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.Decision, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, sourcecode.Assignment) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, sourcecode.Decision, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhileda2branchbc__IsApplicable_solveCsp_FWD__IsApplicableMatch_Branch_Decision_S2B_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileda2branchbc__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhileda2branchbc__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileda2branchbc__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileda2branchbc__IsAppropriate_BWD__Match_Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhileda2branchbc__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileda2branchbc__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileda2branchbc__RegisterObjectsToMatch_BWD__Match_Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileda2branchbc__IsAppropriate_solveCsp_BWD__Match_Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileda2branchbc__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Command, controlflow.Branch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Command, controlflow.Branch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileda2branchbc__IsApplicable_solveCsp_BWD__IsApplicableMatch_Command_Branch_Branch_S2B_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileda2branchbc__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhileda2branchbc__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileda2branchbc__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isAppropriate_BWD_EMoflonEdge_100(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 100</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 100</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isAppropriate_BWD_EMoflonEdge_100(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhileda2branchbc__IsAppropriate_BWD_EMoflonEdge_100__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isAppropriate_FWD_EMoflonEdge_106(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 106</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 106</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isAppropriate_FWD_EMoflonEdge_106(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhileda2branchbc__IsAppropriate_FWD_EMoflonEdge_106__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhileda2branchbc__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhileda2branchbc__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileda2branchbc__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isApplicable_solveCsp_CC(controlflow.Command, controlflow.Branch, sourcecode.Decision, controlflow.Branch, sourcecode.While, sourcecode.Assignment, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isApplicable_solveCsp_CC(controlflow.Command, controlflow.Branch, sourcecode.Decision, controlflow.Branch, sourcecode.While, sourcecode.Assignment, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileda2branchbc__IsApplicable_solveCsp_CC__Command_Branch_Decision_Branch_While_Assignment_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileda2branchbc__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#checkDEC_FWD(sourcecode.Decision, sourcecode.While, sourcecode.Assignment) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#checkDEC_FWD(sourcecode.Decision, sourcecode.While, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getwhileda2branchbc__CheckDEC_FWD__Decision_While_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#checkDEC_BWD(controlflow.Command, controlflow.Branch, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#checkDEC_BWD(controlflow.Command, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhileda2branchbc__CheckDEC_BWD__Command_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhileda2branchbc__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.While, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getwhileda2branchbc__GenerateModel_solveCsp_BWD__IsApplicableMatch_Branch_S2B_While_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileda2branchbc#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileda2branchbc__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb <em>whileull2branchubb</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>whileull2branchubb</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb
	 * @generated
	 */
	EClass getwhileull2branchubb();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.While) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileull2branchubb__IsAppropriate_FWD__Match_Assignment_While_While_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhileull2branchubb__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileull2branchubb__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.While) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileull2branchubb__RegisterObjectsToMatch_FWD__Match_Assignment_While_While_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.While) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileull2branchubb__IsAppropriate_solveCsp_FWD__Match_Assignment_While_While_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileull2branchubb__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment, controlflow.Branch, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment, controlflow.Branch, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhileull2branchubb__IsApplicable_solveCsp_FWD__IsApplicableMatch_Assignment_While_While_Assignment_Branch_While_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileull2branchubb__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhileull2branchubb__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileull2branchubb__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Command) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Command)
	 * @generated
	 */
	EOperation getwhileull2branchubb__IsAppropriate_BWD__Match_Branch_Command_Branch_Branch_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhileull2branchubb__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileull2branchubb__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Command) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Command)
	 * @generated
	 */
	EOperation getwhileull2branchubb__RegisterObjectsToMatch_BWD__Match_Branch_Command_Branch_Branch_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Command) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Command)
	 * @generated
	 */
	EOperation getwhileull2branchubb__IsAppropriate_solveCsp_BWD__Match_Branch_Command_Branch_Branch_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileull2branchubb__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, controlflow.Command, controlflow.Branch, sourcecode.While, controlflow.Branch, controlflow.Command, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, controlflow.Command, controlflow.Branch, sourcecode.While, controlflow.Branch, controlflow.Command, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhileull2branchubb__IsApplicable_solveCsp_BWD__IsApplicableMatch_Branch_Command_Branch_While_Branch_Command_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileull2branchubb__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhileull2branchubb__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileull2branchubb__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isAppropriate_BWD_EMoflonEdge_101(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 101</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 101</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isAppropriate_BWD_EMoflonEdge_101(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhileull2branchubb__IsAppropriate_BWD_EMoflonEdge_101__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isAppropriate_FWD_EMoflonEdge_107(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 107</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 107</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isAppropriate_FWD_EMoflonEdge_107(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhileull2branchubb__IsAppropriate_FWD_EMoflonEdge_107__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhileull2branchubb__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhileull2branchubb__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileull2branchubb__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isApplicable_solveCsp_CC(controlflow.Branch, sourcecode.Assignment, controlflow.Command, controlflow.Branch, sourcecode.While, sourcecode.While, sourcecode.Assignment, controlflow.Branch, controlflow.Command, sourcecode.While, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isApplicable_solveCsp_CC(controlflow.Branch, sourcecode.Assignment, controlflow.Command, controlflow.Branch, sourcecode.While, sourcecode.While, sourcecode.Assignment, controlflow.Branch, controlflow.Command, sourcecode.While, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileull2branchubb__IsApplicable_solveCsp_CC__Branch_Assignment_Command_Branch_While_While_Assignment_Branch_Command_While_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileull2branchubb__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#checkDEC_FWD(sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.While) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#checkDEC_FWD(sourcecode.Assignment, sourcecode.While, sourcecode.While, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileull2branchubb__CheckDEC_FWD__Assignment_While_While_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#checkDEC_BWD(controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Command) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#checkDEC_BWD(controlflow.Branch, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Command)
	 * @generated
	 */
	EOperation getwhileull2branchubb__CheckDEC_BWD__Branch_Command_Branch_Branch_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhileull2branchubb__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.While, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.While, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getwhileull2branchubb__GenerateModel_solveCsp_BWD__IsApplicableMatch_While_Branch_S2B_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileull2branchubb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileull2branchubb__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb <em>decal2branchcb</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>decal2branchcb</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb
	 * @generated
	 */
	EClass getdecal2branchcb();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.Decision, sourcecode.Assignment) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecal2branchcb__IsAppropriate_FWD__Match_While_Assignment_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecal2branchcb__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecal2branchcb__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.Decision, sourcecode.Assignment) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecal2branchcb__RegisterObjectsToMatch_FWD__Match_While_Assignment_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.Decision, sourcecode.Assignment) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecal2branchcb__IsAppropriate_solveCsp_FWD__Match_While_Assignment_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecal2branchcb__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.While, sourcecode.Assignment, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, sourcecode.Assignment) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.While, sourcecode.Assignment, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecal2branchcb__IsApplicable_solveCsp_FWD__IsApplicableMatch_While_Assignment_Branch_S2B_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecal2branchcb__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecal2branchcb__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecal2branchcb__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecal2branchcb__IsAppropriate_BWD__Match_Branch_Command_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getdecal2branchcb__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecal2branchcb__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecal2branchcb__RegisterObjectsToMatch_BWD__Match_Branch_Command_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecal2branchcb__IsAppropriate_solveCsp_BWD__Match_Branch_Command_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecal2branchcb__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, controlflow.Command, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Command, controlflow.Branch) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, controlflow.Command, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecal2branchcb__IsApplicable_solveCsp_BWD__IsApplicableMatch_Branch_Command_S2B_Decision_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecal2branchcb__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getdecal2branchcb__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecal2branchcb__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isAppropriate_BWD_EMoflonEdge_102(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 102</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 102</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isAppropriate_BWD_EMoflonEdge_102(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecal2branchcb__IsAppropriate_BWD_EMoflonEdge_102__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isAppropriate_FWD_EMoflonEdge_108(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 108</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 108</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isAppropriate_FWD_EMoflonEdge_108(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getdecal2branchcb__IsAppropriate_FWD_EMoflonEdge_108__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecal2branchcb__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getdecal2branchcb__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecal2branchcb__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isApplicable_solveCsp_CC(sourcecode.While, sourcecode.Assignment, controlflow.Branch, controlflow.Command, sourcecode.Decision, controlflow.Command, sourcecode.Assignment, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isApplicable_solveCsp_CC(sourcecode.While, sourcecode.Assignment, controlflow.Branch, controlflow.Command, sourcecode.Decision, controlflow.Command, sourcecode.Assignment, controlflow.Branch, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getdecal2branchcb__IsApplicable_solveCsp_CC__While_Assignment_Branch_Command_Decision_Command_Assignment_Branch_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecal2branchcb__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#checkDEC_FWD(sourcecode.While, sourcecode.Assignment, sourcecode.Decision, sourcecode.Assignment) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#checkDEC_FWD(sourcecode.While, sourcecode.Assignment, sourcecode.Decision, sourcecode.Assignment)
	 * @generated
	 */
	EOperation getdecal2branchcb__CheckDEC_FWD__While_Assignment_Decision_Assignment();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#checkDEC_BWD(controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#checkDEC_BWD(controlflow.Branch, controlflow.Command, controlflow.Command, controlflow.Branch)
	 * @generated
	 */
	EOperation getdecal2branchcb__CheckDEC_BWD__Branch_Command_Command_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getdecal2branchcb__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, sourcecode.Decision, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getdecal2branchcb__GenerateModel_solveCsp_BWD__IsApplicableMatch_Branch_S2B_Decision_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.decal2branchcb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getdecal2branchcb__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd <em>firstass2rootcmd</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>firstass2rootcmd</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd
	 * @generated
	 */
	EClass getfirstass2rootcmd();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Program) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Program)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__IsAppropriate_FWD__Match_Assignment_Program();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Program) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Program)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__RegisterObjectsToMatch_FWD__Match_Assignment_Program();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Program) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Assignment, sourcecode.Program)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__IsAppropriate_solveCsp_FWD__Match_Assignment_Program();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.P2G, controlflow.Graph, sourcecode.Assignment, sourcecode.Program) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.P2G, controlflow.Graph, sourcecode.Assignment, sourcecode.Program)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__IsApplicable_solveCsp_FWD__IsApplicableMatch_P2G_Graph_Assignment_Program();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Graph) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Graph)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__IsAppropriate_BWD__Match_Command_Graph();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Graph) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Graph)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__RegisterObjectsToMatch_BWD__Match_Command_Graph();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Graph) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Graph)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__IsAppropriate_solveCsp_BWD__Match_Command_Graph();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.P2G, controlflow.Command, controlflow.Graph, sourcecode.Program) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.P2G, controlflow.Command, controlflow.Graph, sourcecode.Program)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__IsApplicable_solveCsp_BWD__IsApplicableMatch_P2G_Command_Graph_Program();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isAppropriate_BWD_EMoflonEdge_103(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 103</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 103</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isAppropriate_BWD_EMoflonEdge_103(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__IsAppropriate_BWD_EMoflonEdge_103__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isAppropriate_FWD_EMoflonEdge_109(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 109</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 109</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isAppropriate_FWD_EMoflonEdge_109(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__IsAppropriate_FWD_EMoflonEdge_109__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isApplicable_solveCsp_CC(controlflow.Command, controlflow.Graph, sourcecode.Assignment, sourcecode.Program, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isApplicable_solveCsp_CC(controlflow.Command, controlflow.Graph, sourcecode.Assignment, sourcecode.Program, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__IsApplicable_solveCsp_CC__Command_Graph_Assignment_Program_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#checkDEC_FWD(sourcecode.Assignment, sourcecode.Program) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#checkDEC_FWD(sourcecode.Assignment, sourcecode.Program)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__CheckDEC_FWD__Assignment_Program();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#checkDEC_BWD(controlflow.Command, controlflow.Graph) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#checkDEC_BWD(controlflow.Command, controlflow.Graph)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__CheckDEC_BWD__Command_Graph();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.P2G) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.P2G)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__GenerateModel__RuleEntryContainer_P2G();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.P2G, controlflow.Graph, sourcecode.Program, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, org.wbsilva.bx.sourcecode2controlflow.P2G, controlflow.Graph, sourcecode.Program, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__GenerateModel_solveCsp_BWD__IsApplicableMatch_P2G_Graph_Program_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstass2rootcmd#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getfirstass2rootcmd__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub <em>whileul2branchub</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>whileul2branchub</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub
	 * @generated
	 */
	EClass getwhileul2branchub();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.While) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileul2branchub__IsAppropriate_FWD__Match_While_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhileul2branchub__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileul2branchub__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.While) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileul2branchub__RegisterObjectsToMatch_FWD__Match_While_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.While) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileul2branchub__IsAppropriate_solveCsp_FWD__Match_While_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileul2branchub__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.While, controlflow.Branch, sourcecode.Assignment, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.While, controlflow.Branch, sourcecode.Assignment, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhileul2branchub__IsApplicable_solveCsp_FWD__IsApplicableMatch_While_Branch_Assignment_While_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileul2branchub__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhileul2branchub__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileul2branchub__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command)
	 * @generated
	 */
	EOperation getwhileul2branchub__IsAppropriate_BWD__Match_Branch_Branch_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhileul2branchub__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileul2branchub__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command)
	 * @generated
	 */
	EOperation getwhileul2branchub__RegisterObjectsToMatch_BWD__Match_Branch_Branch_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Branch, controlflow.Branch, controlflow.Command)
	 * @generated
	 */
	EOperation getwhileul2branchub__IsAppropriate_solveCsp_BWD__Match_Branch_Branch_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileul2branchub__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.While, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, controlflow.Command) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.While, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, controlflow.Command)
	 * @generated
	 */
	EOperation getwhileul2branchub__IsApplicable_solveCsp_BWD__IsApplicableMatch_While_Branch_S2B_Branch_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileul2branchub__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhileul2branchub__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileul2branchub__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isAppropriate_BWD_EMoflonEdge_104(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 104</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 104</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isAppropriate_BWD_EMoflonEdge_104(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhileul2branchub__IsAppropriate_BWD_EMoflonEdge_104__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isAppropriate_FWD_EMoflonEdge_110(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 110</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 110</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isAppropriate_FWD_EMoflonEdge_110(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhileul2branchub__IsAppropriate_FWD_EMoflonEdge_110__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhileul2branchub__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhileul2branchub__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileul2branchub__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isApplicable_solveCsp_CC(sourcecode.While, controlflow.Branch, sourcecode.Assignment, sourcecode.While, controlflow.Branch, controlflow.Command, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isApplicable_solveCsp_CC(sourcecode.While, controlflow.Branch, sourcecode.Assignment, sourcecode.While, controlflow.Branch, controlflow.Command, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhileul2branchub__IsApplicable_solveCsp_CC__While_Branch_Assignment_While_Branch_Command_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileul2branchub__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#checkDEC_FWD(sourcecode.While, sourcecode.Assignment, sourcecode.While) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#checkDEC_FWD(sourcecode.While, sourcecode.Assignment, sourcecode.While)
	 * @generated
	 */
	EOperation getwhileul2branchub__CheckDEC_FWD__While_Assignment_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#checkDEC_BWD(controlflow.Branch, controlflow.Branch, controlflow.Command) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#checkDEC_BWD(controlflow.Branch, controlflow.Branch, controlflow.Command)
	 * @generated
	 */
	EOperation getwhileul2branchub__CheckDEC_BWD__Branch_Branch_Command();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhileul2branchub__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.While, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.While, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getwhileul2branchub__GenerateModel_solveCsp_BWD__IsApplicableMatch_While_Branch_S2B_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whileul2branchub#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhileul2branchub__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb <em>whiledl2branchbb</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>whiledl2branchbb</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb
	 * @generated
	 */
	EClass getwhiledl2branchbb();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.Decision, sourcecode.While) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.Decision, sourcecode.While)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__IsAppropriate_FWD__Match_While_Assignment_Decision_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.Decision, sourcecode.While) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.Decision, sourcecode.While)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__RegisterObjectsToMatch_FWD__Match_While_Assignment_Decision_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.Decision, sourcecode.While) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.While, sourcecode.Assignment, sourcecode.Decision, sourcecode.While)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__IsAppropriate_solveCsp_FWD__Match_While_Assignment_Decision_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.While, sourcecode.Assignment, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, sourcecode.Decision, sourcecode.While) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.While, sourcecode.Assignment, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, sourcecode.Decision, sourcecode.While)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__IsApplicable_solveCsp_FWD__IsApplicableMatch_While_Assignment_S2B_Branch_Decision_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__IsAppropriate_BWD__Match_Command_Branch_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__RegisterObjectsToMatch_BWD__Match_Command_Branch_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__IsAppropriate_solveCsp_BWD__Match_Command_Branch_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Command, sourcecode.While, controlflow.Branch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Command, sourcecode.While, controlflow.Branch, controlflow.Branch, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__IsApplicable_solveCsp_BWD__IsApplicableMatch_Command_While_Branch_Branch_S2B_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isAppropriate_BWD_EMoflonEdge_105(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 105</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 105</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isAppropriate_BWD_EMoflonEdge_105(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__IsAppropriate_BWD_EMoflonEdge_105__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isAppropriate_FWD_EMoflonEdge_111(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 111</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 111</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isAppropriate_FWD_EMoflonEdge_111(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__IsAppropriate_FWD_EMoflonEdge_111__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isApplicable_solveCsp_CC(controlflow.Command, sourcecode.While, sourcecode.Assignment, controlflow.Branch, controlflow.Branch, controlflow.Branch, sourcecode.Decision, sourcecode.While, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isApplicable_solveCsp_CC(controlflow.Command, sourcecode.While, sourcecode.Assignment, controlflow.Branch, controlflow.Branch, controlflow.Branch, sourcecode.Decision, sourcecode.While, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__IsApplicable_solveCsp_CC__Command_While_Assignment_Branch_Branch_Branch_Decision_While_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#checkDEC_FWD(sourcecode.While, sourcecode.Assignment, sourcecode.Decision, sourcecode.While) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#checkDEC_FWD(sourcecode.While, sourcecode.Assignment, sourcecode.Decision, sourcecode.While)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__CheckDEC_FWD__While_Assignment_Decision_While();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#checkDEC_BWD(controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#checkDEC_BWD(controlflow.Command, controlflow.Branch, controlflow.Branch, controlflow.Branch)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__CheckDEC_BWD__Command_Branch_Branch_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.S2B)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__GenerateModel__RuleEntryContainer_S2B();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, sourcecode.While, org.wbsilva.bx.sourcecode2controlflow.S2B, controlflow.Branch, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__GenerateModel_solveCsp_BWD__IsApplicableMatch_While_S2B_Branch_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.whiledl2branchbb#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getwhiledl2branchbb__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for class '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch <em>firstdecision2firstbranch</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>firstdecision2firstbranch</em>'.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch
	 * @generated
	 */
	EClass getfirstdecision2firstbranch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Program, sourcecode.Decision) <em>Is Appropriate FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isAppropriate_FWD(org.moflon.tgg.runtime.Match, sourcecode.Program, sourcecode.Decision)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__IsAppropriate_FWD__Match_Program_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#perform_FWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__Perform_FWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isApplicable_FWD(org.moflon.tgg.runtime.Match) <em>Is Applicable FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isApplicable_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__IsApplicable_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Program, sourcecode.Decision) <em>Register Objects To Match FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#registerObjectsToMatch_FWD(org.moflon.tgg.runtime.Match, sourcecode.Program, sourcecode.Decision)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__RegisterObjectsToMatch_FWD__Match_Program_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Program, sourcecode.Decision) <em>Is Appropriate solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isAppropriate_solveCsp_FWD(org.moflon.tgg.runtime.Match, sourcecode.Program, sourcecode.Decision)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__IsAppropriate_solveCsp_FWD__Match_Program_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isAppropriate_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__IsAppropriate_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Graph, org.wbsilva.bx.sourcecode2controlflow.P2G, sourcecode.Program, sourcecode.Decision) <em>Is Applicable solve Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isApplicable_solveCsp_FWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Graph, org.wbsilva.bx.sourcecode2controlflow.P2G, sourcecode.Program, sourcecode.Decision)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__IsApplicable_solveCsp_FWD__IsApplicableMatch_Graph_P2G_Program_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isApplicable_checkCsp_FWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__IsApplicable_checkCsp_FWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#registerObjects_FWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__RegisterObjects_FWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#checkTypes_FWD(org.moflon.tgg.runtime.Match) <em>Check Types FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#checkTypes_FWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__CheckTypes_FWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Graph, controlflow.Branch) <em>Is Appropriate BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isAppropriate_BWD(org.moflon.tgg.runtime.Match, controlflow.Graph, controlflow.Branch)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__IsAppropriate_BWD__Match_Graph_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch) <em>Perform BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Perform BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#perform_BWD(org.moflon.tgg.runtime.IsApplicableMatch)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__Perform_BWD__IsApplicableMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isApplicable_BWD(org.moflon.tgg.runtime.Match) <em>Is Applicable BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isApplicable_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__IsApplicable_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Graph, controlflow.Branch) <em>Register Objects To Match BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects To Match BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#registerObjectsToMatch_BWD(org.moflon.tgg.runtime.Match, controlflow.Graph, controlflow.Branch)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__RegisterObjectsToMatch_BWD__Match_Graph_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Graph, controlflow.Branch) <em>Is Appropriate solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isAppropriate_solveCsp_BWD(org.moflon.tgg.runtime.Match, controlflow.Graph, controlflow.Branch)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__IsAppropriate_solveCsp_BWD__Match_Graph_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Appropriate check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isAppropriate_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__IsAppropriate_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Graph, org.wbsilva.bx.sourcecode2controlflow.P2G, sourcecode.Program, controlflow.Branch) <em>Is Applicable solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isApplicable_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Graph, org.wbsilva.bx.sourcecode2controlflow.P2G, sourcecode.Program, controlflow.Branch)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__IsApplicable_solveCsp_BWD__IsApplicableMatch_Graph_P2G_Program_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isApplicable_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__IsApplicable_checkCsp_BWD__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject) <em>Register Objects BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Register Objects BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#registerObjects_BWD(org.moflon.tgg.runtime.PerformRuleResult, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__RegisterObjects_BWD__PerformRuleResult_EObject_EObject_EObject_EObject_EObject_EObject();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#checkTypes_BWD(org.moflon.tgg.runtime.Match) <em>Check Types BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Types BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#checkTypes_BWD(org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__CheckTypes_BWD__Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isAppropriate_BWD_EMoflonEdge_106(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate BWD EMoflon Edge 106</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate BWD EMoflon Edge 106</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isAppropriate_BWD_EMoflonEdge_106(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__IsAppropriate_BWD_EMoflonEdge_106__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isAppropriate_FWD_EMoflonEdge_112(org.moflon.tgg.runtime.EMoflonEdge) <em>Is Appropriate FWD EMoflon Edge 112</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Appropriate FWD EMoflon Edge 112</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isAppropriate_FWD_EMoflonEdge_112(org.moflon.tgg.runtime.EMoflonEdge)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__IsAppropriate_FWD_EMoflonEdge_112__EMoflonEdge();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#checkAttributes_FWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__CheckAttributes_FWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch) <em>Check Attributes BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check Attributes BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#checkAttributes_BWD(org.moflon.tgg.runtime.TripleMatch)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__CheckAttributes_BWD__TripleMatch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isApplicable_CC(org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__IsApplicable_CC__Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isApplicable_solveCsp_CC(controlflow.Graph, sourcecode.Program, controlflow.Branch, sourcecode.Decision, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match) <em>Is Applicable solve Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable solve Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isApplicable_solveCsp_CC(controlflow.Graph, sourcecode.Program, controlflow.Branch, sourcecode.Decision, org.moflon.tgg.runtime.Match, org.moflon.tgg.runtime.Match)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__IsApplicable_solveCsp_CC__Graph_Program_Branch_Decision_Match_Match();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP) <em>Is Applicable check Csp CC</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Applicable check Csp CC</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#isApplicable_checkCsp_CC(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__IsApplicable_checkCsp_CC__CSP();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#checkDEC_FWD(sourcecode.Program, sourcecode.Decision) <em>Check DEC FWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC FWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#checkDEC_FWD(sourcecode.Program, sourcecode.Decision)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__CheckDEC_FWD__Program_Decision();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#checkDEC_BWD(controlflow.Graph, controlflow.Branch) <em>Check DEC BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Check DEC BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#checkDEC_BWD(controlflow.Graph, controlflow.Branch)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__CheckDEC_BWD__Graph_Branch();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.P2G) <em>Generate Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#generateModel(org.moflon.tgg.language.modelgenerator.RuleEntryContainer, org.wbsilva.bx.sourcecode2controlflow.P2G)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__GenerateModel__RuleEntryContainer_P2G();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Graph, org.wbsilva.bx.sourcecode2controlflow.P2G, sourcecode.Program, org.moflon.tgg.runtime.ModelgeneratorRuleResult) <em>Generate Model solve Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model solve Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#generateModel_solveCsp_BWD(org.moflon.tgg.runtime.IsApplicableMatch, controlflow.Graph, org.wbsilva.bx.sourcecode2controlflow.P2G, sourcecode.Program, org.moflon.tgg.runtime.ModelgeneratorRuleResult)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__GenerateModel_solveCsp_BWD__IsApplicableMatch_Graph_P2G_Program_ModelgeneratorRuleResult();

	/**
	 * Returns the meta object for the '{@link org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP) <em>Generate Model check Csp BWD</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Generate Model check Csp BWD</em>' operation.
	 * @see org.wbsilva.bx.sourcecode2controlflow.Rules.firstdecision2firstbranch#generateModel_checkCsp_BWD(org.moflon.tgg.language.csp.CSP)
	 * @generated
	 */
	EOperation getfirstdecision2firstbranch__GenerateModel_checkCsp_BWD__CSP();

	/**
	 * Returns the factory that creates the instances of the model.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the factory that creates the instances of the model.
	 * @generated
	 */
	RulesFactory getRulesFactory();

} //RulesPackage
